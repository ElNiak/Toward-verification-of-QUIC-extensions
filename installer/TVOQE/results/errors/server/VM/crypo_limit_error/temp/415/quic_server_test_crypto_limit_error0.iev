SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quic-go
[1,0,0,238,3,3,27,83,114,191,105,38,197,222,149,106,187,210,97,70,116,9,179,29,35,103,117,48,223,213,76,143,37,118,100,33,93,97,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,242,218,214,197,248,166,246,56,8,85,61,81,134,55,219,113,29,150,61,255,212,91,5,152,161,118,153,81,245,130,188,155,82,47,37,41,251,240,1,162,70,86,133,103,62,3,47,23,31,200,31,199,232,255,17,135,159,57,231,154,240,155,192,127,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,128,11,119,242,1,4,128,11,119,240,6,2,96,0,7,4,128,11,119,242,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,184,32]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x1b5372bf,random_bytes:[0x69,0x26,0xc5,0xde,0x95,0x6a,0xbb,0xd2,0x61,0x46,0x74,0x9,0xb3,0x1d,0x23,0x67,0x75,0x30,0xdf,0xd5,0x4c,0x8f,0x25,0x76,0x64,0x21,0x5d,0x61]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xf2,0xda,0xd6,0xc5,0xf8,0xa6,0xf6,0x38,0x8,0x55,0x3d,0x51,0x86,0x37,0xdb,0x71,0x1d,0x96,0x3d,0xff,0xd4,0x5b,0x5,0x98,0xa1,0x76,0x99,0x51,0xf5,0x82,0xbc,0x9b,0x52,0x2f,0x25,0x29,0xfb,0xf0,0x1,0xa2,0x46,0x56,0x85,0x67,0x3e,0x3,0x2f,0x17,0x1f,0xc8,0x1f,0xc7,0xe8,0xff,0x11,0x87,0x9f,0x39,0xe7,0x9a,0xf0,0x9b,0xc0,0x7f]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xb77f2}},{max_idle_timeout:{seconds_16:0xb77f0}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xb77f2}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xb820}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x1b,0x53,0x72,0xbf,0x69,0x26,0xc5,0xde,0x95,0x6a,0xbb,0xd2,0x61,0x46,0x74,0x9,0xb3,0x1d,0x23,0x67,0x75,0x30,0xdf,0xd5,0x4c,0x8f,0x25,0x76,0x64,0x21,0x5d,0x61,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xf2,0xda,0xd6,0xc5,0xf8,0xa6,0xf6,0x38,0x8,0x55,0x3d,0x51,0x86,0x37,0xdb,0x71,0x1d,0x96,0x3d,0xff,0xd4,0x5b,0x5,0x98,0xa1,0x76,0x99,0x51,0xf5,0x82,0xbc,0x9b,0x52,0x2f,0x25,0x29,0xfb,0xf0,0x1,0xa2,0x46,0x56,0x85,0x67,0x3e,0x3,0x2f,0x17,0x1f,0xc8,0x1f,0xc7,0xe8,0xff,0x11,0x87,0x9f,0x39,0xe7,0x9a,0xf0,0x9b,0xc0,0x7f,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x80,0xb,0x77,0xf2,0x1,0x4,0x80,0xb,0x77,0xf0,0x6,0x2,0x60,0,0x7,0x4,0x80,0xb,0x77,0xf2,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xb8,0x20],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x22,0xc5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0xdf,0x4e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0x6b,0xc7]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0x2d,0xe]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4,0xae,0x62]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xcc,0xac]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x8a,0x96]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0x7a,0x10]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0x83,0x99]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0xb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0x5d,0x71]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x7d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0x3c,0xb9]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0xb4]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x65]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0x71]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0x7d,0x5a]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x88]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x6,0x60]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66,0x59]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0x8d,0xc8]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0x6c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0x4b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0xf7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x19,0xbb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21,0xde,0xa0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0x6e]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0x19]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0xb0]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0x13,0xdd]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x9]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0xb8,0x82]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b,0xac,0xef]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0x62]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0xe6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0xd1,0xe9]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x48,0xf]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0xaa]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0xf4,0x50]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35,0xc9,0x71]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x41]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0x2c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8,0x52,0x24]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29,0x20]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x6f]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0x2a,0x24]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0x73]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0xf8]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x57]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x83,0xcb]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0x73,0x2f]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x21,0xba]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0x5d,0xe6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0xa8,0xb9]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0x35,0x41]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0xc2,0x8b]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x62]},1,2,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
