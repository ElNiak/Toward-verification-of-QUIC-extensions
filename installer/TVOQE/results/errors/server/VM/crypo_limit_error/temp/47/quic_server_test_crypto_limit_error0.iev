SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,238,3,3,104,218,97,60,115,229,181,5,170,233,159,145,163,113,240,206,162,54,16,28,28,170,96,248,99,97,45,4,109,246,34,9,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,250,156,90,9,251,81,53,18,54,231,200,6,12,50,153,188,151,180,121,250,229,148,79,43,210,154,224,164,190,106,96,14,182,195,254,170,114,22,105,146,2,240,3,74,113,240,157,3,247,50,51,56,112,206,205,133,94,182,103,32,190,128,111,37,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,136,57,14,129,1,4,136,57,14,125,6,2,96,0,7,4,136,57,14,129,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,239,101]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x68da613c,random_bytes:[0x73,0xe5,0xb5,0x5,0xaa,0xe9,0x9f,0x91,0xa3,0x71,0xf0,0xce,0xa2,0x36,0x10,0x1c,0x1c,0xaa,0x60,0xf8,0x63,0x61,0x2d,0x4,0x6d,0xf6,0x22,0x9]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xfa,0x9c,0x5a,0x9,0xfb,0x51,0x35,0x12,0x36,0xe7,0xc8,0x6,0xc,0x32,0x99,0xbc,0x97,0xb4,0x79,0xfa,0xe5,0x94,0x4f,0x2b,0xd2,0x9a,0xe0,0xa4,0xbe,0x6a,0x60,0xe,0xb6,0xc3,0xfe,0xaa,0x72,0x16,0x69,0x92,0x2,0xf0,0x3,0x4a,0x71,0xf0,0x9d,0x3,0xf7,0x32,0x33,0x38,0x70,0xce,0xcd,0x85,0x5e,0xb6,0x67,0x20,0xbe,0x80,0x6f,0x25]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x8390e81}},{max_idle_timeout:{seconds_16:0x8390e7d}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x8390e81}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xef65}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x68,0xda,0x61,0x3c,0x73,0xe5,0xb5,0x5,0xaa,0xe9,0x9f,0x91,0xa3,0x71,0xf0,0xce,0xa2,0x36,0x10,0x1c,0x1c,0xaa,0x60,0xf8,0x63,0x61,0x2d,0x4,0x6d,0xf6,0x22,0x9,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xfa,0x9c,0x5a,0x9,0xfb,0x51,0x35,0x12,0x36,0xe7,0xc8,0x6,0xc,0x32,0x99,0xbc,0x97,0xb4,0x79,0xfa,0xe5,0x94,0x4f,0x2b,0xd2,0x9a,0xe0,0xa4,0xbe,0x6a,0x60,0xe,0xb6,0xc3,0xfe,0xaa,0x72,0x16,0x69,0x92,0x2,0xf0,0x3,0x4a,0x71,0xf0,0x9d,0x3,0xf7,0x32,0x33,0x38,0x70,0xce,0xcd,0x85,0x5e,0xb6,0x67,0x20,0xbe,0x80,0x6f,0x25,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x88,0x39,0xe,0x81,0x1,0x4,0x88,0x39,0xe,0x7d,0x6,0x2,0x60,0,0x7,0x4,0x88,0x39,0xe,0x81,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xef,0x65],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x47,0x8e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0x5b,0x50]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7,0x6a]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0x28,0xbf]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35,0xbb,0xa7]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0x36,0xa3]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x47]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0xdb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0x7d,0x43]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0x53,0xc6]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0xc9]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x4b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0xf3]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0xcd]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x59,0x9]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36,0xc5]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x53,0x1f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36,0xad,0x9a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0x2d,0x3b]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0x76]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x1,0xfc]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0xb4]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0x49,0x46]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0xc6]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0x5d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0x8c,0xe1]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0x52]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0x55,0x1b]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0xe,0x64]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b,0xe5,0x7b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x13,0xa2]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0xd4,0x10]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0xaa]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x55]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0xcc,0xac]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0x42,0xeb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0xc,0xca]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0x36,0xc6]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55,0x1e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x9c]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3,0xcd]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0x93,0xf1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x34,0xaa]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0x47,0x46]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44,0x39,0x6e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x8b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0x4]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0x17]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0xfb,0x1e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0xd5,0xc0]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0xa1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x64,0x31]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
