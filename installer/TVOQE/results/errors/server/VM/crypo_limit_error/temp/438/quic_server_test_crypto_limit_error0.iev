SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quic-go
[1,0,0,238,3,3,81,25,149,148,117,229,152,175,229,16,101,251,238,115,33,155,151,29,120,226,242,88,48,226,228,149,92,93,178,163,145,191,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,192,132,90,102,241,243,72,232,191,43,94,195,186,147,134,187,27,179,33,14,36,219,30,27,85,253,7,177,233,38,26,154,149,167,66,79,242,16,165,203,232,123,241,197,231,239,178,91,11,168,67,142,222,106,64,10,39,81,113,182,167,160,119,230,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,132,216,87,110,1,4,132,216,87,109,6,2,96,0,7,4,132,216,87,110,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,106,209]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x51199594,random_bytes:[0x75,0xe5,0x98,0xaf,0xe5,0x10,0x65,0xfb,0xee,0x73,0x21,0x9b,0x97,0x1d,0x78,0xe2,0xf2,0x58,0x30,0xe2,0xe4,0x95,0x5c,0x5d,0xb2,0xa3,0x91,0xbf]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xc0,0x84,0x5a,0x66,0xf1,0xf3,0x48,0xe8,0xbf,0x2b,0x5e,0xc3,0xba,0x93,0x86,0xbb,0x1b,0xb3,0x21,0xe,0x24,0xdb,0x1e,0x1b,0x55,0xfd,0x7,0xb1,0xe9,0x26,0x1a,0x9a,0x95,0xa7,0x42,0x4f,0xf2,0x10,0xa5,0xcb,0xe8,0x7b,0xf1,0xc5,0xe7,0xef,0xb2,0x5b,0xb,0xa8,0x43,0x8e,0xde,0x6a,0x40,0xa,0x27,0x51,0x71,0xb6,0xa7,0xa0,0x77,0xe6]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x4d8576e}},{max_idle_timeout:{seconds_16:0x4d8576d}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x4d8576e}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x6ad1}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x51,0x19,0x95,0x94,0x75,0xe5,0x98,0xaf,0xe5,0x10,0x65,0xfb,0xee,0x73,0x21,0x9b,0x97,0x1d,0x78,0xe2,0xf2,0x58,0x30,0xe2,0xe4,0x95,0x5c,0x5d,0xb2,0xa3,0x91,0xbf,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xc0,0x84,0x5a,0x66,0xf1,0xf3,0x48,0xe8,0xbf,0x2b,0x5e,0xc3,0xba,0x93,0x86,0xbb,0x1b,0xb3,0x21,0xe,0x24,0xdb,0x1e,0x1b,0x55,0xfd,0x7,0xb1,0xe9,0x26,0x1a,0x9a,0x95,0xa7,0x42,0x4f,0xf2,0x10,0xa5,0xcb,0xe8,0x7b,0xf1,0xc5,0xe7,0xef,0xb2,0x5b,0xb,0xa8,0x43,0x8e,0xde,0x6a,0x40,0xa,0x27,0x51,0x71,0xb6,0xa7,0xa0,0x77,0xe6,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x84,0xd8,0x57,0x6e,0x1,0x4,0x84,0xd8,0x57,0x6d,0x6,0x2,0x60,0,0x7,0x4,0x84,0xd8,0x57,0x6e,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x6a,0xd1],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x5d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0xec]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71,0xb1,0x1d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0x26,0x2b]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0x77,0xe5]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x52,0x1d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55,0x6d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0x48]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x3c,0x8c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81,0x30]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x6c,0x9f]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0xec]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13,0x79,0x1f]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x56,0x66]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0x3c,0x34]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x13,0xaa]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0x27]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54,0x9b,0x16]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x88,0x3b]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x34,0xb5]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0x10,0xb4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0x3b,0x7c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0xeb]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0xe1]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0x80]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29,0x68]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x31,0xb]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7,0x46,0xae]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0x86]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0xc1,0xc1]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x2a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0xaf]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x9e,0x92]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x18,0xe]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81,0xe9,0x62]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0x3b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0xea,0xff]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea,0xb4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0x6a,0x6a]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x40]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x30,0x89]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0xa,0xc]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0xb6,0x1d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x89]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xdb,0xd9]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0xb3]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0xc4,0xb2]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0x95,0xf4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0xb6]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x9a]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
