SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,238,3,3,182,163,97,162,55,218,93,29,43,132,243,214,146,13,61,161,1,74,124,156,193,106,77,226,244,204,124,53,92,38,65,97,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,226,219,45,184,25,49,117,188,224,11,160,95,29,173,215,120,27,141,88,78,99,88,22,149,140,193,45,181,193,189,187,11,20,26,190,113,144,26,32,90,82,46,254,4,211,224,220,84,250,77,168,253,186,176,210,218,18,160,14,103,45,210,220,121,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,128,50,181,216,1,4,128,50,181,212,6,2,96,0,7,4,128,50,181,216,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,118,164]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xb6a361a2,random_bytes:[0x37,0xda,0x5d,0x1d,0x2b,0x84,0xf3,0xd6,0x92,0xd,0x3d,0xa1,0x1,0x4a,0x7c,0x9c,0xc1,0x6a,0x4d,0xe2,0xf4,0xcc,0x7c,0x35,0x5c,0x26,0x41,0x61]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xe2,0xdb,0x2d,0xb8,0x19,0x31,0x75,0xbc,0xe0,0xb,0xa0,0x5f,0x1d,0xad,0xd7,0x78,0x1b,0x8d,0x58,0x4e,0x63,0x58,0x16,0x95,0x8c,0xc1,0x2d,0xb5,0xc1,0xbd,0xbb,0xb,0x14,0x1a,0xbe,0x71,0x90,0x1a,0x20,0x5a,0x52,0x2e,0xfe,0x4,0xd3,0xe0,0xdc,0x54,0xfa,0x4d,0xa8,0xfd,0xba,0xb0,0xd2,0xda,0x12,0xa0,0xe,0x67,0x2d,0xd2,0xdc,0x79]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x32b5d8}},{max_idle_timeout:{seconds_16:0x32b5d4}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x32b5d8}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x76a4}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xb6,0xa3,0x61,0xa2,0x37,0xda,0x5d,0x1d,0x2b,0x84,0xf3,0xd6,0x92,0xd,0x3d,0xa1,0x1,0x4a,0x7c,0x9c,0xc1,0x6a,0x4d,0xe2,0xf4,0xcc,0x7c,0x35,0x5c,0x26,0x41,0x61,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xe2,0xdb,0x2d,0xb8,0x19,0x31,0x75,0xbc,0xe0,0xb,0xa0,0x5f,0x1d,0xad,0xd7,0x78,0x1b,0x8d,0x58,0x4e,0x63,0x58,0x16,0x95,0x8c,0xc1,0x2d,0xb5,0xc1,0xbd,0xbb,0xb,0x14,0x1a,0xbe,0x71,0x90,0x1a,0x20,0x5a,0x52,0x2e,0xfe,0x4,0xd3,0xe0,0xdc,0x54,0xfa,0x4d,0xa8,0xfd,0xba,0xb0,0xd2,0xda,0x12,0xa0,0xe,0x67,0x2d,0xd2,0xdc,0x79,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x80,0x32,0xb5,0xd8,0x1,0x4,0x80,0x32,0xb5,0xd4,0x6,0x2,0x60,0,0x7,0x4,0x80,0x32,0xb5,0xd8,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x76,0xa4],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0x22,0x8a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0x81]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x3e,0x8c]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6,0x2e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x71]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71,0xae]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0xc6]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0x6d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0x90,0x54]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x49]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0x47,0x5e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0x56]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x5c,0xc9]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0xaa,0x1]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x4b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0xb3]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x33,0x32]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0xbc,0x9a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0xe3,0xbf]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb,0x2d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0x1f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0x6b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0x65,0x8c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x9d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5,0x6d,0x4a]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x53,0xd7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x48]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x7e,0xce]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0x39,0xf1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0x3]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0xcb,0x36]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0xe4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x97,0x42]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0xd5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0xf0,0xcb]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0xe2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe,0xb4,0x84]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x73]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x7a,0x47]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x21]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b,0xf0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x26,0x49]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d,0xbe]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0xb]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0x3e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0xaf,0xdc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea,0x84]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55,0x36]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0xb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56,0x28,0x9d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0xf0,0xc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0,0xb0,0xd1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x35]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0x3b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0x9e]},1,4,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
