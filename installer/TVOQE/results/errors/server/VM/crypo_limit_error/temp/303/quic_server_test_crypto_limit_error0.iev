SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL picoquic
[1,0,0,238,3,3,19,21,38,143,22,72,110,232,108,42,117,181,57,110,86,113,63,125,16,4,64,162,136,58,153,211,19,50,96,108,55,163,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,70,226,107,63,198,21,123,121,38,121,130,178,57,109,121,181,47,28,92,106,61,4,142,39,52,166,243,35,182,133,154,124,19,240,45,180,153,93,69,90,251,11,178,31,125,209,155,125,189,42,253,37,49,171,147,34,227,187,43,64,6,189,46,226,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,133,92,57,220,1,4,133,92,57,215,6,2,96,0,7,4,133,92,57,220,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,79,79]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x1315268f,random_bytes:[0x16,0x48,0x6e,0xe8,0x6c,0x2a,0x75,0xb5,0x39,0x6e,0x56,0x71,0x3f,0x7d,0x10,0x4,0x40,0xa2,0x88,0x3a,0x99,0xd3,0x13,0x32,0x60,0x6c,0x37,0xa3]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x46,0xe2,0x6b,0x3f,0xc6,0x15,0x7b,0x79,0x26,0x79,0x82,0xb2,0x39,0x6d,0x79,0xb5,0x2f,0x1c,0x5c,0x6a,0x3d,0x4,0x8e,0x27,0x34,0xa6,0xf3,0x23,0xb6,0x85,0x9a,0x7c,0x13,0xf0,0x2d,0xb4,0x99,0x5d,0x45,0x5a,0xfb,0xb,0xb2,0x1f,0x7d,0xd1,0x9b,0x7d,0xbd,0x2a,0xfd,0x25,0x31,0xab,0x93,0x22,0xe3,0xbb,0x2b,0x40,0x6,0xbd,0x2e,0xe2]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x55c39dc}},{max_idle_timeout:{seconds_16:0x55c39d7}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x55c39dc}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x4f4f}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x13,0x15,0x26,0x8f,0x16,0x48,0x6e,0xe8,0x6c,0x2a,0x75,0xb5,0x39,0x6e,0x56,0x71,0x3f,0x7d,0x10,0x4,0x40,0xa2,0x88,0x3a,0x99,0xd3,0x13,0x32,0x60,0x6c,0x37,0xa3,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x46,0xe2,0x6b,0x3f,0xc6,0x15,0x7b,0x79,0x26,0x79,0x82,0xb2,0x39,0x6d,0x79,0xb5,0x2f,0x1c,0x5c,0x6a,0x3d,0x4,0x8e,0x27,0x34,0xa6,0xf3,0x23,0xb6,0x85,0x9a,0x7c,0x13,0xf0,0x2d,0xb4,0x99,0x5d,0x45,0x5a,0xfb,0xb,0xb2,0x1f,0x7d,0xd1,0x9b,0x7d,0xbd,0x2a,0xfd,0x25,0x31,0xab,0x93,0x22,0xe3,0xbb,0x2b,0x40,0x6,0xbd,0x2e,0xe2,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x85,0x5c,0x39,0xdc,0x1,0x4,0x85,0x5c,0x39,0xd7,0x6,0x2,0x60,0,0x7,0x4,0x85,0x5c,0x39,0xdc,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x4f,0x4f],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x1d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0x3f,0x8d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0x81]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0xd7,0xdf]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x67]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5,0xbf]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0xdb]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0xa7]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x4e,0x74]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0x94,0x48]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0xed,0xef]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x34,0xcf]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0x28]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0x7a]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xd2]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x6c,0x7b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0xa8,0x36]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0x6f,0x10]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0x45]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x9e,0x45]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0x20]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0x34]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0xd6,0xd8]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0xd3,0x4b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12,0x45]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22,0xa3,0x38]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0xd1]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0xd7,0x6b]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xde,0x5b]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0xc3]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86,0xde,0x8a]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0x55,0x3d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0x47]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0x93,0xe4]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0xba]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0xb0,0xad]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x57]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0x69,0x87]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xaa]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x22,0x7d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0xb9,0xc]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0xe1,0x8c]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0xe1]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0x2c,0x83]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0x75,0x58]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4,0x39,0xed]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0x5a]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
