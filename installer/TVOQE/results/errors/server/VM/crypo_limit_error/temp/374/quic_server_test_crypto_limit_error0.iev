SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL picoquic
[1,0,0,236,3,3,66,19,29,212,46,113,199,175,214,12,135,252,127,6,144,127,164,25,218,91,159,187,118,50,210,139,192,13,181,117,121,206,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,247,46,36,128,209,148,132,28,158,45,158,0,193,67,35,202,177,87,53,196,246,87,180,185,218,125,3,41,168,5,25,75,255,46,226,151,238,215,102,50,21,191,172,188,30,97,187,137,94,64,35,142,45,101,108,227,216,223,111,155,54,178,63,158,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,140,39,213,125,1,4,140,39,213,120,6,2,96,0,7,4,140,39,213,125,15,8,0,0,0,0,0,0,0,1,12,0,8,2,70,32]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x42131dd4,random_bytes:[0x2e,0x71,0xc7,0xaf,0xd6,0xc,0x87,0xfc,0x7f,0x6,0x90,0x7f,0xa4,0x19,0xda,0x5b,0x9f,0xbb,0x76,0x32,0xd2,0x8b,0xc0,0xd,0xb5,0x75,0x79,0xce]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xf7,0x2e,0x24,0x80,0xd1,0x94,0x84,0x1c,0x9e,0x2d,0x9e,0,0xc1,0x43,0x23,0xca,0xb1,0x57,0x35,0xc4,0xf6,0x57,0xb4,0xb9,0xda,0x7d,0x3,0x29,0xa8,0x5,0x19,0x4b,0xff,0x2e,0xe2,0x97,0xee,0xd7,0x66,0x32,0x15,0xbf,0xac,0xbc,0x1e,0x61,0xbb,0x89,0x5e,0x40,0x23,0x8e,0x2d,0x65,0x6c,0xe3,0xd8,0xdf,0x6f,0x9b,0x36,0xb2,0x3f,0x9e]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xc27d57d}},{max_idle_timeout:{seconds_16:0xc27d578}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xc27d57d}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x620}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x42,0x13,0x1d,0xd4,0x2e,0x71,0xc7,0xaf,0xd6,0xc,0x87,0xfc,0x7f,0x6,0x90,0x7f,0xa4,0x19,0xda,0x5b,0x9f,0xbb,0x76,0x32,0xd2,0x8b,0xc0,0xd,0xb5,0x75,0x79,0xce,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xf7,0x2e,0x24,0x80,0xd1,0x94,0x84,0x1c,0x9e,0x2d,0x9e,0,0xc1,0x43,0x23,0xca,0xb1,0x57,0x35,0xc4,0xf6,0x57,0xb4,0xb9,0xda,0x7d,0x3,0x29,0xa8,0x5,0x19,0x4b,0xff,0x2e,0xe2,0x97,0xee,0xd7,0x66,0x32,0x15,0xbf,0xac,0xbc,0x1e,0x61,0xbb,0x89,0x5e,0x40,0x23,0x8e,0x2d,0x65,0x6c,0xe3,0xd8,0xdf,0x6f,0x9b,0x36,0xb2,0x3f,0x9e,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x8c,0x27,0xd5,0x7d,0x1,0x4,0x8c,0x27,0xd5,0x78,0x6,0x2,0x60,0,0x7,0x4,0x8c,0x27,0xd5,0x7d,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x46,0x20],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0xcc,0xe]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x4c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0x10,0xca]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0xe6]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x64]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x3d]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0xdd]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x9]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0xe1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0xfb]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0xf7,0x71]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0xa2]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0xce,0x97]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0x7c]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xc4]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0xb6,0x38]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0x37,0x58]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x92]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f,0xf8]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x1e,0x90]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0xfa]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0x7b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0xd7,0x92]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0xe4,0xd8]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0x56,0xf]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xeb,0xe3]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0x1b,0x29]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0x57]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x99]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7,0x9e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81,0x1]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0x4f]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7,0xbf,0x67]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0x44,0xdf]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0x3,0xce]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x32,0x8a]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0x1b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d,0x5c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0x41,0xeb]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0x80]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0xb3]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0xa1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0x5]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0x76,0x3c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0x9,0xeb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0xfd,0xe6]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x7a,0x88]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x49]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0x4a]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x81,0x52]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0xac,0x7e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0xc0]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe,0,0x47]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0xd7,0xa5]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xb9,0x4c]},1,7,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
