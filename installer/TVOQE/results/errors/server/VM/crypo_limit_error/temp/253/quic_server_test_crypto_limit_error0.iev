SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,238,3,3,12,252,236,124,136,62,116,65,163,222,108,85,172,94,121,179,12,89,37,86,1,102,191,22,155,93,1,87,120,224,56,136,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,26,75,162,4,42,220,155,170,74,196,89,78,25,202,88,49,11,58,94,213,0,87,125,59,43,8,144,139,118,238,238,85,72,169,245,115,132,98,105,197,100,218,211,173,38,54,78,105,213,214,156,220,73,128,10,16,104,70,38,87,95,108,38,253,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,130,246,177,176,1,4,130,246,177,174,6,2,96,0,7,4,130,246,177,176,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,253,138]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xcfcec7c,random_bytes:[0x88,0x3e,0x74,0x41,0xa3,0xde,0x6c,0x55,0xac,0x5e,0x79,0xb3,0xc,0x59,0x25,0x56,0x1,0x66,0xbf,0x16,0x9b,0x5d,0x1,0x57,0x78,0xe0,0x38,0x88]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x1a,0x4b,0xa2,0x4,0x2a,0xdc,0x9b,0xaa,0x4a,0xc4,0x59,0x4e,0x19,0xca,0x58,0x31,0xb,0x3a,0x5e,0xd5,0,0x57,0x7d,0x3b,0x2b,0x8,0x90,0x8b,0x76,0xee,0xee,0x55,0x48,0xa9,0xf5,0x73,0x84,0x62,0x69,0xc5,0x64,0xda,0xd3,0xad,0x26,0x36,0x4e,0x69,0xd5,0xd6,0x9c,0xdc,0x49,0x80,0xa,0x10,0x68,0x46,0x26,0x57,0x5f,0x6c,0x26,0xfd]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x2f6b1b0}},{max_idle_timeout:{seconds_16:0x2f6b1ae}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x2f6b1b0}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xfd8a}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xc,0xfc,0xec,0x7c,0x88,0x3e,0x74,0x41,0xa3,0xde,0x6c,0x55,0xac,0x5e,0x79,0xb3,0xc,0x59,0x25,0x56,0x1,0x66,0xbf,0x16,0x9b,0x5d,0x1,0x57,0x78,0xe0,0x38,0x88,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x1a,0x4b,0xa2,0x4,0x2a,0xdc,0x9b,0xaa,0x4a,0xc4,0x59,0x4e,0x19,0xca,0x58,0x31,0xb,0x3a,0x5e,0xd5,0,0x57,0x7d,0x3b,0x2b,0x8,0x90,0x8b,0x76,0xee,0xee,0x55,0x48,0xa9,0xf5,0x73,0x84,0x62,0x69,0xc5,0x64,0xda,0xd3,0xad,0x26,0x36,0x4e,0x69,0xd5,0xd6,0x9c,0xdc,0x49,0x80,0xa,0x10,0x68,0x46,0x26,0x57,0x5f,0x6c,0x26,0xfd,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x82,0xf6,0xb1,0xb0,0x1,0x4,0x82,0xf6,0xb1,0xae,0x6,0x2,0x60,0,0x7,0x4,0x82,0xf6,0xb1,0xb0,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xfd,0x8a],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x91,0xc5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x2f]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0xa]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x32]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x43,0x27]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0x8c,0xb2]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x79]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x22]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0xb3]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0xdd,0x6]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0xc3]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x9e,0xfd]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0x3a,0x5b]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xe4]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0x8a]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0x48]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0xcf,0xa5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x44]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0xe7]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x8,0xdd]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0xc6,0xfb]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0xdb,0x3]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51,0x66]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff,0x23]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa,0x43,0xfd]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0xc6]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0xae,0x3b]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0xde,0x85]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0x27,0x8]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0x15,0xc1]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f,0xbb]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0x5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x4e]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0xdb,0xbc]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x31]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81,0x9d,0xe5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0xa1]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0xc3]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0x3f]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x38]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x14,0x85]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0x25]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0xb7,0x51]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x19,0x7f]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0xa3,0x53]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x35,0xb0]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0x4c]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0x9,0xb5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0xde]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0x1e,0xd4]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,8,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a,0x9e]},1,5,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
