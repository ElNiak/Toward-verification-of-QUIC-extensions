SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,236,3,3,24,253,116,97,225,48,207,48,26,51,199,253,149,166,68,120,29,58,4,61,155,106,18,89,163,191,12,191,119,254,127,125,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,44,221,134,82,242,236,88,97,85,8,222,165,140,28,135,101,69,92,255,220,242,213,89,168,75,33,187,167,90,64,43,122,28,3,123,48,228,105,153,138,30,144,123,163,19,86,252,154,85,192,224,238,14,202,19,47,48,188,157,148,21,128,238,204,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,140,196,120,193,1,4,140,196,120,190,6,2,96,0,7,4,140,196,120,193,15,8,0,0,0,0,0,0,0,1,12,0,8,2,107,214]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x18fd7461,random_bytes:[0xe1,0x30,0xcf,0x30,0x1a,0x33,0xc7,0xfd,0x95,0xa6,0x44,0x78,0x1d,0x3a,0x4,0x3d,0x9b,0x6a,0x12,0x59,0xa3,0xbf,0xc,0xbf,0x77,0xfe,0x7f,0x7d]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x2c,0xdd,0x86,0x52,0xf2,0xec,0x58,0x61,0x55,0x8,0xde,0xa5,0x8c,0x1c,0x87,0x65,0x45,0x5c,0xff,0xdc,0xf2,0xd5,0x59,0xa8,0x4b,0x21,0xbb,0xa7,0x5a,0x40,0x2b,0x7a,0x1c,0x3,0x7b,0x30,0xe4,0x69,0x99,0x8a,0x1e,0x90,0x7b,0xa3,0x13,0x56,0xfc,0x9a,0x55,0xc0,0xe0,0xee,0xe,0xca,0x13,0x2f,0x30,0xbc,0x9d,0x94,0x15,0x80,0xee,0xcc]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xcc478c1}},{max_idle_timeout:{seconds_16:0xcc478be}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xcc478c1}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x2bd6}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x18,0xfd,0x74,0x61,0xe1,0x30,0xcf,0x30,0x1a,0x33,0xc7,0xfd,0x95,0xa6,0x44,0x78,0x1d,0x3a,0x4,0x3d,0x9b,0x6a,0x12,0x59,0xa3,0xbf,0xc,0xbf,0x77,0xfe,0x7f,0x7d,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x2c,0xdd,0x86,0x52,0xf2,0xec,0x58,0x61,0x55,0x8,0xde,0xa5,0x8c,0x1c,0x87,0x65,0x45,0x5c,0xff,0xdc,0xf2,0xd5,0x59,0xa8,0x4b,0x21,0xbb,0xa7,0x5a,0x40,0x2b,0x7a,0x1c,0x3,0x7b,0x30,0xe4,0x69,0x99,0x8a,0x1e,0x90,0x7b,0xa3,0x13,0x56,0xfc,0x9a,0x55,0xc0,0xe0,0xee,0xe,0xca,0x13,0x2f,0x30,0xbc,0x9d,0x94,0x15,0x80,0xee,0xcc,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x8c,0xc4,0x78,0xc1,0x1,0x4,0x8c,0xc4,0x78,0xbe,0x6,0x2,0x60,0,0x7,0x4,0x8c,0xc4,0x78,0xc1,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x6b,0xd6],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x5d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x66]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0x96,0x9e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x18]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0xea,0x3b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8,0x7e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0xb7,0xa2]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f,0x8,0x86]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x2b,0x77]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0x94,0xc6]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0x57,0xf]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xfa,0x9e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66,0x10]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xc2,0x20]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0x59,0xc0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78,0x5f,0x24]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7,0x96,0x32]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41,0x9]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0x27]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0x5]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0x63,0x82]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x5f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0x51]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea,0xea]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0xd0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0xa6]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0x5a,0xdb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0x94,0xfc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0x1a,0x79]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5,0xe0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0xf7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x28]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0xed,0xbf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0xdf,0x9c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0xf,0x8b]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36,0xdc,0x59]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66,0x1c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x56,0x5f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3,0xfe]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0xaa]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xfe]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0x67,0x90]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0x16]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0xc3,0xfa]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0x60]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0x5a,0x3e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0xe9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0x93]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0xf4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0xd5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0xca,0x20]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xc1,0xe3]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0x5a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0x9d,0xc8]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x2]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0x30]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x42,0x29]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0xd5,0xaa]},1,10,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
