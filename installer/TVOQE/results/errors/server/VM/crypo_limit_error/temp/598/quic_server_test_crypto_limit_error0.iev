SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL aioquic
[1,0,0,238,3,3,234,228,33,94,132,250,2,100,77,132,11,116,142,54,136,42,42,154,29,196,205,178,86,47,65,247,68,102,89,71,20,156,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,73,90,205,230,209,178,192,48,125,197,205,178,155,215,80,64,129,45,79,255,173,2,239,254,66,13,18,147,94,40,158,50,86,4,202,166,70,226,88,237,159,60,107,154,111,232,37,243,148,189,252,98,207,252,162,145,18,28,114,162,188,29,198,161,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,134,85,55,54,1,4,134,85,55,51,6,2,96,0,7,4,134,85,55,54,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,208,139]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xeae4215e,random_bytes:[0x84,0xfa,0x2,0x64,0x4d,0x84,0xb,0x74,0x8e,0x36,0x88,0x2a,0x2a,0x9a,0x1d,0xc4,0xcd,0xb2,0x56,0x2f,0x41,0xf7,0x44,0x66,0x59,0x47,0x14,0x9c]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x49,0x5a,0xcd,0xe6,0xd1,0xb2,0xc0,0x30,0x7d,0xc5,0xcd,0xb2,0x9b,0xd7,0x50,0x40,0x81,0x2d,0x4f,0xff,0xad,0x2,0xef,0xfe,0x42,0xd,0x12,0x93,0x5e,0x28,0x9e,0x32,0x56,0x4,0xca,0xa6,0x46,0xe2,0x58,0xed,0x9f,0x3c,0x6b,0x9a,0x6f,0xe8,0x25,0xf3,0x94,0xbd,0xfc,0x62,0xcf,0xfc,0xa2,0x91,0x12,0x1c,0x72,0xa2,0xbc,0x1d,0xc6,0xa1]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x6553736}},{max_idle_timeout:{seconds_16:0x6553733}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x6553736}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xd08b}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xea,0xe4,0x21,0x5e,0x84,0xfa,0x2,0x64,0x4d,0x84,0xb,0x74,0x8e,0x36,0x88,0x2a,0x2a,0x9a,0x1d,0xc4,0xcd,0xb2,0x56,0x2f,0x41,0xf7,0x44,0x66,0x59,0x47,0x14,0x9c,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x49,0x5a,0xcd,0xe6,0xd1,0xb2,0xc0,0x30,0x7d,0xc5,0xcd,0xb2,0x9b,0xd7,0x50,0x40,0x81,0x2d,0x4f,0xff,0xad,0x2,0xef,0xfe,0x42,0xd,0x12,0x93,0x5e,0x28,0x9e,0x32,0x56,0x4,0xca,0xa6,0x46,0xe2,0x58,0xed,0x9f,0x3c,0x6b,0x9a,0x6f,0xe8,0x25,0xf3,0x94,0xbd,0xfc,0x62,0xcf,0xfc,0xa2,0x91,0x12,0x1c,0x72,0xa2,0xbc,0x1d,0xc6,0xa1,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x86,0x55,0x37,0x36,0x1,0x4,0x86,0x55,0x37,0x33,0x6,0x2,0x60,0,0x7,0x4,0x86,0x55,0x37,0x36,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xd0,0x8b],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x5d]},1,6,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0x80,0x38]},1,8,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0x7,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[0x5d]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0x1a,0x80,0x38]}},{frame.crypto:{offset:0xffffffff,length:0,data:[]}}]})
< show_pstats(1,initial,0x7)
< show_pstats(1,initial,0x7)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0x7)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,8,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0xf,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[0x66]}}]})
< show_pstats(1,initial,0xf)
< show_pstats(1,initial,0xf)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0xf)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[0xa7]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0x8e]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x32,0xe4]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x7b,0x61]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0x9,0x97]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x6e,0x6f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0xad]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x8e]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x4a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f,0xa5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0xae,0x99]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0xf9]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x47]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0x96,0x44]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0x17]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0xf9,0x3a]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0x45,0xaf]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf,0xcb]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0xa3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0x8c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0x23,0xc5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0x57,0x1c]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0xae,0xde]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0x6f,0x78]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x81]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x50,0xa1]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x46]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x4f,0xd7]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0xb4]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0x2c]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0xc8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0xf9,0x7c]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x52]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0x66]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7,0xb2]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5,0x40]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0xbd]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0,0xac]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44]},1,6,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
