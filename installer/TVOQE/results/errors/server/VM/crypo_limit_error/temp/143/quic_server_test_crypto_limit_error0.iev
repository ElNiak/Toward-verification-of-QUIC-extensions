SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quinn
[1,0,0,238,3,3,230,17,152,236,114,89,76,100,253,42,72,45,10,127,67,32,66,31,131,248,132,228,74,165,110,109,243,229,102,234,108,150,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,51,148,57,154,189,244,23,144,214,245,20,9,33,49,139,214,161,13,140,124,247,95,59,21,101,122,116,51,63,4,230,84,107,241,170,176,176,28,7,211,99,23,213,215,105,146,105,135,238,207,233,231,200,128,197,206,87,141,232,190,207,16,43,78,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,133,194,204,47,1,4,133,194,204,43,6,2,96,0,7,4,133,194,204,47,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,163,59]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xe61198ec,random_bytes:[0x72,0x59,0x4c,0x64,0xfd,0x2a,0x48,0x2d,0xa,0x7f,0x43,0x20,0x42,0x1f,0x83,0xf8,0x84,0xe4,0x4a,0xa5,0x6e,0x6d,0xf3,0xe5,0x66,0xea,0x6c,0x96]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x33,0x94,0x39,0x9a,0xbd,0xf4,0x17,0x90,0xd6,0xf5,0x14,0x9,0x21,0x31,0x8b,0xd6,0xa1,0xd,0x8c,0x7c,0xf7,0x5f,0x3b,0x15,0x65,0x7a,0x74,0x33,0x3f,0x4,0xe6,0x54,0x6b,0xf1,0xaa,0xb0,0xb0,0x1c,0x7,0xd3,0x63,0x17,0xd5,0xd7,0x69,0x92,0x69,0x87,0xee,0xcf,0xe9,0xe7,0xc8,0x80,0xc5,0xce,0x57,0x8d,0xe8,0xbe,0xcf,0x10,0x2b,0x4e]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x5c2cc2f}},{max_idle_timeout:{seconds_16:0x5c2cc2b}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x5c2cc2f}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xa33b}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xe6,0x11,0x98,0xec,0x72,0x59,0x4c,0x64,0xfd,0x2a,0x48,0x2d,0xa,0x7f,0x43,0x20,0x42,0x1f,0x83,0xf8,0x84,0xe4,0x4a,0xa5,0x6e,0x6d,0xf3,0xe5,0x66,0xea,0x6c,0x96,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x33,0x94,0x39,0x9a,0xbd,0xf4,0x17,0x90,0xd6,0xf5,0x14,0x9,0x21,0x31,0x8b,0xd6,0xa1,0xd,0x8c,0x7c,0xf7,0x5f,0x3b,0x15,0x65,0x7a,0x74,0x33,0x3f,0x4,0xe6,0x54,0x6b,0xf1,0xaa,0xb0,0xb0,0x1c,0x7,0xd3,0x63,0x17,0xd5,0xd7,0x69,0x92,0x69,0x87,0xee,0xcf,0xe9,0xe7,0xc8,0x80,0xc5,0xce,0x57,0x8d,0xe8,0xbe,0xcf,0x10,0x2b,0x4e,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x85,0xc2,0xcc,0x2f,0x1,0x4,0x85,0xc2,0xcc,0x2b,0x6,0x2,0x60,0,0x7,0x4,0x85,0xc2,0xcc,0x2f,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xa3,0x3b],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x68]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x14,0xe1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0xfa]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0x52]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0xc0,0x5c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0x6d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0xf1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x22,0x4]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0xcc,0x1e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0xb1,0x41]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xc4,0xef]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x85,0x62]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0x9e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x97,0xfe]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0xde]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x86,0x87]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0x75,0x98]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x8b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0x7,0x1]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0x3c,0x80]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0xa7]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a,0x4c]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0xc1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0xb6,0x77]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x70,0xb9]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b,0x56,0xaa]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0x6f,0x65]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x2c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe,0x8d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x2c,0xd6]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x6c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x2b,0x4b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0x43,0x3d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66,0xe1]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0xb9,0xf2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0xff]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0xcb]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0x76]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0x50]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0x3c]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0x8c,0x39]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb,0xd9]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x5b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0x35,0xc0]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0xf5]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0xd5,0xca]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41,0x81]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x12,0xcf]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x6e,0xfb]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0xd]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x82]},1,4,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
