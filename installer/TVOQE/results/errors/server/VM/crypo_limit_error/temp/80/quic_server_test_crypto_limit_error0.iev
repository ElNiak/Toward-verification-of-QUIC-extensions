SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,238,3,3,234,221,212,54,165,43,17,55,234,144,241,99,73,212,112,237,186,53,105,91,75,173,70,96,32,118,40,163,248,134,177,48,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,40,8,170,225,180,23,141,43,62,136,236,128,44,202,155,75,167,208,151,250,157,40,25,30,100,49,110,53,87,194,95,247,146,160,18,81,174,116,27,221,19,102,195,98,205,160,102,21,46,6,85,238,253,41,210,66,177,139,77,232,106,140,179,158,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,133,141,205,177,1,4,133,141,205,176,6,2,96,0,7,4,133,141,205,177,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,227,232]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xeaddd436,random_bytes:[0xa5,0x2b,0x11,0x37,0xea,0x90,0xf1,0x63,0x49,0xd4,0x70,0xed,0xba,0x35,0x69,0x5b,0x4b,0xad,0x46,0x60,0x20,0x76,0x28,0xa3,0xf8,0x86,0xb1,0x30]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x28,0x8,0xaa,0xe1,0xb4,0x17,0x8d,0x2b,0x3e,0x88,0xec,0x80,0x2c,0xca,0x9b,0x4b,0xa7,0xd0,0x97,0xfa,0x9d,0x28,0x19,0x1e,0x64,0x31,0x6e,0x35,0x57,0xc2,0x5f,0xf7,0x92,0xa0,0x12,0x51,0xae,0x74,0x1b,0xdd,0x13,0x66,0xc3,0x62,0xcd,0xa0,0x66,0x15,0x2e,0x6,0x55,0xee,0xfd,0x29,0xd2,0x42,0xb1,0x8b,0x4d,0xe8,0x6a,0x8c,0xb3,0x9e]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x58dcdb1}},{max_idle_timeout:{seconds_16:0x58dcdb0}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x58dcdb1}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xe3e8}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xea,0xdd,0xd4,0x36,0xa5,0x2b,0x11,0x37,0xea,0x90,0xf1,0x63,0x49,0xd4,0x70,0xed,0xba,0x35,0x69,0x5b,0x4b,0xad,0x46,0x60,0x20,0x76,0x28,0xa3,0xf8,0x86,0xb1,0x30,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x28,0x8,0xaa,0xe1,0xb4,0x17,0x8d,0x2b,0x3e,0x88,0xec,0x80,0x2c,0xca,0x9b,0x4b,0xa7,0xd0,0x97,0xfa,0x9d,0x28,0x19,0x1e,0x64,0x31,0x6e,0x35,0x57,0xc2,0x5f,0xf7,0x92,0xa0,0x12,0x51,0xae,0x74,0x1b,0xdd,0x13,0x66,0xc3,0x62,0xcd,0xa0,0x66,0x15,0x2e,0x6,0x55,0xee,0xfd,0x29,0xd2,0x42,0xb1,0x8b,0x4d,0xe8,0x6a,0x8c,0xb3,0x9e,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x85,0x8d,0xcd,0xb1,0x1,0x4,0x85,0x8d,0xcd,0xb0,0x6,0x2,0x60,0,0x7,0x4,0x85,0x8d,0xcd,0xb1,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xe3,0xe8],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xcf]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d,0xa8,0x6]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0xcc,0x72]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0xb4,0x98]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14,0x55,0x4d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0x38]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x1a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x51]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0x3d,0x29]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0x7a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xdc,0xa9]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x39]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xa3]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0x86,0xb2]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0xf8,0x9f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x66,0x7d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x6f,0x3b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0xb1]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0xd7]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xe2]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x69,0xb0]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0x3a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0x6c]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0xda]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0x37,0x34]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0xfd]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d,0x39]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0x5e]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0xb,0x71]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x18]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xaa,0xae]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0x41]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0x37,0x18]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0xd3]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0x78]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x1,0xbb]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0x6e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b,0xb]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0,0x34]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0xf8]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0xab,0xe9]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0xb,0x4d]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x2,0xa4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0x47]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x98,0x75]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0x30,0x44]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa,0x8,0xd4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0x19,0x62]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x98]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0xeb]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
