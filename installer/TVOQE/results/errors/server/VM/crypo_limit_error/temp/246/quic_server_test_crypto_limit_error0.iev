SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,238,3,3,80,26,223,213,169,147,100,175,236,43,233,109,32,167,250,195,6,145,241,54,26,59,109,82,50,155,255,14,107,2,166,120,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,107,66,214,230,138,41,59,253,25,222,7,135,96,248,46,248,202,68,198,22,227,154,231,109,220,125,229,133,5,76,7,70,204,20,139,42,228,243,208,93,30,196,48,174,210,81,53,1,129,56,26,53,91,224,47,4,2,174,21,254,118,182,38,161,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,138,186,172,73,1,4,138,186,172,72,6,2,96,0,7,4,138,186,172,73,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,215,52]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x501adfd5,random_bytes:[0xa9,0x93,0x64,0xaf,0xec,0x2b,0xe9,0x6d,0x20,0xa7,0xfa,0xc3,0x6,0x91,0xf1,0x36,0x1a,0x3b,0x6d,0x52,0x32,0x9b,0xff,0xe,0x6b,0x2,0xa6,0x78]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x6b,0x42,0xd6,0xe6,0x8a,0x29,0x3b,0xfd,0x19,0xde,0x7,0x87,0x60,0xf8,0x2e,0xf8,0xca,0x44,0xc6,0x16,0xe3,0x9a,0xe7,0x6d,0xdc,0x7d,0xe5,0x85,0x5,0x4c,0x7,0x46,0xcc,0x14,0x8b,0x2a,0xe4,0xf3,0xd0,0x5d,0x1e,0xc4,0x30,0xae,0xd2,0x51,0x35,0x1,0x81,0x38,0x1a,0x35,0x5b,0xe0,0x2f,0x4,0x2,0xae,0x15,0xfe,0x76,0xb6,0x26,0xa1]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xabaac49}},{max_idle_timeout:{seconds_16:0xabaac48}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xabaac49}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xd734}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x50,0x1a,0xdf,0xd5,0xa9,0x93,0x64,0xaf,0xec,0x2b,0xe9,0x6d,0x20,0xa7,0xfa,0xc3,0x6,0x91,0xf1,0x36,0x1a,0x3b,0x6d,0x52,0x32,0x9b,0xff,0xe,0x6b,0x2,0xa6,0x78,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x6b,0x42,0xd6,0xe6,0x8a,0x29,0x3b,0xfd,0x19,0xde,0x7,0x87,0x60,0xf8,0x2e,0xf8,0xca,0x44,0xc6,0x16,0xe3,0x9a,0xe7,0x6d,0xdc,0x7d,0xe5,0x85,0x5,0x4c,0x7,0x46,0xcc,0x14,0x8b,0x2a,0xe4,0xf3,0xd0,0x5d,0x1e,0xc4,0x30,0xae,0xd2,0x51,0x35,0x1,0x81,0x38,0x1a,0x35,0x5b,0xe0,0x2f,0x4,0x2,0xae,0x15,0xfe,0x76,0xb6,0x26,0xa1,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8a,0xba,0xac,0x49,0x1,0x4,0x8a,0xba,0xac,0x48,0x6,0x2,0x60,0,0x7,0x4,0x8a,0xba,0xac,0x49,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xd7,0x34],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0x3d,0xe8]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0xf0,0x88]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13,0x84,0x55]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0xd2,0x19]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x1c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0x12]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21,0x11,0x7c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0x29]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0xfd,0xac]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0xd9]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0x15,0xf0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0x7f]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0x9b]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0x9,0x69]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0xbd]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0x96,0x92]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0xd3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x33,0x2c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0x82,0xfe]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d,0x67,0xb9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0xeb,0xea]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xd9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x69]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0x44]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x43]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0xa]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0xd3,0x16]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0xd,0xc6]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0xf2]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0xcc]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x38,0xe8]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x10]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x60,0x3e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14,0xab,0x51]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x3a,0x73]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x43]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4,0xce,0x79]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0x82]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0xa7]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe6,0x5,0x56]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0x5c,0x33]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x92]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0xfe]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0xf4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x72]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7,0xf1,0x87]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13,0xd4,0xfb]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x85]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11]},1,1,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
