SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,115,253,176,79,239,228,47,151,208,240,77,18,159,159,253,80,212,32,207,65,148,38,81,63,81,180,184,253,157,104,65,217,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,104,40,180,106,29,14,179,91,35,159,6,26,176,84,58,231,224,184,44,238,62,70,56,195,75,198,165,3,155,66,207,38,51,146,166,239,252,243,198,201,187,43,231,240,5,24,59,197,101,64,99,189,179,179,255,191,11,89,232,139,8,218,143,126,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,133,153,245,186,1,4,133,153,245,183,6,2,96,0,7,4,133,153,245,186,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,140,35]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x73fdb04f,random_bytes:[0xef,0xe4,0x2f,0x97,0xd0,0xf0,0x4d,0x12,0x9f,0x9f,0xfd,0x50,0xd4,0x20,0xcf,0x41,0x94,0x26,0x51,0x3f,0x51,0xb4,0xb8,0xfd,0x9d,0x68,0x41,0xd9]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x68,0x28,0xb4,0x6a,0x1d,0xe,0xb3,0x5b,0x23,0x9f,0x6,0x1a,0xb0,0x54,0x3a,0xe7,0xe0,0xb8,0x2c,0xee,0x3e,0x46,0x38,0xc3,0x4b,0xc6,0xa5,0x3,0x9b,0x42,0xcf,0x26,0x33,0x92,0xa6,0xef,0xfc,0xf3,0xc6,0xc9,0xbb,0x2b,0xe7,0xf0,0x5,0x18,0x3b,0xc5,0x65,0x40,0x63,0xbd,0xb3,0xb3,0xff,0xbf,0xb,0x59,0xe8,0x8b,0x8,0xda,0x8f,0x7e]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x599f5ba}},{max_idle_timeout:{seconds_16:0x599f5b7}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x599f5ba}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x8c23}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x73,0xfd,0xb0,0x4f,0xef,0xe4,0x2f,0x97,0xd0,0xf0,0x4d,0x12,0x9f,0x9f,0xfd,0x50,0xd4,0x20,0xcf,0x41,0x94,0x26,0x51,0x3f,0x51,0xb4,0xb8,0xfd,0x9d,0x68,0x41,0xd9,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x68,0x28,0xb4,0x6a,0x1d,0xe,0xb3,0x5b,0x23,0x9f,0x6,0x1a,0xb0,0x54,0x3a,0xe7,0xe0,0xb8,0x2c,0xee,0x3e,0x46,0x38,0xc3,0x4b,0xc6,0xa5,0x3,0x9b,0x42,0xcf,0x26,0x33,0x92,0xa6,0xef,0xfc,0xf3,0xc6,0xc9,0xbb,0x2b,0xe7,0xf0,0x5,0x18,0x3b,0xc5,0x65,0x40,0x63,0xbd,0xb3,0xb3,0xff,0xbf,0xb,0x59,0xe8,0x8b,0x8,0xda,0x8f,0x7e,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x85,0x99,0xf5,0xba,0x1,0x4,0x85,0x99,0xf5,0xb7,0x6,0x2,0x60,0,0x7,0x4,0x85,0x99,0xf5,0xba,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x8c,0x23],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x60]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0xcb,0xfb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x53,0x1]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33,0x2c,0xab]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0xe8]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c,0x21]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x6e,0xde]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0xe7]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x8a,0xbe]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff,0x6b,0x41]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3,0x44,0xc7]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0x2b,0x44]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0xbf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0xf6]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0x2b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x8b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0xdf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0x48,0xb4]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0xb7]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5,0xad]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0xce]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8,0x18,0x5e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67,0xd]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x2c]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0xc3,0xd4]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0x2,0xd5]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0x2d]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0xb2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x89]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0xae,0x22]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x8d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4,0xd0,0x80]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0x73,0xbc]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0x6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0x50]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x50]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0x9e,0x93]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0x48,0x84]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86,0x1a,0xd2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0xdb,0x92]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0x76]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0xbe,0x35]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xd5]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a]},1,2,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
