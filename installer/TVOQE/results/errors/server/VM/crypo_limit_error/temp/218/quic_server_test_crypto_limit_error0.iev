SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,238,3,3,221,91,183,238,39,237,113,101,176,39,109,21,239,146,238,169,241,244,89,64,90,150,74,246,75,194,93,59,35,17,118,178,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,238,139,151,113,54,227,241,147,29,188,140,28,230,200,115,52,144,119,213,235,136,63,227,167,23,43,27,65,101,200,193,73,255,118,112,167,205,41,165,88,157,198,27,15,230,8,54,188,13,37,121,28,223,48,151,19,136,31,105,226,36,162,64,244,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,141,101,61,162,1,4,141,101,61,157,6,2,96,0,7,4,141,101,61,162,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,115,57]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xdd5bb7ee,random_bytes:[0x27,0xed,0x71,0x65,0xb0,0x27,0x6d,0x15,0xef,0x92,0xee,0xa9,0xf1,0xf4,0x59,0x40,0x5a,0x96,0x4a,0xf6,0x4b,0xc2,0x5d,0x3b,0x23,0x11,0x76,0xb2]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xee,0x8b,0x97,0x71,0x36,0xe3,0xf1,0x93,0x1d,0xbc,0x8c,0x1c,0xe6,0xc8,0x73,0x34,0x90,0x77,0xd5,0xeb,0x88,0x3f,0xe3,0xa7,0x17,0x2b,0x1b,0x41,0x65,0xc8,0xc1,0x49,0xff,0x76,0x70,0xa7,0xcd,0x29,0xa5,0x58,0x9d,0xc6,0x1b,0xf,0xe6,0x8,0x36,0xbc,0xd,0x25,0x79,0x1c,0xdf,0x30,0x97,0x13,0x88,0x1f,0x69,0xe2,0x24,0xa2,0x40,0xf4]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xd653da2}},{max_idle_timeout:{seconds_16:0xd653d9d}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xd653da2}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x7339}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xdd,0x5b,0xb7,0xee,0x27,0xed,0x71,0x65,0xb0,0x27,0x6d,0x15,0xef,0x92,0xee,0xa9,0xf1,0xf4,0x59,0x40,0x5a,0x96,0x4a,0xf6,0x4b,0xc2,0x5d,0x3b,0x23,0x11,0x76,0xb2,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xee,0x8b,0x97,0x71,0x36,0xe3,0xf1,0x93,0x1d,0xbc,0x8c,0x1c,0xe6,0xc8,0x73,0x34,0x90,0x77,0xd5,0xeb,0x88,0x3f,0xe3,0xa7,0x17,0x2b,0x1b,0x41,0x65,0xc8,0xc1,0x49,0xff,0x76,0x70,0xa7,0xcd,0x29,0xa5,0x58,0x9d,0xc6,0x1b,0xf,0xe6,0x8,0x36,0xbc,0xd,0x25,0x79,0x1c,0xdf,0x30,0x97,0x13,0x88,0x1f,0x69,0xe2,0x24,0xa2,0x40,0xf4,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8d,0x65,0x3d,0xa2,0x1,0x4,0x8d,0x65,0x3d,0x9d,0x6,0x2,0x60,0,0x7,0x4,0x8d,0x65,0x3d,0xa2,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x73,0x39],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0xa2]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x19,0xf1,0x3d]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0xf,0x90]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x5,0xe6]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0x7,0x94]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0xc4,0xf4]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69,0x14,0x80]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x94]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0xa1]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0x22]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0xa,0xc9]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0x86,0x6c]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0xcb]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0xe2]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x3a]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0x6f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xa7,0x5f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0x99,0x38]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0x91]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0xe1]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0x5d,0x4f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x2c,0x66]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x7e,0x4e]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x46]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0x56,0xfa]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0xa5]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4,0,0xb6]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x25]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0x7]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0xb2]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0x48,0xec]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0xf4]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0xb8]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x5a,0x98]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92,0x73,0x1f]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x75]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x25,0x70]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0xe9,0x1e]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0x75,0x7b]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0x1f,0xeb]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0xed]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb,0x95]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x99,0xfe]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0xf6,0xfa]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86,0xed,0x45]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0,0xa1]},1,9,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
