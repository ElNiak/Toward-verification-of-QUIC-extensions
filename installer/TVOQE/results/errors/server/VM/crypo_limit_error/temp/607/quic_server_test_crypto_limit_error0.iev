SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,206,131,128,88,175,191,44,100,119,196,167,76,82,10,213,131,7,54,117,104,73,54,228,212,48,229,216,4,215,209,90,145,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,185,66,139,35,151,222,224,135,108,74,213,54,45,176,26,23,46,73,84,177,79,212,179,62,136,162,12,172,239,117,249,18,144,68,104,157,154,244,238,149,191,153,149,47,144,158,201,240,232,127,28,183,3,81,163,131,200,67,71,106,73,63,45,51,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,138,80,248,90,1,4,138,80,248,87,6,2,96,0,7,4,138,80,248,90,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,161,159]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xce838058,random_bytes:[0xaf,0xbf,0x2c,0x64,0x77,0xc4,0xa7,0x4c,0x52,0xa,0xd5,0x83,0x7,0x36,0x75,0x68,0x49,0x36,0xe4,0xd4,0x30,0xe5,0xd8,0x4,0xd7,0xd1,0x5a,0x91]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xb9,0x42,0x8b,0x23,0x97,0xde,0xe0,0x87,0x6c,0x4a,0xd5,0x36,0x2d,0xb0,0x1a,0x17,0x2e,0x49,0x54,0xb1,0x4f,0xd4,0xb3,0x3e,0x88,0xa2,0xc,0xac,0xef,0x75,0xf9,0x12,0x90,0x44,0x68,0x9d,0x9a,0xf4,0xee,0x95,0xbf,0x99,0x95,0x2f,0x90,0x9e,0xc9,0xf0,0xe8,0x7f,0x1c,0xb7,0x3,0x51,0xa3,0x83,0xc8,0x43,0x47,0x6a,0x49,0x3f,0x2d,0x33]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xa50f85a}},{max_idle_timeout:{seconds_16:0xa50f857}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xa50f85a}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xa19f}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xce,0x83,0x80,0x58,0xaf,0xbf,0x2c,0x64,0x77,0xc4,0xa7,0x4c,0x52,0xa,0xd5,0x83,0x7,0x36,0x75,0x68,0x49,0x36,0xe4,0xd4,0x30,0xe5,0xd8,0x4,0xd7,0xd1,0x5a,0x91,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xb9,0x42,0x8b,0x23,0x97,0xde,0xe0,0x87,0x6c,0x4a,0xd5,0x36,0x2d,0xb0,0x1a,0x17,0x2e,0x49,0x54,0xb1,0x4f,0xd4,0xb3,0x3e,0x88,0xa2,0xc,0xac,0xef,0x75,0xf9,0x12,0x90,0x44,0x68,0x9d,0x9a,0xf4,0xee,0x95,0xbf,0x99,0x95,0x2f,0x90,0x9e,0xc9,0xf0,0xe8,0x7f,0x1c,0xb7,0x3,0x51,0xa3,0x83,0xc8,0x43,0x47,0x6a,0x49,0x3f,0x2d,0x33,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8a,0x50,0xf8,0x5a,0x1,0x4,0x8a,0x50,0xf8,0x57,0x6,0x2,0x60,0,0x7,0x4,0x8a,0x50,0xf8,0x5a,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xa1,0x9f],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x73]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0x4a,0x5d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0xd8,0xe1]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0xbd,0xa]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0x50,0x8e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0xaf,0xde]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x41,0xf]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x7]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0xd1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x4]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xd2]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0xe3]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa,0xcd,0x47]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x1,0x7a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0xcf,0xda]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0x82,0x65]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0xe2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81,0x5a]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x2f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff,0x19]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0xc9]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7,0xe6]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0x3a]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x71,0xcf]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0x6d,0x4e]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0xa2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0x50,0x7c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x5c]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0xc0,0x24]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x6]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0x8a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x73]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0x2c,0x1d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13,0x37]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0xf0]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0x6c]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0x2b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0x5d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0xf2,0x60]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0x1d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0xbb,0x2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0xb1]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x96,0x63]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0x6f,0x5]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x69]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0xa5]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0xdd,0x93]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x31,0x13]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0x81]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0x26]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x38,0xaf]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0xe4,0xc4]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71,0x4c]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0xea,0x3f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0xb1,0xe1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x7]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29,0x15]},1,4,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
