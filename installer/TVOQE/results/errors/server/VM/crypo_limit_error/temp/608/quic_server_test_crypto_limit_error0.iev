SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,20,21,40,140,56,199,134,104,166,110,237,252,142,187,189,119,145,179,82,45,253,202,22,66,55,238,57,139,45,37,162,134,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,121,142,103,53,45,226,187,116,119,75,28,52,179,78,106,86,38,30,10,18,229,128,238,209,45,253,151,10,199,6,181,84,37,79,200,12,187,44,201,132,40,54,38,100,227,8,63,33,83,96,24,15,143,118,226,81,101,146,82,61,13,9,70,137,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,132,178,163,159,1,4,132,178,163,155,6,2,96,0,7,4,132,178,163,159,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,118,107]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x1415288c,random_bytes:[0x38,0xc7,0x86,0x68,0xa6,0x6e,0xed,0xfc,0x8e,0xbb,0xbd,0x77,0x91,0xb3,0x52,0x2d,0xfd,0xca,0x16,0x42,0x37,0xee,0x39,0x8b,0x2d,0x25,0xa2,0x86]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x79,0x8e,0x67,0x35,0x2d,0xe2,0xbb,0x74,0x77,0x4b,0x1c,0x34,0xb3,0x4e,0x6a,0x56,0x26,0x1e,0xa,0x12,0xe5,0x80,0xee,0xd1,0x2d,0xfd,0x97,0xa,0xc7,0x6,0xb5,0x54,0x25,0x4f,0xc8,0xc,0xbb,0x2c,0xc9,0x84,0x28,0x36,0x26,0x64,0xe3,0x8,0x3f,0x21,0x53,0x60,0x18,0xf,0x8f,0x76,0xe2,0x51,0x65,0x92,0x52,0x3d,0xd,0x9,0x46,0x89]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x4b2a39f}},{max_idle_timeout:{seconds_16:0x4b2a39b}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x4b2a39f}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x766b}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x14,0x15,0x28,0x8c,0x38,0xc7,0x86,0x68,0xa6,0x6e,0xed,0xfc,0x8e,0xbb,0xbd,0x77,0x91,0xb3,0x52,0x2d,0xfd,0xca,0x16,0x42,0x37,0xee,0x39,0x8b,0x2d,0x25,0xa2,0x86,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x79,0x8e,0x67,0x35,0x2d,0xe2,0xbb,0x74,0x77,0x4b,0x1c,0x34,0xb3,0x4e,0x6a,0x56,0x26,0x1e,0xa,0x12,0xe5,0x80,0xee,0xd1,0x2d,0xfd,0x97,0xa,0xc7,0x6,0xb5,0x54,0x25,0x4f,0xc8,0xc,0xbb,0x2c,0xc9,0x84,0x28,0x36,0x26,0x64,0xe3,0x8,0x3f,0x21,0x53,0x60,0x18,0xf,0x8f,0x76,0xe2,0x51,0x65,0x92,0x52,0x3d,0xd,0x9,0x46,0x89,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x84,0xb2,0xa3,0x9f,0x1,0x4,0x84,0xb2,0xa3,0x9b,0x6,0x2,0x60,0,0x7,0x4,0x84,0xb2,0xa3,0x9f,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x76,0x6b],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0xb0]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x11,0x9a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0xf3]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x6b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xb0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0x79]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0xe1,0x3b]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x28]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0xbc]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0x12]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0x47]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0x54,0x1c]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x4c]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d,0x32,0xee]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0x23,0xcc]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x2d,0xb5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0x38,0x7a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0xc8]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x27,0xc9]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0xd7,0x3d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0x49]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0xf3,0x7a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41,0x53]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0x6c,0x1c]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0xd0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x7f,0x58]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x82]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0xc0,0xea]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0xa,0x5a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29,0xa5,0xcc]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0x6e]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0xc7]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x2c]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14,0xc6,0xc7]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12,0xe4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12,0x90]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xba,0x59]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0x3,0x6e]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x42]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0x39,0x5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x68]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0x90]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0xb3,0xb7]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0x66,0x2b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0xb2,0x5f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
