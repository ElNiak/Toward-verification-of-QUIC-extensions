SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL aioquic
[1,0,0,238,3,3,199,114,122,132,222,36,77,53,226,112,196,88,50,166,117,93,85,254,249,205,144,180,220,234,3,122,8,93,148,139,253,161,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,134,221,210,238,226,156,59,92,249,32,187,123,45,81,22,26,226,4,46,129,237,143,27,207,13,166,101,83,64,147,30,153,78,206,59,196,52,186,35,107,240,116,225,241,155,83,86,164,155,145,167,159,124,23,181,177,14,66,44,131,237,188,82,25,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,138,163,90,116,1,4,138,163,90,112,6,2,96,0,7,4,138,163,90,116,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,69,4]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xc7727a84,random_bytes:[0xde,0x24,0x4d,0x35,0xe2,0x70,0xc4,0x58,0x32,0xa6,0x75,0x5d,0x55,0xfe,0xf9,0xcd,0x90,0xb4,0xdc,0xea,0x3,0x7a,0x8,0x5d,0x94,0x8b,0xfd,0xa1]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x86,0xdd,0xd2,0xee,0xe2,0x9c,0x3b,0x5c,0xf9,0x20,0xbb,0x7b,0x2d,0x51,0x16,0x1a,0xe2,0x4,0x2e,0x81,0xed,0x8f,0x1b,0xcf,0xd,0xa6,0x65,0x53,0x40,0x93,0x1e,0x99,0x4e,0xce,0x3b,0xc4,0x34,0xba,0x23,0x6b,0xf0,0x74,0xe1,0xf1,0x9b,0x53,0x56,0xa4,0x9b,0x91,0xa7,0x9f,0x7c,0x17,0xb5,0xb1,0xe,0x42,0x2c,0x83,0xed,0xbc,0x52,0x19]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xaa35a74}},{max_idle_timeout:{seconds_16:0xaa35a70}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xaa35a74}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x4504}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xc7,0x72,0x7a,0x84,0xde,0x24,0x4d,0x35,0xe2,0x70,0xc4,0x58,0x32,0xa6,0x75,0x5d,0x55,0xfe,0xf9,0xcd,0x90,0xb4,0xdc,0xea,0x3,0x7a,0x8,0x5d,0x94,0x8b,0xfd,0xa1,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x86,0xdd,0xd2,0xee,0xe2,0x9c,0x3b,0x5c,0xf9,0x20,0xbb,0x7b,0x2d,0x51,0x16,0x1a,0xe2,0x4,0x2e,0x81,0xed,0x8f,0x1b,0xcf,0xd,0xa6,0x65,0x53,0x40,0x93,0x1e,0x99,0x4e,0xce,0x3b,0xc4,0x34,0xba,0x23,0x6b,0xf0,0x74,0xe1,0xf1,0x9b,0x53,0x56,0xa4,0x9b,0x91,0xa7,0x9f,0x7c,0x17,0xb5,0xb1,0xe,0x42,0x2c,0x83,0xed,0xbc,0x52,0x19,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8a,0xa3,0x5a,0x74,0x1,0x4,0x8a,0xa3,0x5a,0x70,0x6,0x2,0x60,0,0x7,0x4,0x8a,0xa3,0x5a,0x74,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x45,0x4],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x4b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x37,0x78]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xd2]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0x4]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x5a,0xe]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0x5a]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0x30]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0x32]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12,0xc7]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x88]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33,0x5e,0xa9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0xb]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0x15,0xf8]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0x28,0x55]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0x9,0x89]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x64,0x50]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0xf8]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0xd0,0x81]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0x95]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0xc7,0x5a]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x23,0x2f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0x4e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x19,0xf3]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x1a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0xcb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xea]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0x6,0x19]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x4e,0xf6]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0x7,0x10]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0x99,0x23]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0xd1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0xfd,0xf7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0x89]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0x28,0x44]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x8c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0xf3,0xa9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x10,0x30]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x7f,0x30]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0xe3]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x8]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0xd1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0xab,0xba]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0x1a,0xa5]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0x93]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xa0,0x9c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0x43,0x43]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0xc2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0xc5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x25,0x80]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67,0xef,0x92]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x4e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45]},1,2,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
