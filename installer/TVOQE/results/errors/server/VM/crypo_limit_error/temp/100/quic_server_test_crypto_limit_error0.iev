SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quinn
[1,0,0,236,3,3,209,49,252,71,51,211,190,106,250,170,185,9,168,226,90,209,228,122,200,171,246,23,136,132,44,72,208,123,240,159,6,36,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,230,208,180,71,63,82,54,110,155,109,221,122,139,200,191,67,31,8,13,192,4,30,39,62,73,193,66,211,181,255,50,51,205,5,68,218,5,73,236,137,50,222,233,15,68,237,89,23,152,64,20,249,243,42,133,141,10,66,114,158,30,135,1,233,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,137,44,68,13,1,4,137,44,68,5,6,2,96,0,7,4,137,44,68,13,15,8,0,0,0,0,0,0,0,1,12,0,8,2,104,193]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xd131fc47,random_bytes:[0x33,0xd3,0xbe,0x6a,0xfa,0xaa,0xb9,0x9,0xa8,0xe2,0x5a,0xd1,0xe4,0x7a,0xc8,0xab,0xf6,0x17,0x88,0x84,0x2c,0x48,0xd0,0x7b,0xf0,0x9f,0x6,0x24]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xe6,0xd0,0xb4,0x47,0x3f,0x52,0x36,0x6e,0x9b,0x6d,0xdd,0x7a,0x8b,0xc8,0xbf,0x43,0x1f,0x8,0xd,0xc0,0x4,0x1e,0x27,0x3e,0x49,0xc1,0x42,0xd3,0xb5,0xff,0x32,0x33,0xcd,0x5,0x44,0xda,0x5,0x49,0xec,0x89,0x32,0xde,0xe9,0xf,0x44,0xed,0x59,0x17,0x98,0x40,0x14,0xf9,0xf3,0x2a,0x85,0x8d,0xa,0x42,0x72,0x9e,0x1e,0x87,0x1,0xe9]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x92c440d}},{max_idle_timeout:{seconds_16:0x92c4405}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x92c440d}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x28c1}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0xd1,0x31,0xfc,0x47,0x33,0xd3,0xbe,0x6a,0xfa,0xaa,0xb9,0x9,0xa8,0xe2,0x5a,0xd1,0xe4,0x7a,0xc8,0xab,0xf6,0x17,0x88,0x84,0x2c,0x48,0xd0,0x7b,0xf0,0x9f,0x6,0x24,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xe6,0xd0,0xb4,0x47,0x3f,0x52,0x36,0x6e,0x9b,0x6d,0xdd,0x7a,0x8b,0xc8,0xbf,0x43,0x1f,0x8,0xd,0xc0,0x4,0x1e,0x27,0x3e,0x49,0xc1,0x42,0xd3,0xb5,0xff,0x32,0x33,0xcd,0x5,0x44,0xda,0x5,0x49,0xec,0x89,0x32,0xde,0xe9,0xf,0x44,0xed,0x59,0x17,0x98,0x40,0x14,0xf9,0xf3,0x2a,0x85,0x8d,0xa,0x42,0x72,0x9e,0x1e,0x87,0x1,0xe9,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x89,0x2c,0x44,0xd,0x1,0x4,0x89,0x2c,0x44,0x5,0x6,0x2,0x60,0,0x7,0x4,0x89,0x2c,0x44,0xd,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x68,0xc1],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0xa3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x14]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d,0xb4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0xea]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x85,0x64]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0xb4]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0xe2]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a,0x4f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0x50,0x32]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0xa4,0x6a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x9e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0x71]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0x41]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0x6d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0xb9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0xaf]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7,0x82,0xa6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0xac,0xf1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x13]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0x3f,0x50]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0xf3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0xb4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x64,0x5f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0x67,0x1c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0x5c,0x34]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x48]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0x57,0x4f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x42]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x1c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0x89]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0xda]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0xf1,0x1a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0x67,0xce]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0xeb]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0,0x1e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea,0xd2]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0x65,0x1a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8,0xb2,0xb1]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x32,0x47]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0xb0,0x80]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76,0xe4]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0xf7]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0xad]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x79]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0xba]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xc2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22,0xab]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0x91,0x18]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x27,0x7e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0xeb,0x4a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0xc3,0x3f]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0xe7]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
