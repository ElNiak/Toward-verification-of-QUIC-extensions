SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,236,3,3,32,22,124,26,124,110,236,120,166,10,35,232,186,55,18,143,65,223,103,183,164,160,115,229,63,160,199,132,81,242,151,250,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,133,180,216,249,247,97,103,220,204,70,253,164,31,34,144,223,200,7,65,189,116,140,224,195,224,119,114,78,150,250,92,250,93,43,5,223,41,102,57,103,22,232,35,148,28,14,155,195,82,104,155,192,57,115,237,13,20,104,142,103,48,165,217,108,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,139,158,51,240,1,4,139,158,51,236,6,2,96,0,7,4,139,158,51,240,15,8,0,0,0,0,0,0,0,1,12,0,8,2,98,108]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x20167c1a,random_bytes:[0x7c,0x6e,0xec,0x78,0xa6,0xa,0x23,0xe8,0xba,0x37,0x12,0x8f,0x41,0xdf,0x67,0xb7,0xa4,0xa0,0x73,0xe5,0x3f,0xa0,0xc7,0x84,0x51,0xf2,0x97,0xfa]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x85,0xb4,0xd8,0xf9,0xf7,0x61,0x67,0xdc,0xcc,0x46,0xfd,0xa4,0x1f,0x22,0x90,0xdf,0xc8,0x7,0x41,0xbd,0x74,0x8c,0xe0,0xc3,0xe0,0x77,0x72,0x4e,0x96,0xfa,0x5c,0xfa,0x5d,0x2b,0x5,0xdf,0x29,0x66,0x39,0x67,0x16,0xe8,0x23,0x94,0x1c,0xe,0x9b,0xc3,0x52,0x68,0x9b,0xc0,0x39,0x73,0xed,0xd,0x14,0x68,0x8e,0x67,0x30,0xa5,0xd9,0x6c]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xb9e33f0}},{max_idle_timeout:{seconds_16:0xb9e33ec}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xb9e33f0}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x226c}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x20,0x16,0x7c,0x1a,0x7c,0x6e,0xec,0x78,0xa6,0xa,0x23,0xe8,0xba,0x37,0x12,0x8f,0x41,0xdf,0x67,0xb7,0xa4,0xa0,0x73,0xe5,0x3f,0xa0,0xc7,0x84,0x51,0xf2,0x97,0xfa,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x85,0xb4,0xd8,0xf9,0xf7,0x61,0x67,0xdc,0xcc,0x46,0xfd,0xa4,0x1f,0x22,0x90,0xdf,0xc8,0x7,0x41,0xbd,0x74,0x8c,0xe0,0xc3,0xe0,0x77,0x72,0x4e,0x96,0xfa,0x5c,0xfa,0x5d,0x2b,0x5,0xdf,0x29,0x66,0x39,0x67,0x16,0xe8,0x23,0x94,0x1c,0xe,0x9b,0xc3,0x52,0x68,0x9b,0xc0,0x39,0x73,0xed,0xd,0x14,0x68,0x8e,0x67,0x30,0xa5,0xd9,0x6c,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x8b,0x9e,0x33,0xf0,0x1,0x4,0x8b,0x9e,0x33,0xec,0x6,0x2,0x60,0,0x7,0x4,0x8b,0x9e,0x33,0xf0,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x62,0x6c],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x51,0x2f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x2a,0xe7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xce]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x9a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x80]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c,0x75,0xdf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0xa,0xe6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0x45,0x5d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0xbb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0xb9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d,0x6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0x60]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0xc9,0xc9]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0xe9,0x4c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0xd6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0x9d,0xc7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0x37]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0xdf,0x1c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0x90]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0xd7,0x48]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb,0x69,0xdc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0xc6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0x3c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0xd6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0xef,0x48]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0xfb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13,0x27,0x50]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0xb7,0xa7]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4,0x46]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0x1f,0x94]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4,0x1f,0xd2]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x6,0x91]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0x3]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0x9d,0xf2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0x16]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0xf6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32,0x34]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x19]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0x6e]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0xde,0x91]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0x8c,0x3f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x61,0x49]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0x14,0x36]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4,0x5c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0x43]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0xf7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0x38,0x3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0xd9,0xfa]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0xba,0xf8]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0xf3]},1,2,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
