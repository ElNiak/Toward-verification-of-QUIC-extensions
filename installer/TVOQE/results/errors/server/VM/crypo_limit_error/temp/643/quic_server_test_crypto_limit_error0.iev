SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,146,18,49,166,10,21,132,143,53,198,143,112,0,199,171,6,198,247,115,103,112,63,169,132,51,87,82,211,210,93,89,87,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,195,104,22,229,226,119,151,56,157,102,227,25,19,245,131,113,252,147,14,191,44,78,81,189,23,215,178,168,128,96,56,97,249,68,65,117,86,16,196,98,203,123,78,70,1,103,165,204,194,242,63,87,195,145,173,224,132,103,80,129,207,135,218,158,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,139,61,76,136,1,4,139,61,76,129,6,2,96,0,7,4,139,61,76,136,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,249,125]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x921231a6,random_bytes:[0xa,0x15,0x84,0x8f,0x35,0xc6,0x8f,0x70,0,0xc7,0xab,0x6,0xc6,0xf7,0x73,0x67,0x70,0x3f,0xa9,0x84,0x33,0x57,0x52,0xd3,0xd2,0x5d,0x59,0x57]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xc3,0x68,0x16,0xe5,0xe2,0x77,0x97,0x38,0x9d,0x66,0xe3,0x19,0x13,0xf5,0x83,0x71,0xfc,0x93,0xe,0xbf,0x2c,0x4e,0x51,0xbd,0x17,0xd7,0xb2,0xa8,0x80,0x60,0x38,0x61,0xf9,0x44,0x41,0x75,0x56,0x10,0xc4,0x62,0xcb,0x7b,0x4e,0x46,0x1,0x67,0xa5,0xcc,0xc2,0xf2,0x3f,0x57,0xc3,0x91,0xad,0xe0,0x84,0x67,0x50,0x81,0xcf,0x87,0xda,0x9e]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xb3d4c88}},{max_idle_timeout:{seconds_16:0xb3d4c81}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xb3d4c88}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xf97d}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x92,0x12,0x31,0xa6,0xa,0x15,0x84,0x8f,0x35,0xc6,0x8f,0x70,0,0xc7,0xab,0x6,0xc6,0xf7,0x73,0x67,0x70,0x3f,0xa9,0x84,0x33,0x57,0x52,0xd3,0xd2,0x5d,0x59,0x57,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xc3,0x68,0x16,0xe5,0xe2,0x77,0x97,0x38,0x9d,0x66,0xe3,0x19,0x13,0xf5,0x83,0x71,0xfc,0x93,0xe,0xbf,0x2c,0x4e,0x51,0xbd,0x17,0xd7,0xb2,0xa8,0x80,0x60,0x38,0x61,0xf9,0x44,0x41,0x75,0x56,0x10,0xc4,0x62,0xcb,0x7b,0x4e,0x46,0x1,0x67,0xa5,0xcc,0xc2,0xf2,0x3f,0x57,0xc3,0x91,0xad,0xe0,0x84,0x67,0x50,0x81,0xcf,0x87,0xda,0x9e,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8b,0x3d,0x4c,0x88,0x1,0x4,0x8b,0x3d,0x4c,0x81,0x6,0x2,0x60,0,0x7,0x4,0x8b,0x3d,0x4c,0x88,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xf9,0x7d],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x67]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x53]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x91]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0xf3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0xcb]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0xd7]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x19,0xcf]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0x8c,0x52]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0x57,0xd8]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0x49]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0x4f,0xea]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0x8f]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0x19,0x91]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0x7c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0x84,0x25]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0x58,0]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xb5]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0xef]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7,0xe5,0x2]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0x77,0xcf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d,0xf5]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81,0xf5,0x56]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11,0x56]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21,0x24]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0x41,0x9b]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0x68,0xcd]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0xb6,0x76]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0xe,0xe5]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xde,0x8]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0x6d,0xb6]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0xc]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x15]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92,0xa3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x4b]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0xfe,0xdb]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xb3]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x4d,0xa7]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d,0xa2,0x18]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xc9,0x54]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0x2e,0x2e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0xaf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0x18]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0x34]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0x9e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0xae,0xd3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0xe1,0x69]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0x30]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0xb8]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0x75,0xac]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82]},1,8,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
