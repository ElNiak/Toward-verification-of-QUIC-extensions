SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL aioquic
[1,0,0,236,3,3,216,126,94,142,55,178,182,248,40,131,144,59,221,155,88,32,220,253,104,112,220,222,150,233,104,105,109,61,123,252,97,139,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,60,244,154,242,220,90,51,57,5,116,87,127,202,175,108,63,244,39,183,77,123,191,162,46,193,68,118,252,1,212,25,85,192,12,224,57,139,165,98,0,12,71,42,120,96,126,155,67,196,229,205,202,33,152,178,55,145,64,198,112,30,113,43,117,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,129,132,250,165,1,4,129,132,250,164,6,2,96,0,7,4,129,132,250,165,15,8,0,0,0,0,0,0,0,1,12,0,8,2,64,188]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xd87e5e8e,random_bytes:[0x37,0xb2,0xb6,0xf8,0x28,0x83,0x90,0x3b,0xdd,0x9b,0x58,0x20,0xdc,0xfd,0x68,0x70,0xdc,0xde,0x96,0xe9,0x68,0x69,0x6d,0x3d,0x7b,0xfc,0x61,0x8b]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x3c,0xf4,0x9a,0xf2,0xdc,0x5a,0x33,0x39,0x5,0x74,0x57,0x7f,0xca,0xaf,0x6c,0x3f,0xf4,0x27,0xb7,0x4d,0x7b,0xbf,0xa2,0x2e,0xc1,0x44,0x76,0xfc,0x1,0xd4,0x19,0x55,0xc0,0xc,0xe0,0x39,0x8b,0xa5,0x62,0,0xc,0x47,0x2a,0x78,0x60,0x7e,0x9b,0x43,0xc4,0xe5,0xcd,0xca,0x21,0x98,0xb2,0x37,0x91,0x40,0xc6,0x70,0x1e,0x71,0x2b,0x75]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x184faa5}},{max_idle_timeout:{seconds_16:0x184faa4}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x184faa5}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xbc}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0xd8,0x7e,0x5e,0x8e,0x37,0xb2,0xb6,0xf8,0x28,0x83,0x90,0x3b,0xdd,0x9b,0x58,0x20,0xdc,0xfd,0x68,0x70,0xdc,0xde,0x96,0xe9,0x68,0x69,0x6d,0x3d,0x7b,0xfc,0x61,0x8b,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x3c,0xf4,0x9a,0xf2,0xdc,0x5a,0x33,0x39,0x5,0x74,0x57,0x7f,0xca,0xaf,0x6c,0x3f,0xf4,0x27,0xb7,0x4d,0x7b,0xbf,0xa2,0x2e,0xc1,0x44,0x76,0xfc,0x1,0xd4,0x19,0x55,0xc0,0xc,0xe0,0x39,0x8b,0xa5,0x62,0,0xc,0x47,0x2a,0x78,0x60,0x7e,0x9b,0x43,0xc4,0xe5,0xcd,0xca,0x21,0x98,0xb2,0x37,0x91,0x40,0xc6,0x70,0x1e,0x71,0x2b,0x75,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x81,0x84,0xfa,0xa5,0x1,0x4,0x81,0x84,0xfa,0xa4,0x6,0x2,0x60,0,0x7,0x4,0x81,0x84,0xfa,0xa5,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x40,0xbc],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0x8d]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0x35]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x22,0xb1]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0xea]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0xe4,0x4]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x3d,0x89]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x99,0x40]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0xd]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0xf8,0x95]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0x14,0x68]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xa5,0x8d]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f,0xcf]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0x47]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0xd]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0xeb]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4,0x19]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0x2b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0x6a,0x1d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0xff,0x6c]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xf3,0xe8]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x79]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35,0xbe]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0x78,0xc1]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x7e,0x9f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0xea,0x96]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0x72]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0xcd,0x72]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0xdd]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0x31,0xd0]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0x2a,0x67]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0xbb,0x5f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x40,0xf2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x84]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0x33,0x12]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0x95,0x73]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0x13,0x95]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0xc4,0xe7]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x31,0x72]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44,0x33]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x75,0x9d]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0xf5,0xa]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d,0x3a,0x35]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x5b]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0xa5]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0x1c,0x2e]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0x4d,0xd7]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x15,0xb3]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0x1a,0x28]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14,0xe,0x5c]},1,7,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0x60,0x45]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,4,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
