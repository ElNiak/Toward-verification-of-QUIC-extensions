SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,238,3,3,177,10,67,223,117,145,108,70,172,90,40,37,56,171,24,83,105,207,24,47,36,238,0,145,86,59,198,15,94,231,152,41,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,144,152,61,64,150,148,5,128,159,93,110,246,115,88,90,209,239,161,83,170,177,116,155,71,134,133,27,23,75,142,9,98,121,33,142,202,138,108,147,29,240,30,219,185,231,4,36,24,108,10,14,134,51,120,225,102,18,70,71,252,9,167,229,253,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,131,62,29,118,1,4,131,62,29,114,6,2,96,0,7,4,131,62,29,118,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,234,110]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xb10a43df,random_bytes:[0x75,0x91,0x6c,0x46,0xac,0x5a,0x28,0x25,0x38,0xab,0x18,0x53,0x69,0xcf,0x18,0x2f,0x24,0xee,0,0x91,0x56,0x3b,0xc6,0xf,0x5e,0xe7,0x98,0x29]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x90,0x98,0x3d,0x40,0x96,0x94,0x5,0x80,0x9f,0x5d,0x6e,0xf6,0x73,0x58,0x5a,0xd1,0xef,0xa1,0x53,0xaa,0xb1,0x74,0x9b,0x47,0x86,0x85,0x1b,0x17,0x4b,0x8e,0x9,0x62,0x79,0x21,0x8e,0xca,0x8a,0x6c,0x93,0x1d,0xf0,0x1e,0xdb,0xb9,0xe7,0x4,0x24,0x18,0x6c,0xa,0xe,0x86,0x33,0x78,0xe1,0x66,0x12,0x46,0x47,0xfc,0x9,0xa7,0xe5,0xfd]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x33e1d76}},{max_idle_timeout:{seconds_16:0x33e1d72}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x33e1d76}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xea6e}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xb1,0xa,0x43,0xdf,0x75,0x91,0x6c,0x46,0xac,0x5a,0x28,0x25,0x38,0xab,0x18,0x53,0x69,0xcf,0x18,0x2f,0x24,0xee,0,0x91,0x56,0x3b,0xc6,0xf,0x5e,0xe7,0x98,0x29,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x90,0x98,0x3d,0x40,0x96,0x94,0x5,0x80,0x9f,0x5d,0x6e,0xf6,0x73,0x58,0x5a,0xd1,0xef,0xa1,0x53,0xaa,0xb1,0x74,0x9b,0x47,0x86,0x85,0x1b,0x17,0x4b,0x8e,0x9,0x62,0x79,0x21,0x8e,0xca,0x8a,0x6c,0x93,0x1d,0xf0,0x1e,0xdb,0xb9,0xe7,0x4,0x24,0x18,0x6c,0xa,0xe,0x86,0x33,0x78,0xe1,0x66,0x12,0x46,0x47,0xfc,0x9,0xa7,0xe5,0xfd,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x83,0x3e,0x1d,0x76,0x1,0x4,0x83,0x3e,0x1d,0x72,0x6,0x2,0x60,0,0x7,0x4,0x83,0x3e,0x1d,0x76,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xea,0x6e],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0xe5,0x34]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x71]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0x34]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa,0x6d,0xa]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0x15,0xd9]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14,0xb7,0xf6]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x36,0xc1]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69,0x93]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0xd7,0xc]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0x80]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x12]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0xc8,0x3c]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0xbe,0xd1]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0xe4,0x61]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0x21,0x9e]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0x96,0x4f]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x2f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xe2]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0xc0]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0x58]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0xd4]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x10]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0x5,0x50]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7,0xc]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0x4c,0x90]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7,0xd,0x83]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x1,0xd2]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0xd0]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0xb6]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0x5a]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0x80,0xc5]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xca]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0xd9]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0x37]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0xb0,0x87]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7,0x9a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0x26,0x2f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54,0x34,0xf2]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0x5e]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x92,0x16]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x52,0x57]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x7,0x87]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x3a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xd4,0xde]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0xb2]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xb4]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x23,0x7]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
