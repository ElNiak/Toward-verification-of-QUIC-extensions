SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL aioquic
[1,0,0,236,3,3,89,7,36,149,184,186,210,107,145,24,208,180,0,135,231,52,125,171,102,200,251,123,149,199,178,175,51,248,61,84,186,147,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,150,76,243,17,255,136,102,58,132,71,18,207,207,166,206,250,69,228,232,218,145,190,76,150,232,80,88,210,96,28,108,198,49,173,210,110,248,57,249,239,204,42,186,14,102,235,58,221,231,136,215,47,49,252,63,41,3,187,144,12,187,78,79,219,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,138,79,195,232,1,4,138,79,195,230,6,2,96,0,7,4,138,79,195,232,15,8,0,0,0,0,0,0,0,1,12,0,8,2,109,42]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x59072495,random_bytes:[0xb8,0xba,0xd2,0x6b,0x91,0x18,0xd0,0xb4,0,0x87,0xe7,0x34,0x7d,0xab,0x66,0xc8,0xfb,0x7b,0x95,0xc7,0xb2,0xaf,0x33,0xf8,0x3d,0x54,0xba,0x93]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x96,0x4c,0xf3,0x11,0xff,0x88,0x66,0x3a,0x84,0x47,0x12,0xcf,0xcf,0xa6,0xce,0xfa,0x45,0xe4,0xe8,0xda,0x91,0xbe,0x4c,0x96,0xe8,0x50,0x58,0xd2,0x60,0x1c,0x6c,0xc6,0x31,0xad,0xd2,0x6e,0xf8,0x39,0xf9,0xef,0xcc,0x2a,0xba,0xe,0x66,0xeb,0x3a,0xdd,0xe7,0x88,0xd7,0x2f,0x31,0xfc,0x3f,0x29,0x3,0xbb,0x90,0xc,0xbb,0x4e,0x4f,0xdb]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xa4fc3e8}},{max_idle_timeout:{seconds_16:0xa4fc3e6}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xa4fc3e8}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x2d2a}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x59,0x7,0x24,0x95,0xb8,0xba,0xd2,0x6b,0x91,0x18,0xd0,0xb4,0,0x87,0xe7,0x34,0x7d,0xab,0x66,0xc8,0xfb,0x7b,0x95,0xc7,0xb2,0xaf,0x33,0xf8,0x3d,0x54,0xba,0x93,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x96,0x4c,0xf3,0x11,0xff,0x88,0x66,0x3a,0x84,0x47,0x12,0xcf,0xcf,0xa6,0xce,0xfa,0x45,0xe4,0xe8,0xda,0x91,0xbe,0x4c,0x96,0xe8,0x50,0x58,0xd2,0x60,0x1c,0x6c,0xc6,0x31,0xad,0xd2,0x6e,0xf8,0x39,0xf9,0xef,0xcc,0x2a,0xba,0xe,0x66,0xeb,0x3a,0xdd,0xe7,0x88,0xd7,0x2f,0x31,0xfc,0x3f,0x29,0x3,0xbb,0x90,0xc,0xbb,0x4e,0x4f,0xdb,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x8a,0x4f,0xc3,0xe8,0x1,0x4,0x8a,0x4f,0xc3,0xe6,0x6,0x2,0x60,0,0x7,0x4,0x8a,0x4f,0xc3,0xe8,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x6d,0x2a],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0xbb]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33,0x5c,0xa6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0x36]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x12,0xf6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0x29,0xf5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0x35,0xa6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0xeb,0]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0x5e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0xf9,0x13]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x3,0x5c]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0xdb]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0x86]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xf4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x6f]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0xcb,0xc3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0xa5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x39,0xa9]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0xf6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0x3a,0xca]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0xb8,0xe0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0xa1]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0x77]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x81,0x3c]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xe1,0xe7]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0x1c,0xd1]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0x12]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0x56,0x73]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x22,0xc0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0xe8,0x17]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0xab,0x4d]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0xa3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32,0xc3]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0xba]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0xa5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0xa5,0x25]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x85]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d,0xa3]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0xcf,0xd0]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21,0x59,0x2a]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0xad,0x7c]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0xb7,0x9f]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x52,0xc6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0x93,0x80]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69,0xff,0x1f]},1,10,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
