SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,236,3,3,151,160,244,146,255,153,197,174,19,247,61,143,121,235,149,162,101,70,209,60,226,236,220,133,119,106,243,81,204,32,189,212,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,186,94,128,65,151,45,134,123,4,127,164,10,217,214,87,40,102,26,147,219,66,131,26,161,112,216,220,0,41,193,88,227,169,8,123,181,18,216,111,116,234,229,52,51,253,224,103,176,149,110,46,11,206,95,232,22,26,132,211,103,83,181,65,24,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,135,125,159,36,1,4,135,125,159,33,6,2,96,0,7,4,135,125,159,36,15,8,0,0,0,0,0,0,0,1,12,0,8,2,125,29]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x97a0f492,random_bytes:[0xff,0x99,0xc5,0xae,0x13,0xf7,0x3d,0x8f,0x79,0xeb,0x95,0xa2,0x65,0x46,0xd1,0x3c,0xe2,0xec,0xdc,0x85,0x77,0x6a,0xf3,0x51,0xcc,0x20,0xbd,0xd4]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xba,0x5e,0x80,0x41,0x97,0x2d,0x86,0x7b,0x4,0x7f,0xa4,0xa,0xd9,0xd6,0x57,0x28,0x66,0x1a,0x93,0xdb,0x42,0x83,0x1a,0xa1,0x70,0xd8,0xdc,0,0x29,0xc1,0x58,0xe3,0xa9,0x8,0x7b,0xb5,0x12,0xd8,0x6f,0x74,0xea,0xe5,0x34,0x33,0xfd,0xe0,0x67,0xb0,0x95,0x6e,0x2e,0xb,0xce,0x5f,0xe8,0x16,0x1a,0x84,0xd3,0x67,0x53,0xb5,0x41,0x18]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x77d9f24}},{max_idle_timeout:{seconds_16:0x77d9f21}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x77d9f24}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x3d1d}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x97,0xa0,0xf4,0x92,0xff,0x99,0xc5,0xae,0x13,0xf7,0x3d,0x8f,0x79,0xeb,0x95,0xa2,0x65,0x46,0xd1,0x3c,0xe2,0xec,0xdc,0x85,0x77,0x6a,0xf3,0x51,0xcc,0x20,0xbd,0xd4,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xba,0x5e,0x80,0x41,0x97,0x2d,0x86,0x7b,0x4,0x7f,0xa4,0xa,0xd9,0xd6,0x57,0x28,0x66,0x1a,0x93,0xdb,0x42,0x83,0x1a,0xa1,0x70,0xd8,0xdc,0,0x29,0xc1,0x58,0xe3,0xa9,0x8,0x7b,0xb5,0x12,0xd8,0x6f,0x74,0xea,0xe5,0x34,0x33,0xfd,0xe0,0x67,0xb0,0x95,0x6e,0x2e,0xb,0xce,0x5f,0xe8,0x16,0x1a,0x84,0xd3,0x67,0x53,0xb5,0x41,0x18,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x87,0x7d,0x9f,0x24,0x1,0x4,0x87,0x7d,0x9f,0x21,0x6,0x2,0x60,0,0x7,0x4,0x87,0x7d,0x9f,0x24,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x7d,0x1d],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xdf]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x53]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x79,0xd7]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x74,0x23]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x2,0x25]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x59,0x76]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0xdf]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44,0x7f,0xec]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55,0xf0,0x74]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0xae]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x5a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0x5e,0x4e]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0xde]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0x4c]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0xc8,0x11]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0x2b]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0xf4]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x80,0x38]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0xd8]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0x1a]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x82]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0xa1,0x6d]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0xc]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0xf0,0xac]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0x56,0x3b]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0xd5,0x47]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0xc,0]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0xf1]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa,0x57,0xc8]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xd4,0x37]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c,0xbf,0x33]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x96]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0xc3]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0x38]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22,0x3e,0xd0]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x51]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0xe1,0x22]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x3]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xc6]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0xdd,0x28]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0xdc]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0xa7,0x3e]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x32]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,6,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
