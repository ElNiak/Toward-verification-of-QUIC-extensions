SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN 
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
[1,0,0,225,3,3,88,127,80,198,229,196,59,57,45,25,177,145,87,250,143,74,34,43,239,145,81,229,26,15,129,184,137,47,220,138,119,25,0,0,6,19,2,19,1,19,3,1,0,0,178,0,51,0,71,0,69,0,23,0,65,4,84,137,169,21,28,90,19,152,180,111,244,109,81,240,67,26,189,211,184,225,103,110,121,152,39,169,46,40,181,232,69,239,21,24,61,131,53,62,96,244,146,90,241,45,212,193,250,166,128,138,225,175,227,90,16,247,46,26,221,18,186,231,27,71,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,3,0,1,0,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,36,5,2,96,0,4,4,130,79,147,244,1,4,130,79,147,242,6,2,96,0,7,4,130,79,147,244,15,8,0,0,0,0,0,0,0,0]
0


tag v1: 1
Tag size: 1
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"

tag v1: 51
Tag size: 1
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"

tag v1: 0
Tag size: 1
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"

tag v1: 16
Tag size: 1
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"

tag v1: 43
Tag size: 1
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"

tag v1: 13
Tag size: 1
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"

tag v1: 10
Tag size: 1
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"

tag v1: 65445
Tag size: 4
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"

tag v1: 5
Tag size: 1
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"

tag v1: 4
Tag size: 1
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"

tag v1: 1
Tag size: 1
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"

tag v1: 6
Tag size: 1
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"

tag v1: 7
Tag size: 1
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"

tag v1: 15
Tag size: 1
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x587f50c6,random_bytes:[0xe5,0xc4,0x3b,0x39,0x2d,0x19,0xb1,0x91,0x57,0xfa,0x8f,0x4a,0x22,0x2b,0xef,0x91,0x51,0xe5,0x1a,0xf,0x81,0xb8,0x89,0x2f,0xdc,0x8a,0x77,0x19]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x54,0x89,0xa9,0x15,0x1c,0x5a,0x13,0x98,0xb4,0x6f,0xf4,0x6d,0x51,0xf0,0x43,0x1a,0xbd,0xd3,0xb8,0xe1,0x67,0x6e,0x79,0x98,0x27,0xa9,0x2e,0x28,0xb5,0xe8,0x45,0xef,0x15,0x18,0x3d,0x83,0x35,0x3e,0x60,0xf4,0x92,0x5a,0xf1,0x2d,0xd4,0xc1,0xfa,0xa6,0x80,0x8a,0xe1,0xaf,0xe3,0x5a,0x10,0xf7,0x2e,0x1a,0xdd,0x12,0xba,0xe7,0x1b,0x47]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x1,0]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x24f93f4}},{max_idle_timeout:{seconds_16:0x24f93f2}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x24f93f4}},{initial_source_connection_id:{scid:0}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},0,0,[0x1,0,0,0xe1,0x3,0x3,0x58,0x7f,0x50,0xc6,0xe5,0xc4,0x3b,0x39,0x2d,0x19,0xb1,0x91,0x57,0xfa,0x8f,0x4a,0x22,0x2b,0xef,0x91,0x51,0xe5,0x1a,0xf,0x81,0xb8,0x89,0x2f,0xdc,0x8a,0x77,0x19,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xb2,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x54,0x89,0xa9,0x15,0x1c,0x5a,0x13,0x98,0xb4,0x6f,0xf4,0x6d,0x51,0xf0,0x43,0x1a,0xbd,0xd3,0xb8,0xe1,0x67,0x6e,0x79,0x98,0x27,0xa9,0x2e,0x28,0xb5,0xe8,0x45,0xef,0x15,0x18,0x3d,0x83,0x35,0x3e,0x60,0xf4,0x92,0x5a,0xf1,0x2d,0xd4,0xc1,0xfa,0xa6,0x80,0x8a,0xe1,0xaf,0xe3,0x5a,0x10,0xf7,0x2e,0x1a,0xdd,0x12,0xba,0xe7,0x1b,0x47,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x3,0,0x1,0,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x24,0x5,0x2,0x60,0,0x4,0x4,0x82,0x4f,0x93,0xf4,0x1,0x4,0x82,0x4f,0x93,0xf2,0x6,0x2,0x60,0,0x7,0x4,0x82,0x4f,0x93,0xf4,0xf,0x8,0,0,0,0,0,0,0,0],0,initial)
> frame.crypto.handle({offset:0,length:0xe5,data:[0x1,0,0,0xe1,0x3,0x3,0x58,0x7f,0x50,0xc6,0xe5,0xc4,0x3b,0x39,0x2d,0x19,0xb1,0x91,0x57,0xfa,0x8f,0x4a,0x22,0x2b,0xef,0x91,0x51,0xe5,0x1a,0xf,0x81,0xb8,0x89,0x2f,0xdc,0x8a,0x77,0x19,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xb2,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x54,0x89,0xa9,0x15,0x1c,0x5a,0x13,0x98,0xb4,0x6f,0xf4,0x6d,0x51,0xf0,0x43,0x1a,0xbd,0xd3,0xb8,0xe1,0x67,0x6e,0x79,0x98,0x27,0xa9,0x2e,0x28,0xb5,0xe8,0x45,0xef,0x15,0x18,0x3d,0x83,0x35,0x3e,0x60,0xf4,0x92,0x5a,0xf1,0x2d,0xd4,0xc1,0xfa,0xa6,0x80,0x8a,0xe1,0xaf,0xe3,0x5a,0x10,0xf7,0x2e,0x1a,0xdd,0x12,0xba,0xe7,0x1b,0x47,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x3,0,0x1,0,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x24,0x5,0x2,0x60,0,0x4,0x4,0x82,0x4f,0x93,0xf4,0x1,0x4,0x82,0x4f,0x93,0xf2,0x6,0x2,0x60,0,0x7,0x4,0x82,0x4f,0x93,0xf4,0xf,0x8,0,0,0,0,0,0,0,0]},0,0x9,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137c},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:0x1,src_cid:0,token:[],seq_num:0,payload:[{frame.crypto:{offset:0,length:0xe5,data:[0x1,0,0,0xe1,0x3,0x3,0x58,0x7f,0x50,0xc6,0xe5,0xc4,0x3b,0x39,0x2d,0x19,0xb1,0x91,0x57,0xfa,0x8f,0x4a,0x22,0x2b,0xef,0x91,0x51,0xe5,0x1a,0xf,0x81,0xb8,0x89,0x2f,0xdc,0x8a,0x77,0x19,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xb2,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x54,0x89,0xa9,0x15,0x1c,0x5a,0x13,0x98,0xb4,0x6f,0xf4,0x6d,0x51,0xf0,0x43,0x1a,0xbd,0xd3,0xb8,0xe1,0x67,0x6e,0x79,0x98,0x27,0xa9,0x2e,0x28,0xb5,0xe8,0x45,0xef,0x15,0x18,0x3d,0x83,0x35,0x3e,0x60,0xf4,0x92,0x5a,0xf1,0x2d,0xd4,0xc1,0xfa,0xa6,0x80,0x8a,0xe1,0xaf,0xe3,0x5a,0x10,0xf7,0x2e,0x1a,0xdd,0x12,0xba,0xe7,0x1b,0x47,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x3,0,0x1,0,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x24,0x5,0x2,0x60,0,0x4,0x4,0x82,0x4f,0x93,0xf4,0x1,0x4,0x82,0x4f,0x93,0xf2,0x6,0x2,0x60,0,0x7,0x4,0x82,0x4f,0x93,0xf4,0xf,0x8,0,0,0,0,0,0,0,0]}}]})
< show_pstats(0,initial,0)
< show_pstats(0,initial,0)
sending id: client_alt addr: 2130706433 port: 4443
pkt len: 44 type: 198 len len: 1 pyld_len: 23 pnum_pos: 20
< recv_packet({protocol:udp,addr:0x7f000001,port:0x115b},{protocol:udp,addr:0x7f000001,port:0x137c},{ptype:initial,pversion:0xff00001d,dst_cid:0,src_cid:0xc615329d,token:[],seq_num:0,payload:[{frame.ack:{largest_acked:0,ack_delay:0,ack_ranges:[{gap:0,ranges:0}]}}]})
< infer_frame(0xc615329d,0,{frame.ack:{largest_acked:0,ack_delay:0,ack_ranges:[{gap:0,ranges:0}]}})
< show_fsm_receiving_ack_event
< show_pstats(0xc615329d,initial,0)
< show_pstats(0xc615329d,initial,0)
> frame.handshake_done.handle({},0xc615329d,0,handshake,0)
> frame.handshake_done.handle({},0,0xc615329d,zero_rtt,0)
> client_send_event({protocol:udp,addr:0x7f000001,port:0x137c},{protocol:udp,addr:0x7f000001,port:0x115b},0xc615329d,0x4,0x1)
> frame.handshake_done.handle({},0xc615329d,0,version_negociation,0)
> frame.handshake_done.handle({},0xc615329d,0,zero_rtt,0)
> frame.handshake_done.handle({},0xc615329d,0,zero_rtt,0)
pkt len: 44 type: 198 len len: 1 pyld_len: 23 pnum_pos: 20
< recv_packet({protocol:udp,addr:0x7f000001,port:0x115b},{protocol:udp,addr:0x7f000001,port:0x137c},{ptype:initial,pversion:0xff00001d,dst_cid:0,src_cid:0xc615329d,token:[],seq_num:0x1,payload:[{frame.connection_close:{err_code:0x10a,frame_type:0,reason_phrase_length:0,reason_phrase:[]}}]})
< infer_frame(0xc615329d,0,{frame.connection_close:{err_code:0x10a,frame_type:0,reason_phrase_length:0,reason_phrase:[]}})
assumption_failed("/usr/local/lib/python2.7/dist-packages/ivy/include/1.7/quic_frame.ivy: line 995")
assumption_failed(""            require num_queued_frames(scid) > 0 -> e = queued_level(scid);
"")
ivy_return_code(1)
