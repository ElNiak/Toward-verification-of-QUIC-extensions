SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL picoquic
[1,0,0,236,3,3,92,13,42,215,166,168,211,251,38,221,81,246,107,43,52,174,54,12,118,202,24,76,231,251,149,65,11,77,108,135,102,206,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,213,22,202,1,130,237,88,53,253,82,7,80,172,144,181,108,205,78,119,250,143,211,55,11,69,105,159,169,6,193,17,71,62,165,105,42,230,135,235,253,241,254,221,181,17,211,138,83,159,31,118,191,6,212,38,65,250,185,1,27,178,6,224,105,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,136,142,78,244,1,4,136,142,78,236,6,2,96,0,7,4,136,142,78,244,15,8,0,0,0,0,0,0,0,1,12,0,8,2,113,48]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x5c0d2ad7,random_bytes:[0xa6,0xa8,0xd3,0xfb,0x26,0xdd,0x51,0xf6,0x6b,0x2b,0x34,0xae,0x36,0xc,0x76,0xca,0x18,0x4c,0xe7,0xfb,0x95,0x41,0xb,0x4d,0x6c,0x87,0x66,0xce]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xd5,0x16,0xca,0x1,0x82,0xed,0x58,0x35,0xfd,0x52,0x7,0x50,0xac,0x90,0xb5,0x6c,0xcd,0x4e,0x77,0xfa,0x8f,0xd3,0x37,0xb,0x45,0x69,0x9f,0xa9,0x6,0xc1,0x11,0x47,0x3e,0xa5,0x69,0x2a,0xe6,0x87,0xeb,0xfd,0xf1,0xfe,0xdd,0xb5,0x11,0xd3,0x8a,0x53,0x9f,0x1f,0x76,0xbf,0x6,0xd4,0x26,0x41,0xfa,0xb9,0x1,0x1b,0xb2,0x6,0xe0,0x69]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x88e4ef4}},{max_idle_timeout:{seconds_16:0x88e4eec}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x88e4ef4}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x3130}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x5c,0xd,0x2a,0xd7,0xa6,0xa8,0xd3,0xfb,0x26,0xdd,0x51,0xf6,0x6b,0x2b,0x34,0xae,0x36,0xc,0x76,0xca,0x18,0x4c,0xe7,0xfb,0x95,0x41,0xb,0x4d,0x6c,0x87,0x66,0xce,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xd5,0x16,0xca,0x1,0x82,0xed,0x58,0x35,0xfd,0x52,0x7,0x50,0xac,0x90,0xb5,0x6c,0xcd,0x4e,0x77,0xfa,0x8f,0xd3,0x37,0xb,0x45,0x69,0x9f,0xa9,0x6,0xc1,0x11,0x47,0x3e,0xa5,0x69,0x2a,0xe6,0x87,0xeb,0xfd,0xf1,0xfe,0xdd,0xb5,0x11,0xd3,0x8a,0x53,0x9f,0x1f,0x76,0xbf,0x6,0xd4,0x26,0x41,0xfa,0xb9,0x1,0x1b,0xb2,0x6,0xe0,0x69,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x88,0x8e,0x4e,0xf4,0x1,0x4,0x88,0x8e,0x4e,0xec,0x6,0x2,0x60,0,0x7,0x4,0x88,0x8e,0x4e,0xf4,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x71,0x30],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0xbb,0x13]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x26,0x36]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0x4b,0xe]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x50]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0x57,0x16]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0xbe,0x6a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0x6e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0x41]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x9,0x7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe,0x8e,0x20]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0x9e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x95,0xb7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x6c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f,0xea,0x73]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x40,0xa7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0x37]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0xcb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0xaf]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x85]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71,0xef,0xda]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xd3,0xf4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x6e,0x5e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x9c,0x33]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0x74]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x87,0x32]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0xbe]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0xe]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0xc2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0x41]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x85,0xe6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x9b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0xa4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0x19]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0xe9,0x40]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0xe4,0x1c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0x82,0x88]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0x74,0xd5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0xdb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0xd2]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0xbf,0xad]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0x7,0x31]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0x1c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0x41,0x73]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x56,0x86]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x13]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0xff,0x5d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d,0x19]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x4b,0xb]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0x42]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2,0x67,0x8d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0xf6,0x3a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0xa0,0xde]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94,0x64,0xdd]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0x5a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11,0x4c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0x16,0x78]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0x2b]},1,2,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
