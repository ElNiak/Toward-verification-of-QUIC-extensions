SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,236,3,3,91,36,161,79,113,186,66,235,150,203,216,133,0,187,167,227,135,101,141,111,155,222,54,204,107,205,64,14,215,34,57,244,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,18,18,137,69,45,92,253,205,247,193,223,129,78,184,191,95,38,226,46,210,72,71,179,178,253,127,35,110,69,174,51,18,39,7,43,43,36,130,33,155,112,39,180,156,174,10,81,5,50,205,18,216,218,63,255,205,177,183,39,110,104,195,220,176,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,128,60,95,33,1,4,128,60,95,29,6,2,96,0,7,4,128,60,95,33,15,8,0,0,0,0,0,0,0,1,12,0,8,2,96,21]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x5b24a14f,random_bytes:[0x71,0xba,0x42,0xeb,0x96,0xcb,0xd8,0x85,0,0xbb,0xa7,0xe3,0x87,0x65,0x8d,0x6f,0x9b,0xde,0x36,0xcc,0x6b,0xcd,0x40,0xe,0xd7,0x22,0x39,0xf4]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x12,0x12,0x89,0x45,0x2d,0x5c,0xfd,0xcd,0xf7,0xc1,0xdf,0x81,0x4e,0xb8,0xbf,0x5f,0x26,0xe2,0x2e,0xd2,0x48,0x47,0xb3,0xb2,0xfd,0x7f,0x23,0x6e,0x45,0xae,0x33,0x12,0x27,0x7,0x2b,0x2b,0x24,0x82,0x21,0x9b,0x70,0x27,0xb4,0x9c,0xae,0xa,0x51,0x5,0x32,0xcd,0x12,0xd8,0xda,0x3f,0xff,0xcd,0xb1,0xb7,0x27,0x6e,0x68,0xc3,0xdc,0xb0]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x3c5f21}},{max_idle_timeout:{seconds_16:0x3c5f1d}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x3c5f21}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x2015}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x5b,0x24,0xa1,0x4f,0x71,0xba,0x42,0xeb,0x96,0xcb,0xd8,0x85,0,0xbb,0xa7,0xe3,0x87,0x65,0x8d,0x6f,0x9b,0xde,0x36,0xcc,0x6b,0xcd,0x40,0xe,0xd7,0x22,0x39,0xf4,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x12,0x12,0x89,0x45,0x2d,0x5c,0xfd,0xcd,0xf7,0xc1,0xdf,0x81,0x4e,0xb8,0xbf,0x5f,0x26,0xe2,0x2e,0xd2,0x48,0x47,0xb3,0xb2,0xfd,0x7f,0x23,0x6e,0x45,0xae,0x33,0x12,0x27,0x7,0x2b,0x2b,0x24,0x82,0x21,0x9b,0x70,0x27,0xb4,0x9c,0xae,0xa,0x51,0x5,0x32,0xcd,0x12,0xd8,0xda,0x3f,0xff,0xcd,0xb1,0xb7,0x27,0x6e,0x68,0xc3,0xdc,0xb0,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x80,0x3c,0x5f,0x21,0x1,0x4,0x80,0x3c,0x5f,0x1d,0x6,0x2,0x60,0,0x7,0x4,0x80,0x3c,0x5f,0x21,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x60,0x15],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x39,0xc7]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0x7b,0x49]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0xe6,0xa9]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0x7,0xf9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0xda,0x4d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x31]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0xc1,0x87]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x68]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b,0x61]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0xe6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0xd,0x13]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0xa4,0x27]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0x7f,0x9b]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0xa6]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x66,0x40]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41,0xa1]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0xd3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x15,0x5c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0xdc,0x8c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x17,0x67]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0x75,0xce]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x4e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0x74]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54,0x94,0xb8]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0xfb]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0x54]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0x48]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0x14]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0xf8]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0x29,0x72]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x7b,0xa]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5,0x49]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41,0x84,0xd0]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56,0x7a,0xcb]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0xdb,0x56]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x97,0x7c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0xed,0xa5]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0x19,0xc3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0xc7,0x3a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0xd3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c,0x1e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0xf6,0x8c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0xe7,0x65]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x86]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x68]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0x2]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0xf7,0x3d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12,0x38]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0x1f,0x43]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86,0xfb]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44,0x97]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x2c]},1,12,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
