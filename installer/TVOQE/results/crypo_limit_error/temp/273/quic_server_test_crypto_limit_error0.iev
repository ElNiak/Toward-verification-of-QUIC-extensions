SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,238,3,3,55,69,166,168,160,145,244,225,102,73,184,30,73,44,43,124,122,169,253,232,11,148,197,218,93,118,92,102,118,141,21,248,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,237,30,136,102,23,217,182,120,148,117,189,106,36,233,25,46,141,208,41,158,79,58,109,4,193,202,139,80,194,74,53,237,131,186,181,38,92,2,194,216,171,47,28,48,119,247,254,219,179,244,118,35,168,194,66,229,79,197,149,114,133,165,52,223,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,142,86,129,174,1,4,142,86,129,169,6,2,96,0,7,4,142,86,129,174,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,187,9]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x3745a6a8,random_bytes:[0xa0,0x91,0xf4,0xe1,0x66,0x49,0xb8,0x1e,0x49,0x2c,0x2b,0x7c,0x7a,0xa9,0xfd,0xe8,0xb,0x94,0xc5,0xda,0x5d,0x76,0x5c,0x66,0x76,0x8d,0x15,0xf8]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xed,0x1e,0x88,0x66,0x17,0xd9,0xb6,0x78,0x94,0x75,0xbd,0x6a,0x24,0xe9,0x19,0x2e,0x8d,0xd0,0x29,0x9e,0x4f,0x3a,0x6d,0x4,0xc1,0xca,0x8b,0x50,0xc2,0x4a,0x35,0xed,0x83,0xba,0xb5,0x26,0x5c,0x2,0xc2,0xd8,0xab,0x2f,0x1c,0x30,0x77,0xf7,0xfe,0xdb,0xb3,0xf4,0x76,0x23,0xa8,0xc2,0x42,0xe5,0x4f,0xc5,0x95,0x72,0x85,0xa5,0x34,0xdf]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xe5681ae}},{max_idle_timeout:{seconds_16:0xe5681a9}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xe5681ae}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xbb09}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x37,0x45,0xa6,0xa8,0xa0,0x91,0xf4,0xe1,0x66,0x49,0xb8,0x1e,0x49,0x2c,0x2b,0x7c,0x7a,0xa9,0xfd,0xe8,0xb,0x94,0xc5,0xda,0x5d,0x76,0x5c,0x66,0x76,0x8d,0x15,0xf8,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xed,0x1e,0x88,0x66,0x17,0xd9,0xb6,0x78,0x94,0x75,0xbd,0x6a,0x24,0xe9,0x19,0x2e,0x8d,0xd0,0x29,0x9e,0x4f,0x3a,0x6d,0x4,0xc1,0xca,0x8b,0x50,0xc2,0x4a,0x35,0xed,0x83,0xba,0xb5,0x26,0x5c,0x2,0xc2,0xd8,0xab,0x2f,0x1c,0x30,0x77,0xf7,0xfe,0xdb,0xb3,0xf4,0x76,0x23,0xa8,0xc2,0x42,0xe5,0x4f,0xc5,0x95,0x72,0x85,0xa5,0x34,0xdf,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8e,0x56,0x81,0xae,0x1,0x4,0x8e,0x56,0x81,0xa9,0x6,0x2,0x60,0,0x7,0x4,0x8e,0x56,0x81,0xae,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xbb,0x9],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0x2d]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb,0x75]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x4e,0x7f]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0xfb,0x76]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0xe0]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29,0xfd,0xb]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xbc,0x41]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0xf1,0xbf]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0x20]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0xff,0xfb]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0x51,0x29]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x4a,0xba]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0x36]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0xf1]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0xdf,0x9]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0xe4,0x25]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x37,0xd5]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa,0x2b]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x8d,0x7d]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0x7e]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0x82]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0x39]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0x25]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0xa5,0xdb]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x4d,0x3d]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55,0x9c,0xf1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4,0xc8,0xd2]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0xf4]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0x59]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0xde,0xcb]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xa1]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x8e,0xff]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x44]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0xfc]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51,0xed,0xde]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0x66]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0x77,0x5c]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7,0xa0]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0xd2]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0xc]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0xa6]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4,0x89]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0xc0,0xa1]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33,0xde,0xd0]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
