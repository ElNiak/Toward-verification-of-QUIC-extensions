SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quic-go
[1,0,0,238,3,3,156,228,206,225,31,185,118,59,31,16,209,51,15,244,181,101,3,89,226,105,11,10,54,114,131,181,16,83,132,73,185,156,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,3,171,46,251,93,145,105,10,53,226,195,86,90,220,122,106,11,185,238,29,172,197,95,240,115,174,115,175,225,190,90,140,85,181,150,138,9,247,12,139,202,36,15,168,70,231,5,109,209,9,25,113,202,200,153,193,67,76,26,3,241,230,122,251,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,141,74,245,191,1,4,141,74,245,189,6,2,96,0,7,4,141,74,245,191,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,106,237]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x9ce4cee1,random_bytes:[0x1f,0xb9,0x76,0x3b,0x1f,0x10,0xd1,0x33,0xf,0xf4,0xb5,0x65,0x3,0x59,0xe2,0x69,0xb,0xa,0x36,0x72,0x83,0xb5,0x10,0x53,0x84,0x49,0xb9,0x9c]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x3,0xab,0x2e,0xfb,0x5d,0x91,0x69,0xa,0x35,0xe2,0xc3,0x56,0x5a,0xdc,0x7a,0x6a,0xb,0xb9,0xee,0x1d,0xac,0xc5,0x5f,0xf0,0x73,0xae,0x73,0xaf,0xe1,0xbe,0x5a,0x8c,0x55,0xb5,0x96,0x8a,0x9,0xf7,0xc,0x8b,0xca,0x24,0xf,0xa8,0x46,0xe7,0x5,0x6d,0xd1,0x9,0x19,0x71,0xca,0xc8,0x99,0xc1,0x43,0x4c,0x1a,0x3,0xf1,0xe6,0x7a,0xfb]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xd4af5bf}},{max_idle_timeout:{seconds_16:0xd4af5bd}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xd4af5bf}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x6aed}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x9c,0xe4,0xce,0xe1,0x1f,0xb9,0x76,0x3b,0x1f,0x10,0xd1,0x33,0xf,0xf4,0xb5,0x65,0x3,0x59,0xe2,0x69,0xb,0xa,0x36,0x72,0x83,0xb5,0x10,0x53,0x84,0x49,0xb9,0x9c,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x3,0xab,0x2e,0xfb,0x5d,0x91,0x69,0xa,0x35,0xe2,0xc3,0x56,0x5a,0xdc,0x7a,0x6a,0xb,0xb9,0xee,0x1d,0xac,0xc5,0x5f,0xf0,0x73,0xae,0x73,0xaf,0xe1,0xbe,0x5a,0x8c,0x55,0xb5,0x96,0x8a,0x9,0xf7,0xc,0x8b,0xca,0x24,0xf,0xa8,0x46,0xe7,0x5,0x6d,0xd1,0x9,0x19,0x71,0xca,0xc8,0x99,0xc1,0x43,0x4c,0x1a,0x3,0xf1,0xe6,0x7a,0xfb,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8d,0x4a,0xf5,0xbf,0x1,0x4,0x8d,0x4a,0xf5,0xbd,0x6,0x2,0x60,0,0x7,0x4,0x8d,0x4a,0xf5,0xbf,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x6a,0xed],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0xca,0x61]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0xad,0xbe]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b,0x2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x68]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21,0xd3,0x24]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0x77,0x2e]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0,0x9c,0xe4]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x20]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c,0x1,0x25]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0xd6,0x1f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0x9f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x75]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x45,0xe9]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x12]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0x21]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe6]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0x78,0x55]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x76]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0xb4]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0x1a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x58,0xa5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22,0x79,0x73]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0x8d]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0x58,0xcb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0x3d,0x10]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x2f,0xb3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0xdd]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0x83,0x71]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0x23]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0xd2,0xd0]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6,0x9f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0x3e,0x3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf,0x73,0xce]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0x8b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x50]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0x38]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0x98,0xca]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0x15]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x9b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x5a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2,0x25,0]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb,0x17,0xf3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a,0x21]},1,4,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x27,0xfd]},1,6,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
