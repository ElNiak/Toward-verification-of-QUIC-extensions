SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,151,224,78,81,227,231,194,194,23,85,136,119,126,75,68,24,177,130,28,14,236,15,15,162,108,221,248,177,104,143,147,152,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,61,137,89,137,151,25,44,63,33,159,145,146,200,3,93,98,13,163,208,223,186,241,103,99,81,106,236,177,207,132,157,113,50,111,87,198,138,129,153,116,227,207,24,47,46,185,149,212,225,193,97,58,211,133,229,202,163,172,4,185,203,49,245,75,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,138,248,20,27,1,4,138,248,20,23,6,2,96,0,7,4,138,248,20,27,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,255,251]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x97e04e51,random_bytes:[0xe3,0xe7,0xc2,0xc2,0x17,0x55,0x88,0x77,0x7e,0x4b,0x44,0x18,0xb1,0x82,0x1c,0xe,0xec,0xf,0xf,0xa2,0x6c,0xdd,0xf8,0xb1,0x68,0x8f,0x93,0x98]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x3d,0x89,0x59,0x89,0x97,0x19,0x2c,0x3f,0x21,0x9f,0x91,0x92,0xc8,0x3,0x5d,0x62,0xd,0xa3,0xd0,0xdf,0xba,0xf1,0x67,0x63,0x51,0x6a,0xec,0xb1,0xcf,0x84,0x9d,0x71,0x32,0x6f,0x57,0xc6,0x8a,0x81,0x99,0x74,0xe3,0xcf,0x18,0x2f,0x2e,0xb9,0x95,0xd4,0xe1,0xc1,0x61,0x3a,0xd3,0x85,0xe5,0xca,0xa3,0xac,0x4,0xb9,0xcb,0x31,0xf5,0x4b]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xaf8141b}},{max_idle_timeout:{seconds_16:0xaf81417}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xaf8141b}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xfffb}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x97,0xe0,0x4e,0x51,0xe3,0xe7,0xc2,0xc2,0x17,0x55,0x88,0x77,0x7e,0x4b,0x44,0x18,0xb1,0x82,0x1c,0xe,0xec,0xf,0xf,0xa2,0x6c,0xdd,0xf8,0xb1,0x68,0x8f,0x93,0x98,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x3d,0x89,0x59,0x89,0x97,0x19,0x2c,0x3f,0x21,0x9f,0x91,0x92,0xc8,0x3,0x5d,0x62,0xd,0xa3,0xd0,0xdf,0xba,0xf1,0x67,0x63,0x51,0x6a,0xec,0xb1,0xcf,0x84,0x9d,0x71,0x32,0x6f,0x57,0xc6,0x8a,0x81,0x99,0x74,0xe3,0xcf,0x18,0x2f,0x2e,0xb9,0x95,0xd4,0xe1,0xc1,0x61,0x3a,0xd3,0x85,0xe5,0xca,0xa3,0xac,0x4,0xb9,0xcb,0x31,0xf5,0x4b,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8a,0xf8,0x14,0x1b,0x1,0x4,0x8a,0xf8,0x14,0x17,0x6,0x2,0x60,0,0x7,0x4,0x8a,0xf8,0x14,0x1b,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xff,0xfb],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x3e,0x5f]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb,0x7e,0x1a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7,0x9a,0x89]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12,0xf5,0x62]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0x4f,0x57]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0xc4]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0xc9,0x89]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xb1]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x4e,0xd8]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x16]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0xa1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0xbe,0xf9]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x4,0x9b]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2,0x2e]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xa1]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78,0xba,0xaf]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0xb9]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x15,0x36]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0x88]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0xd0,0xce]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0x38]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x71,0x5c]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0xb6]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0x55]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x96]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33,0xfb]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x25,0x39]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0x17]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0x83,0x64]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x1e]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0xf7,0x19]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x35]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4,0x2a,0x46]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x53]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x9b]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0xd6]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0x6,0x71]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x8a,0x27]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0xe1]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0x4d]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x86,0x5b]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94,0xdf]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0xbf,0x11]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0xd8,0x71]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32,0xba,0xc]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0xd8,0x14]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x60]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0x79]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36,0xad,0xed]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0xfe]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
