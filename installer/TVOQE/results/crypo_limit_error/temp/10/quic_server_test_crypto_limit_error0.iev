SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,238,3,3,169,205,218,91,20,142,122,163,60,60,65,7,201,51,198,91,248,12,173,202,68,169,197,38,170,176,155,15,90,139,9,249,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,11,35,204,23,67,105,107,111,83,187,45,227,42,174,131,11,220,232,165,48,150,72,110,14,212,98,71,2,199,107,229,33,46,147,30,111,84,22,20,143,77,217,13,182,201,249,80,217,42,56,254,134,211,164,216,119,45,142,54,238,185,208,105,200,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,141,153,54,135,1,4,141,153,54,128,6,2,96,0,7,4,141,153,54,135,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,236,236]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xa9cdda5b,random_bytes:[0x14,0x8e,0x7a,0xa3,0x3c,0x3c,0x41,0x7,0xc9,0x33,0xc6,0x5b,0xf8,0xc,0xad,0xca,0x44,0xa9,0xc5,0x26,0xaa,0xb0,0x9b,0xf,0x5a,0x8b,0x9,0xf9]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xb,0x23,0xcc,0x17,0x43,0x69,0x6b,0x6f,0x53,0xbb,0x2d,0xe3,0x2a,0xae,0x83,0xb,0xdc,0xe8,0xa5,0x30,0x96,0x48,0x6e,0xe,0xd4,0x62,0x47,0x2,0xc7,0x6b,0xe5,0x21,0x2e,0x93,0x1e,0x6f,0x54,0x16,0x14,0x8f,0x4d,0xd9,0xd,0xb6,0xc9,0xf9,0x50,0xd9,0x2a,0x38,0xfe,0x86,0xd3,0xa4,0xd8,0x77,0x2d,0x8e,0x36,0xee,0xb9,0xd0,0x69,0xc8]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xd993687}},{max_idle_timeout:{seconds_16:0xd993680}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xd993687}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xecec}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xa9,0xcd,0xda,0x5b,0x14,0x8e,0x7a,0xa3,0x3c,0x3c,0x41,0x7,0xc9,0x33,0xc6,0x5b,0xf8,0xc,0xad,0xca,0x44,0xa9,0xc5,0x26,0xaa,0xb0,0x9b,0xf,0x5a,0x8b,0x9,0xf9,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xb,0x23,0xcc,0x17,0x43,0x69,0x6b,0x6f,0x53,0xbb,0x2d,0xe3,0x2a,0xae,0x83,0xb,0xdc,0xe8,0xa5,0x30,0x96,0x48,0x6e,0xe,0xd4,0x62,0x47,0x2,0xc7,0x6b,0xe5,0x21,0x2e,0x93,0x1e,0x6f,0x54,0x16,0x14,0x8f,0x4d,0xd9,0xd,0xb6,0xc9,0xf9,0x50,0xd9,0x2a,0x38,0xfe,0x86,0xd3,0xa4,0xd8,0x77,0x2d,0x8e,0x36,0xee,0xb9,0xd0,0x69,0xc8,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8d,0x99,0x36,0x87,0x1,0x4,0x8d,0x99,0x36,0x80,0x6,0x2,0x60,0,0x7,0x4,0x8d,0x99,0x36,0x87,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xec,0xec],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0x84,0x7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0xd0]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0xbe,0xec]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x19]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0xb4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d,0x92]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x12,0xd6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x29,0x72]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0xd]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11,0x61]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0x4a,0xce]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0x69,0x78]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0xfa,0xcf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x9e,0x6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0xe9,0xdd]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x7a,0xa2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0xd3,0xe0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33,0,0x8c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0xd,0xa6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x1d,0x45]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xa,0x49]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x16,0x65]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0x2e,0x3a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0xbb,0x99]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8,0x3,0xe7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x65,0xf0]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x36,0x9d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x91,0x13]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xe7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0xd1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x17,0x2a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d,0x47]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0x20]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0xee]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0xf5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0xc0,0x4]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0xb5]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0xf4,0xc6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0x2,0x94]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x83]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0xfa]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0x77]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0x6c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x5f,0x28]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0x51]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44,0x47,0x5d]},1,1,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
