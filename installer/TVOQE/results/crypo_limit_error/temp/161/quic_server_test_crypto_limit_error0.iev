SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quinn
[1,0,0,238,3,3,2,9,247,164,242,153,11,240,54,33,96,46,81,98,64,140,108,208,53,242,69,6,213,196,136,74,22,177,237,56,49,52,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,231,254,222,201,0,184,224,109,226,180,170,28,48,74,75,177,237,58,200,228,34,66,112,111,198,80,178,208,178,163,171,240,31,89,7,87,114,123,160,120,243,133,36,158,171,244,204,15,212,226,247,205,226,152,69,86,179,109,158,2,254,214,85,114,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,132,46,243,50,1,4,132,46,243,48,6,2,96,0,7,4,132,46,243,50,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,67,240]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x209f7a4,random_bytes:[0xf2,0x99,0xb,0xf0,0x36,0x21,0x60,0x2e,0x51,0x62,0x40,0x8c,0x6c,0xd0,0x35,0xf2,0x45,0x6,0xd5,0xc4,0x88,0x4a,0x16,0xb1,0xed,0x38,0x31,0x34]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xe7,0xfe,0xde,0xc9,0,0xb8,0xe0,0x6d,0xe2,0xb4,0xaa,0x1c,0x30,0x4a,0x4b,0xb1,0xed,0x3a,0xc8,0xe4,0x22,0x42,0x70,0x6f,0xc6,0x50,0xb2,0xd0,0xb2,0xa3,0xab,0xf0,0x1f,0x59,0x7,0x57,0x72,0x7b,0xa0,0x78,0xf3,0x85,0x24,0x9e,0xab,0xf4,0xcc,0xf,0xd4,0xe2,0xf7,0xcd,0xe2,0x98,0x45,0x56,0xb3,0x6d,0x9e,0x2,0xfe,0xd6,0x55,0x72]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x42ef332}},{max_idle_timeout:{seconds_16:0x42ef330}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x42ef332}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x43f0}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x2,0x9,0xf7,0xa4,0xf2,0x99,0xb,0xf0,0x36,0x21,0x60,0x2e,0x51,0x62,0x40,0x8c,0x6c,0xd0,0x35,0xf2,0x45,0x6,0xd5,0xc4,0x88,0x4a,0x16,0xb1,0xed,0x38,0x31,0x34,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xe7,0xfe,0xde,0xc9,0,0xb8,0xe0,0x6d,0xe2,0xb4,0xaa,0x1c,0x30,0x4a,0x4b,0xb1,0xed,0x3a,0xc8,0xe4,0x22,0x42,0x70,0x6f,0xc6,0x50,0xb2,0xd0,0xb2,0xa3,0xab,0xf0,0x1f,0x59,0x7,0x57,0x72,0x7b,0xa0,0x78,0xf3,0x85,0x24,0x9e,0xab,0xf4,0xcc,0xf,0xd4,0xe2,0xf7,0xcd,0xe2,0x98,0x45,0x56,0xb3,0x6d,0x9e,0x2,0xfe,0xd6,0x55,0x72,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x84,0x2e,0xf3,0x32,0x1,0x4,0x84,0x2e,0xf3,0x30,0x6,0x2,0x60,0,0x7,0x4,0x84,0x2e,0xf3,0x32,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x43,0xf0],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xb5]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x87]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0x57,0xd1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0x84,0xc8]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0x7f]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0x8a,0xa2]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0x3e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0x2e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0xc8,0x1d]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x3e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0xa2,0x1a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0x32]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0xce,0x3f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0xbb,0x81]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0x4,0x5a]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x9]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x79]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x5,0x1f]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0xb4,0xad]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x53]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0x7c]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0xd7]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0x81,0x19]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x6,0x76]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0x38]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0xb6,0x23]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0x76]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0x46,0x4f]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0x40,0x12]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0xf1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x32,0x1b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86,0x28,0x73]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0xa8,0xdb]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0x34]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0xdb,0x2d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x29,0xc1]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0x1d,0x74]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x37,0xad]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0xf9]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x24,0x68]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0x2e,0x1b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x6f]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0x63]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0xc5,0x3b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0xc2]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa,0x24,0x21]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0x6d]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0x84]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x54,0x9f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xc2,0x6e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3,0x1e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0x4d]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x9f]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0x3e,0x70]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x4]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x78,0xf5]},1,13,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
