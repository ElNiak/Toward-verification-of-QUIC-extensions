SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL aioquic
[1,0,0,236,3,3,119,212,185,6,183,198,223,217,35,51,34,125,160,174,200,182,127,194,171,115,90,198,107,166,222,242,67,69,89,143,136,81,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,213,181,121,112,214,104,243,92,83,66,17,79,242,97,7,132,40,136,79,227,239,121,39,135,189,40,97,35,107,132,58,74,31,166,168,122,108,86,158,138,11,33,6,148,172,179,209,123,49,101,199,243,154,32,91,157,5,96,49,226,98,34,240,127,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,140,222,25,5,1,4,140,222,24,253,6,2,96,0,7,4,140,222,25,5,15,8,0,0,0,0,0,0,0,1,12,0,8,2,76,129]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x77d4b906,random_bytes:[0xb7,0xc6,0xdf,0xd9,0x23,0x33,0x22,0x7d,0xa0,0xae,0xc8,0xb6,0x7f,0xc2,0xab,0x73,0x5a,0xc6,0x6b,0xa6,0xde,0xf2,0x43,0x45,0x59,0x8f,0x88,0x51]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xd5,0xb5,0x79,0x70,0xd6,0x68,0xf3,0x5c,0x53,0x42,0x11,0x4f,0xf2,0x61,0x7,0x84,0x28,0x88,0x4f,0xe3,0xef,0x79,0x27,0x87,0xbd,0x28,0x61,0x23,0x6b,0x84,0x3a,0x4a,0x1f,0xa6,0xa8,0x7a,0x6c,0x56,0x9e,0x8a,0xb,0x21,0x6,0x94,0xac,0xb3,0xd1,0x7b,0x31,0x65,0xc7,0xf3,0x9a,0x20,0x5b,0x9d,0x5,0x60,0x31,0xe2,0x62,0x22,0xf0,0x7f]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xcde1905}},{max_idle_timeout:{seconds_16:0xcde18fd}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xcde1905}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xc81}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x77,0xd4,0xb9,0x6,0xb7,0xc6,0xdf,0xd9,0x23,0x33,0x22,0x7d,0xa0,0xae,0xc8,0xb6,0x7f,0xc2,0xab,0x73,0x5a,0xc6,0x6b,0xa6,0xde,0xf2,0x43,0x45,0x59,0x8f,0x88,0x51,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xd5,0xb5,0x79,0x70,0xd6,0x68,0xf3,0x5c,0x53,0x42,0x11,0x4f,0xf2,0x61,0x7,0x84,0x28,0x88,0x4f,0xe3,0xef,0x79,0x27,0x87,0xbd,0x28,0x61,0x23,0x6b,0x84,0x3a,0x4a,0x1f,0xa6,0xa8,0x7a,0x6c,0x56,0x9e,0x8a,0xb,0x21,0x6,0x94,0xac,0xb3,0xd1,0x7b,0x31,0x65,0xc7,0xf3,0x9a,0x20,0x5b,0x9d,0x5,0x60,0x31,0xe2,0x62,0x22,0xf0,0x7f,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x8c,0xde,0x19,0x5,0x1,0x4,0x8c,0xde,0x18,0xfd,0x6,0x2,0x60,0,0x7,0x4,0x8c,0xde,0x19,0x5,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x4c,0x81],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x3f]},1,11,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0x53,0xdb]},1,11,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0x7,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[0x3f]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0xbf,0x53,0xdb]}},{frame.crypto:{offset:0xffffffff,length:0,data:[]}}]})
< show_pstats(1,initial,0x7)
< show_pstats(1,initial,0x7)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0x7)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[0x82,0]},1,12,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0xe5]},1,11,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41]},1,11,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0xf,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[0x82,0]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0x3c,0xe5]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0x41]}}]})
< show_pstats(1,initial,0xf)
< show_pstats(1,initial,0xf)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0xf)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[0x49,0x1c]},1,12,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0x1e,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[0x49,0x1c]}}]})
< show_pstats(1,initial,0x1e)
< show_pstats(1,initial,0x1e)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0x1e)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0x79,0x4c]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0xc9]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xc5]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0xcb,0xce]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0xe5,0x96]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0x6a]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x95]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0xad]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0xa4]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x88,0xb6,0x70]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0x53]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x63,0xf7]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0xb]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4,0x24,0x65]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x8e,0xc2]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0x1e,0x1b]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f,0x41,0x72]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0x2f,0xcb]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0x5c,0xf8]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0xda,0x22]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0xbc,0x47]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0x3f,0x3b]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0x73]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0xaf]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0x55,0x6e]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xd8,0x76]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0x47]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x39]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0x33,0xc1]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0x13,0xd6]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0x86]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0xbb,0xb5]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0x3d,0x1c]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x6,0x31]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0x8b,0xac]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0xbb]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0xd6]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0x56]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0xaf]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0x8c]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a,0xf0,0x2e]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0xf]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0x86,0x9b]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xa5]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0x3b]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x63,0xfc]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,11,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,12,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
