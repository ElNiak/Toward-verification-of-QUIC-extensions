SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL picoquic
[1,0,0,238,3,3,253,171,47,195,4,107,20,254,248,231,255,255,162,17,111,134,155,90,242,240,119,222,70,64,106,50,135,167,235,81,64,81,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,159,93,192,80,178,241,5,214,206,135,226,145,192,86,22,139,153,1,158,209,205,127,155,165,13,45,198,148,48,192,219,103,111,204,74,87,150,229,166,119,175,133,166,30,111,154,0,132,9,148,4,55,232,178,78,249,134,102,172,52,48,15,171,63,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,143,163,26,30,1,4,143,163,26,27,6,2,96,0,7,4,143,163,26,30,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,216,171]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xfdab2fc3,random_bytes:[0x4,0x6b,0x14,0xfe,0xf8,0xe7,0xff,0xff,0xa2,0x11,0x6f,0x86,0x9b,0x5a,0xf2,0xf0,0x77,0xde,0x46,0x40,0x6a,0x32,0x87,0xa7,0xeb,0x51,0x40,0x51]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x9f,0x5d,0xc0,0x50,0xb2,0xf1,0x5,0xd6,0xce,0x87,0xe2,0x91,0xc0,0x56,0x16,0x8b,0x99,0x1,0x9e,0xd1,0xcd,0x7f,0x9b,0xa5,0xd,0x2d,0xc6,0x94,0x30,0xc0,0xdb,0x67,0x6f,0xcc,0x4a,0x57,0x96,0xe5,0xa6,0x77,0xaf,0x85,0xa6,0x1e,0x6f,0x9a,0,0x84,0x9,0x94,0x4,0x37,0xe8,0xb2,0x4e,0xf9,0x86,0x66,0xac,0x34,0x30,0xf,0xab,0x3f]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xfa31a1e}},{max_idle_timeout:{seconds_16:0xfa31a1b}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xfa31a1e}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xd8ab}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xfd,0xab,0x2f,0xc3,0x4,0x6b,0x14,0xfe,0xf8,0xe7,0xff,0xff,0xa2,0x11,0x6f,0x86,0x9b,0x5a,0xf2,0xf0,0x77,0xde,0x46,0x40,0x6a,0x32,0x87,0xa7,0xeb,0x51,0x40,0x51,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x9f,0x5d,0xc0,0x50,0xb2,0xf1,0x5,0xd6,0xce,0x87,0xe2,0x91,0xc0,0x56,0x16,0x8b,0x99,0x1,0x9e,0xd1,0xcd,0x7f,0x9b,0xa5,0xd,0x2d,0xc6,0x94,0x30,0xc0,0xdb,0x67,0x6f,0xcc,0x4a,0x57,0x96,0xe5,0xa6,0x77,0xaf,0x85,0xa6,0x1e,0x6f,0x9a,0,0x84,0x9,0x94,0x4,0x37,0xe8,0xb2,0x4e,0xf9,0x86,0x66,0xac,0x34,0x30,0xf,0xab,0x3f,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8f,0xa3,0x1a,0x1e,0x1,0x4,0x8f,0xa3,0x1a,0x1b,0x6,0x2,0x60,0,0x7,0x4,0x8f,0xa3,0x1a,0x1e,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xd8,0xab],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0xa1,0x69]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xbd]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0xf3]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0xba,0x8e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0x75]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x8b]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0xf4]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0x46,0x3f]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0x80,0x8b]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0x84]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0xfb,0x60]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xc6,0xa]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x29,0xf]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51,0x3]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0xd9,0x34]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x48,0xa7]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0xa9,0xd1]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0x6f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0xf4,0x5a]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0x5]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0x10,0x7]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x61,0x94]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x55,0x22]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0xe5,0x99]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xe1,0x68]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0x23]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb,0xe5,0xdb]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51,0xf0,0x57]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0x45]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0x86]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0x33,0x6e]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x5f]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0xdb]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe6]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0x73,0x56]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0xeb,0x1c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0xc3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0xdd,0xa6]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x34,0xa2]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0x73,0x76]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0xd4]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xee]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x11,0x8d]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0xfd,0x81]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x86]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0x4d,0xe]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf,0xbf,0xc5]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0xe3,0xd6]},1,8,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
