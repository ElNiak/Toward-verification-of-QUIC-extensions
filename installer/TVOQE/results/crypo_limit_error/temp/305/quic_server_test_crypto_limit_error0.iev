SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL picoquic
[1,0,0,238,3,3,0,101,247,85,195,107,98,117,142,35,75,12,136,199,142,63,10,94,6,33,119,178,74,199,0,177,170,58,142,10,172,216,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,234,133,70,171,223,111,218,84,230,229,199,192,167,107,235,45,180,225,254,159,136,79,108,97,137,29,22,34,226,215,112,248,114,111,172,20,116,142,84,148,147,181,220,234,16,122,175,3,18,100,130,200,34,30,136,167,51,81,118,29,30,199,246,76,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,131,120,209,119,1,4,131,120,209,112,6,2,96,0,7,4,131,120,209,119,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,95,92]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x65f755,random_bytes:[0xc3,0x6b,0x62,0x75,0x8e,0x23,0x4b,0xc,0x88,0xc7,0x8e,0x3f,0xa,0x5e,0x6,0x21,0x77,0xb2,0x4a,0xc7,0,0xb1,0xaa,0x3a,0x8e,0xa,0xac,0xd8]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xea,0x85,0x46,0xab,0xdf,0x6f,0xda,0x54,0xe6,0xe5,0xc7,0xc0,0xa7,0x6b,0xeb,0x2d,0xb4,0xe1,0xfe,0x9f,0x88,0x4f,0x6c,0x61,0x89,0x1d,0x16,0x22,0xe2,0xd7,0x70,0xf8,0x72,0x6f,0xac,0x14,0x74,0x8e,0x54,0x94,0x93,0xb5,0xdc,0xea,0x10,0x7a,0xaf,0x3,0x12,0x64,0x82,0xc8,0x22,0x1e,0x88,0xa7,0x33,0x51,0x76,0x1d,0x1e,0xc7,0xf6,0x4c]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x378d177}},{max_idle_timeout:{seconds_16:0x378d170}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x378d177}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x5f5c}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0,0x65,0xf7,0x55,0xc3,0x6b,0x62,0x75,0x8e,0x23,0x4b,0xc,0x88,0xc7,0x8e,0x3f,0xa,0x5e,0x6,0x21,0x77,0xb2,0x4a,0xc7,0,0xb1,0xaa,0x3a,0x8e,0xa,0xac,0xd8,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xea,0x85,0x46,0xab,0xdf,0x6f,0xda,0x54,0xe6,0xe5,0xc7,0xc0,0xa7,0x6b,0xeb,0x2d,0xb4,0xe1,0xfe,0x9f,0x88,0x4f,0x6c,0x61,0x89,0x1d,0x16,0x22,0xe2,0xd7,0x70,0xf8,0x72,0x6f,0xac,0x14,0x74,0x8e,0x54,0x94,0x93,0xb5,0xdc,0xea,0x10,0x7a,0xaf,0x3,0x12,0x64,0x82,0xc8,0x22,0x1e,0x88,0xa7,0x33,0x51,0x76,0x1d,0x1e,0xc7,0xf6,0x4c,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x83,0x78,0xd1,0x77,0x1,0x4,0x83,0x78,0xd1,0x70,0x6,0x2,0x60,0,0x7,0x4,0x83,0x78,0xd1,0x77,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x5f,0x5c],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0xd7,0xb]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0x61]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0x40,0xde]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0xc2,0x7e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0xba,0xfe]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x3c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0xac,0x35]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67,0xc3]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x25,0x76]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8,0x52,0x94]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0xb1,0xcb]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0x76]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0xa6]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0x11]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0x3b]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a,0x45]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0xf]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0x6b]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c,0xaa,0xc9]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0x92]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x7c]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0xb6,0xf4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xf5]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67,0x43,0xae]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0xee]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0xc8,0x9b]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0x2a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0x8c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0xe7,0xd0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x87]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0xd7,0x95]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x1f,0xe5]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0xbd,0xaa]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32,0x8f]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0xf2]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0x40]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55,0x17]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x19]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf,0x8e,0xdb]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x10]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0x85]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0xf4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76,0x76,0xc7]},1,5,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0x70]},1,10,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
