SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quic-go
[1,0,0,238,3,3,157,77,3,15,62,254,156,162,205,134,157,159,173,149,19,146,0,15,65,198,55,17,149,235,167,47,218,9,238,3,124,169,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,180,77,204,250,148,222,229,150,219,140,76,93,140,29,15,216,171,26,77,196,246,246,199,59,162,171,179,110,227,136,79,207,28,193,244,7,143,11,122,98,217,203,7,166,228,57,62,239,222,161,142,194,94,154,104,250,0,29,40,217,83,253,116,14,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,129,125,233,93,1,4,129,125,233,90,6,2,96,0,7,4,129,125,233,93,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,111,86]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x9d4d030f,random_bytes:[0x3e,0xfe,0x9c,0xa2,0xcd,0x86,0x9d,0x9f,0xad,0x95,0x13,0x92,0,0xf,0x41,0xc6,0x37,0x11,0x95,0xeb,0xa7,0x2f,0xda,0x9,0xee,0x3,0x7c,0xa9]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xb4,0x4d,0xcc,0xfa,0x94,0xde,0xe5,0x96,0xdb,0x8c,0x4c,0x5d,0x8c,0x1d,0xf,0xd8,0xab,0x1a,0x4d,0xc4,0xf6,0xf6,0xc7,0x3b,0xa2,0xab,0xb3,0x6e,0xe3,0x88,0x4f,0xcf,0x1c,0xc1,0xf4,0x7,0x8f,0xb,0x7a,0x62,0xd9,0xcb,0x7,0xa6,0xe4,0x39,0x3e,0xef,0xde,0xa1,0x8e,0xc2,0x5e,0x9a,0x68,0xfa,0,0x1d,0x28,0xd9,0x53,0xfd,0x74,0xe]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x17de95d}},{max_idle_timeout:{seconds_16:0x17de95a}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x17de95d}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x6f56}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x9d,0x4d,0x3,0xf,0x3e,0xfe,0x9c,0xa2,0xcd,0x86,0x9d,0x9f,0xad,0x95,0x13,0x92,0,0xf,0x41,0xc6,0x37,0x11,0x95,0xeb,0xa7,0x2f,0xda,0x9,0xee,0x3,0x7c,0xa9,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xb4,0x4d,0xcc,0xfa,0x94,0xde,0xe5,0x96,0xdb,0x8c,0x4c,0x5d,0x8c,0x1d,0xf,0xd8,0xab,0x1a,0x4d,0xc4,0xf6,0xf6,0xc7,0x3b,0xa2,0xab,0xb3,0x6e,0xe3,0x88,0x4f,0xcf,0x1c,0xc1,0xf4,0x7,0x8f,0xb,0x7a,0x62,0xd9,0xcb,0x7,0xa6,0xe4,0x39,0x3e,0xef,0xde,0xa1,0x8e,0xc2,0x5e,0x9a,0x68,0xfa,0,0x1d,0x28,0xd9,0x53,0xfd,0x74,0xe,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x81,0x7d,0xe9,0x5d,0x1,0x4,0x81,0x7d,0xe9,0x5a,0x6,0x2,0x60,0,0x7,0x4,0x81,0x7d,0xe9,0x5d,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x6f,0x56],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x50,0x65]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0x5e,0x76]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe,0x86,0xa3]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0xd4]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x1,0x3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0xc3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0xc1,0x96]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0xb6]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0x42]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0xd9,0x58]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x97,0x7c]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x77,0xb6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x6a]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0xd8]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0xe3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0x16,0x24]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0xd,0xa0]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0xde,0x79]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0xf4]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x10]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0xe8]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0xda]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x81]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0xe,0x72]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0xc8,0x31]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x88]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x88]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0x82]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0xdb,0xd1]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0xe2]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x14,0x5f]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x55,0xf0]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x1f,0x45]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0xfa]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0xfd,0x8c]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0xd0]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x9d,0xe9]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0xb3,0xe8]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x71]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0x15]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0xe8,0xad]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x2a,0x39]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x3d]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0xa]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0xf2]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0xe5]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xf6]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb,0x23]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0xdd]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x5a]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0x43,0xf8]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x43]},1,10,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
