SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,238,3,3,7,239,205,150,142,107,74,162,44,225,79,74,58,150,68,156,141,219,215,240,8,41,182,252,2,63,252,108,126,70,58,126,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,205,195,161,104,194,193,248,153,34,78,165,185,6,126,63,174,158,244,118,143,218,89,113,43,211,212,206,233,21,219,215,22,72,53,49,231,183,239,106,60,44,83,151,187,18,84,30,243,13,163,40,86,87,246,202,64,6,119,165,225,234,154,194,99,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,130,195,66,200,1,4,130,195,66,197,6,2,96,0,7,4,130,195,66,200,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,205,213]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x7efcd96,random_bytes:[0x8e,0x6b,0x4a,0xa2,0x2c,0xe1,0x4f,0x4a,0x3a,0x96,0x44,0x9c,0x8d,0xdb,0xd7,0xf0,0x8,0x29,0xb6,0xfc,0x2,0x3f,0xfc,0x6c,0x7e,0x46,0x3a,0x7e]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xcd,0xc3,0xa1,0x68,0xc2,0xc1,0xf8,0x99,0x22,0x4e,0xa5,0xb9,0x6,0x7e,0x3f,0xae,0x9e,0xf4,0x76,0x8f,0xda,0x59,0x71,0x2b,0xd3,0xd4,0xce,0xe9,0x15,0xdb,0xd7,0x16,0x48,0x35,0x31,0xe7,0xb7,0xef,0x6a,0x3c,0x2c,0x53,0x97,0xbb,0x12,0x54,0x1e,0xf3,0xd,0xa3,0x28,0x56,0x57,0xf6,0xca,0x40,0x6,0x77,0xa5,0xe1,0xea,0x9a,0xc2,0x63]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x2c342c8}},{max_idle_timeout:{seconds_16:0x2c342c5}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x2c342c8}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xcdd5}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x7,0xef,0xcd,0x96,0x8e,0x6b,0x4a,0xa2,0x2c,0xe1,0x4f,0x4a,0x3a,0x96,0x44,0x9c,0x8d,0xdb,0xd7,0xf0,0x8,0x29,0xb6,0xfc,0x2,0x3f,0xfc,0x6c,0x7e,0x46,0x3a,0x7e,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xcd,0xc3,0xa1,0x68,0xc2,0xc1,0xf8,0x99,0x22,0x4e,0xa5,0xb9,0x6,0x7e,0x3f,0xae,0x9e,0xf4,0x76,0x8f,0xda,0x59,0x71,0x2b,0xd3,0xd4,0xce,0xe9,0x15,0xdb,0xd7,0x16,0x48,0x35,0x31,0xe7,0xb7,0xef,0x6a,0x3c,0x2c,0x53,0x97,0xbb,0x12,0x54,0x1e,0xf3,0xd,0xa3,0x28,0x56,0x57,0xf6,0xca,0x40,0x6,0x77,0xa5,0xe1,0xea,0x9a,0xc2,0x63,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x82,0xc3,0x42,0xc8,0x1,0x4,0x82,0xc3,0x42,0xc5,0x6,0x2,0x60,0,0x7,0x4,0x82,0xc3,0x42,0xc8,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xcd,0xd5],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x29]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0x71,0x5f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0x38]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0xaa]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32,0x46,0x2f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0x7c]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x93]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3,0x84]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xf,0xf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x3a,0xf0]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0,0xd7]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0xfb]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0x8d,0x6d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x42]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0xf3]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x88,0x51]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x51]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xe2]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa,0x11,0xe8]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0x5c,0xdd]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0x8,0x6]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0xa8,0x9e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0xd5]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0x79,0x2e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xd2,0x1e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11,0xff]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0xf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0xbb,0x99]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14,0xb7,0x23]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0xee,0x5f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xa0,0x36]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0x67]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c,0x9d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0x72]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x3e,0x8]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x39]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0xd2,0x33]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0x46]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0xf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0xd2]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x50]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0x35,0xf7]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xa2,0x15]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0x91]},1,12,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
