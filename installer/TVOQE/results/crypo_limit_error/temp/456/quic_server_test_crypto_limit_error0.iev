SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quic-go
[1,0,0,238,3,3,159,41,212,33,211,191,131,196,124,198,162,130,231,152,86,246,177,117,249,92,227,69,4,82,204,49,10,229,192,86,135,112,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,189,56,196,146,224,12,237,13,142,162,86,145,95,108,105,96,26,176,142,244,226,208,225,233,87,222,111,68,252,213,111,191,19,211,17,115,136,115,173,60,229,9,64,6,86,200,222,103,88,35,118,77,113,116,159,19,238,7,220,118,143,107,239,78,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,128,197,122,44,1,4,128,197,122,42,6,2,96,0,7,4,128,197,122,44,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,189,66]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x9f29d421,random_bytes:[0xd3,0xbf,0x83,0xc4,0x7c,0xc6,0xa2,0x82,0xe7,0x98,0x56,0xf6,0xb1,0x75,0xf9,0x5c,0xe3,0x45,0x4,0x52,0xcc,0x31,0xa,0xe5,0xc0,0x56,0x87,0x70]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xbd,0x38,0xc4,0x92,0xe0,0xc,0xed,0xd,0x8e,0xa2,0x56,0x91,0x5f,0x6c,0x69,0x60,0x1a,0xb0,0x8e,0xf4,0xe2,0xd0,0xe1,0xe9,0x57,0xde,0x6f,0x44,0xfc,0xd5,0x6f,0xbf,0x13,0xd3,0x11,0x73,0x88,0x73,0xad,0x3c,0xe5,0x9,0x40,0x6,0x56,0xc8,0xde,0x67,0x58,0x23,0x76,0x4d,0x71,0x74,0x9f,0x13,0xee,0x7,0xdc,0x76,0x8f,0x6b,0xef,0x4e]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xc57a2c}},{max_idle_timeout:{seconds_16:0xc57a2a}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xc57a2c}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xbd42}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x9f,0x29,0xd4,0x21,0xd3,0xbf,0x83,0xc4,0x7c,0xc6,0xa2,0x82,0xe7,0x98,0x56,0xf6,0xb1,0x75,0xf9,0x5c,0xe3,0x45,0x4,0x52,0xcc,0x31,0xa,0xe5,0xc0,0x56,0x87,0x70,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xbd,0x38,0xc4,0x92,0xe0,0xc,0xed,0xd,0x8e,0xa2,0x56,0x91,0x5f,0x6c,0x69,0x60,0x1a,0xb0,0x8e,0xf4,0xe2,0xd0,0xe1,0xe9,0x57,0xde,0x6f,0x44,0xfc,0xd5,0x6f,0xbf,0x13,0xd3,0x11,0x73,0x88,0x73,0xad,0x3c,0xe5,0x9,0x40,0x6,0x56,0xc8,0xde,0x67,0x58,0x23,0x76,0x4d,0x71,0x74,0x9f,0x13,0xee,0x7,0xdc,0x76,0x8f,0x6b,0xef,0x4e,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x80,0xc5,0x7a,0x2c,0x1,0x4,0x80,0xc5,0x7a,0x2a,0x6,0x2,0x60,0,0x7,0x4,0x80,0xc5,0x7a,0x2c,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xbd,0x42],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0xbb,0xf]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x6c,0x35]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x87,0x77]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x8d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x7b,0x65]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0x95,0xe6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x8,0x80]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0xc9,0x6e]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0x50,0x4f]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0x77,0x9e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d,0xa4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35,0xb7]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2,0x3]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0,0x11]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x39,0xd]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0xe5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x2f,0x89]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0x88,0xe6]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0x13,0xae]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe4,0xec,0x6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x97,0x29]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0x6e,0x2e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d,0xe2,0x7]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x8f]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0x1b]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x88]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x10]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x93,0x10]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0x6e]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0xde]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0x62]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x1d,0xae]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0xd0,0x1]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0xc0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf,0xe0,0xf0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x3f,0xfa]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78,0x60,0xe6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13,0xca,0x60]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0xbd]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x38,0x4e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xeb]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0x7e,0xb1]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56,0x9f,0x93]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x79]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3,0x16,0x88]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0xdb]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0x7b,0xfa]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x2b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0x84,0xf6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0xfe,0x86]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0x6b,0x2a]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0x4c]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0x3e,0x81]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0xf0,0xf6]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x31,0x7e,0xcb]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0,0xcc]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0x6f]},1,12,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15]},1,12,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
