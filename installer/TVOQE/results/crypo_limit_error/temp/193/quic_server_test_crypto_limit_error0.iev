SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quinn
[1,0,0,238,3,3,195,16,31,243,178,225,73,28,111,197,126,37,22,110,40,131,107,98,218,225,184,42,163,70,109,33,14,234,96,1,79,13,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,13,87,126,176,71,172,146,98,37,216,133,14,181,24,217,152,29,200,198,136,178,190,5,114,74,157,163,41,133,98,163,130,131,87,195,18,203,170,253,59,168,189,110,116,48,17,133,24,181,5,20,210,160,209,229,55,56,144,186,221,168,113,107,85,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,135,22,42,47,1,4,135,22,42,40,6,2,96,0,7,4,135,22,42,47,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,198,136]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xc3101ff3,random_bytes:[0xb2,0xe1,0x49,0x1c,0x6f,0xc5,0x7e,0x25,0x16,0x6e,0x28,0x83,0x6b,0x62,0xda,0xe1,0xb8,0x2a,0xa3,0x46,0x6d,0x21,0xe,0xea,0x60,0x1,0x4f,0xd]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xd,0x57,0x7e,0xb0,0x47,0xac,0x92,0x62,0x25,0xd8,0x85,0xe,0xb5,0x18,0xd9,0x98,0x1d,0xc8,0xc6,0x88,0xb2,0xbe,0x5,0x72,0x4a,0x9d,0xa3,0x29,0x85,0x62,0xa3,0x82,0x83,0x57,0xc3,0x12,0xcb,0xaa,0xfd,0x3b,0xa8,0xbd,0x6e,0x74,0x30,0x11,0x85,0x18,0xb5,0x5,0x14,0xd2,0xa0,0xd1,0xe5,0x37,0x38,0x90,0xba,0xdd,0xa8,0x71,0x6b,0x55]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x7162a2f}},{max_idle_timeout:{seconds_16:0x7162a28}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x7162a2f}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xc688}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xc3,0x10,0x1f,0xf3,0xb2,0xe1,0x49,0x1c,0x6f,0xc5,0x7e,0x25,0x16,0x6e,0x28,0x83,0x6b,0x62,0xda,0xe1,0xb8,0x2a,0xa3,0x46,0x6d,0x21,0xe,0xea,0x60,0x1,0x4f,0xd,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xd,0x57,0x7e,0xb0,0x47,0xac,0x92,0x62,0x25,0xd8,0x85,0xe,0xb5,0x18,0xd9,0x98,0x1d,0xc8,0xc6,0x88,0xb2,0xbe,0x5,0x72,0x4a,0x9d,0xa3,0x29,0x85,0x62,0xa3,0x82,0x83,0x57,0xc3,0x12,0xcb,0xaa,0xfd,0x3b,0xa8,0xbd,0x6e,0x74,0x30,0x11,0x85,0x18,0xb5,0x5,0x14,0xd2,0xa0,0xd1,0xe5,0x37,0x38,0x90,0xba,0xdd,0xa8,0x71,0x6b,0x55,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x87,0x16,0x2a,0x2f,0x1,0x4,0x87,0x16,0x2a,0x28,0x6,0x2,0x60,0,0x7,0x4,0x87,0x16,0x2a,0x2f,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xc6,0x88],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x6b]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0xd0,0xe7]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0x4d]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0xd1]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0x3d,0x5b]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x1d]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32,0x6c]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d,0x43,0x38]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0xd0]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0xe9]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0xd9]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x4f,0x1d]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0xf8,0xfa]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f,0x42,0x8b]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0xe2]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51,0x55]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a,0x79,0x8e]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0x17]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x66]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0xcf,0xdd]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4,0xd2]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x44]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0xc6]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0x31,0x83]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0xd]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77,0x99]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0xec,0xa]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0xaa]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0xee]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x4]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0x28]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xc]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22,0xe3]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3,0x8f,0xa1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0x48]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea,0x37]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x2a,0x53]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0xd8,0x93]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0x3f,0x13]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0x24]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0xf9,0x9]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a,0x59,0x9f]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff,0x33,0xe8]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x4a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0x99,0x14]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xdf,0x75]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbf,0x5e,0xe3]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3,0x57,0xd8]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x5e,0xc4]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0xfe]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0x45]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0xbd]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
