SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,149,214,84,170,118,96,25,7,125,238,70,200,214,190,56,8,227,147,19,106,25,21,113,237,83,33,148,14,8,21,81,181,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,196,223,129,170,73,33,124,196,231,193,9,130,113,100,210,113,12,235,168,86,199,167,39,63,127,149,53,36,240,129,48,46,171,250,110,137,106,53,198,100,146,122,246,8,68,243,208,31,85,255,245,216,186,22,60,17,218,120,194,121,44,252,213,247,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,130,219,46,25,1,4,130,219,46,22,6,2,96,0,7,4,130,219,46,25,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,185,134]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x95d654aa,random_bytes:[0x76,0x60,0x19,0x7,0x7d,0xee,0x46,0xc8,0xd6,0xbe,0x38,0x8,0xe3,0x93,0x13,0x6a,0x19,0x15,0x71,0xed,0x53,0x21,0x94,0xe,0x8,0x15,0x51,0xb5]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xc4,0xdf,0x81,0xaa,0x49,0x21,0x7c,0xc4,0xe7,0xc1,0x9,0x82,0x71,0x64,0xd2,0x71,0xc,0xeb,0xa8,0x56,0xc7,0xa7,0x27,0x3f,0x7f,0x95,0x35,0x24,0xf0,0x81,0x30,0x2e,0xab,0xfa,0x6e,0x89,0x6a,0x35,0xc6,0x64,0x92,0x7a,0xf6,0x8,0x44,0xf3,0xd0,0x1f,0x55,0xff,0xf5,0xd8,0xba,0x16,0x3c,0x11,0xda,0x78,0xc2,0x79,0x2c,0xfc,0xd5,0xf7]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x2db2e19}},{max_idle_timeout:{seconds_16:0x2db2e16}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x2db2e19}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xb986}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x95,0xd6,0x54,0xaa,0x76,0x60,0x19,0x7,0x7d,0xee,0x46,0xc8,0xd6,0xbe,0x38,0x8,0xe3,0x93,0x13,0x6a,0x19,0x15,0x71,0xed,0x53,0x21,0x94,0xe,0x8,0x15,0x51,0xb5,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xc4,0xdf,0x81,0xaa,0x49,0x21,0x7c,0xc4,0xe7,0xc1,0x9,0x82,0x71,0x64,0xd2,0x71,0xc,0xeb,0xa8,0x56,0xc7,0xa7,0x27,0x3f,0x7f,0x95,0x35,0x24,0xf0,0x81,0x30,0x2e,0xab,0xfa,0x6e,0x89,0x6a,0x35,0xc6,0x64,0x92,0x7a,0xf6,0x8,0x44,0xf3,0xd0,0x1f,0x55,0xff,0xf5,0xd8,0xba,0x16,0x3c,0x11,0xda,0x78,0xc2,0x79,0x2c,0xfc,0xd5,0xf7,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x82,0xdb,0x2e,0x19,0x1,0x4,0x82,0xdb,0x2e,0x16,0x6,0x2,0x60,0,0x7,0x4,0x82,0xdb,0x2e,0x19,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xb9,0x86],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0xd3]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0x90,0x45]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x72,0x32]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4,0x89,0xf4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0xf5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x1d,0x53]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0xe4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0x3,0x1]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6,0x62,0x31]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0x72]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x3a]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0x7b]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x71]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x16]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0xe4,0x5e]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a,0xa7,0x99]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0x38]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8e,0xa2]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0x22,0x5e]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0xfa,0x22]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0xe3,0x19]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5d]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x24]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb5,0xa7]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x32,0x75]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0xb9]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x4d,0xd6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x17]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0x84,0x23]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x87,0xc1]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0xd4,0xa3]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0x96,0x56]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x92]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xe9,0x4b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x6d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0x19]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0xf9]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x33]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xd7,0x73]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0xa6]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x4c]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x27]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0xc6,0xa0]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0x52]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0xbf]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0x48]},1,3,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
