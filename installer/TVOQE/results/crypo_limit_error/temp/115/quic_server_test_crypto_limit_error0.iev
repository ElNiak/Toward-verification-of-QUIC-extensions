SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quinn
[1,0,0,238,3,3,243,81,225,200,130,248,33,84,117,14,22,182,184,250,135,38,68,93,149,232,169,69,207,7,129,48,38,75,9,88,44,15,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,223,229,229,159,11,214,236,143,195,163,36,176,21,234,7,127,14,207,72,2,152,36,154,91,244,215,35,228,219,208,65,38,107,160,58,33,235,80,140,204,134,52,96,202,50,144,10,218,236,157,245,188,46,193,255,16,110,45,214,195,84,125,71,117,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,141,140,77,110,1,4,141,140,77,104,6,2,96,0,7,4,141,140,77,110,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,195,160]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xf351e1c8,random_bytes:[0x82,0xf8,0x21,0x54,0x75,0xe,0x16,0xb6,0xb8,0xfa,0x87,0x26,0x44,0x5d,0x95,0xe8,0xa9,0x45,0xcf,0x7,0x81,0x30,0x26,0x4b,0x9,0x58,0x2c,0xf]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xdf,0xe5,0xe5,0x9f,0xb,0xd6,0xec,0x8f,0xc3,0xa3,0x24,0xb0,0x15,0xea,0x7,0x7f,0xe,0xcf,0x48,0x2,0x98,0x24,0x9a,0x5b,0xf4,0xd7,0x23,0xe4,0xdb,0xd0,0x41,0x26,0x6b,0xa0,0x3a,0x21,0xeb,0x50,0x8c,0xcc,0x86,0x34,0x60,0xca,0x32,0x90,0xa,0xda,0xec,0x9d,0xf5,0xbc,0x2e,0xc1,0xff,0x10,0x6e,0x2d,0xd6,0xc3,0x54,0x7d,0x47,0x75]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xd8c4d6e}},{max_idle_timeout:{seconds_16:0xd8c4d68}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xd8c4d6e}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xc3a0}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xf3,0x51,0xe1,0xc8,0x82,0xf8,0x21,0x54,0x75,0xe,0x16,0xb6,0xb8,0xfa,0x87,0x26,0x44,0x5d,0x95,0xe8,0xa9,0x45,0xcf,0x7,0x81,0x30,0x26,0x4b,0x9,0x58,0x2c,0xf,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xdf,0xe5,0xe5,0x9f,0xb,0xd6,0xec,0x8f,0xc3,0xa3,0x24,0xb0,0x15,0xea,0x7,0x7f,0xe,0xcf,0x48,0x2,0x98,0x24,0x9a,0x5b,0xf4,0xd7,0x23,0xe4,0xdb,0xd0,0x41,0x26,0x6b,0xa0,0x3a,0x21,0xeb,0x50,0x8c,0xcc,0x86,0x34,0x60,0xca,0x32,0x90,0xa,0xda,0xec,0x9d,0xf5,0xbc,0x2e,0xc1,0xff,0x10,0x6e,0x2d,0xd6,0xc3,0x54,0x7d,0x47,0x75,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8d,0x8c,0x4d,0x6e,0x1,0x4,0x8d,0x8c,0x4d,0x68,0x6,0x2,0x60,0,0x7,0x4,0x8d,0x8c,0x4d,0x6e,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xc3,0xa0],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0x59]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x97,0x52]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x80,0x29]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x5a,0xb3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x3,0x46]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0xbb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x2e,0x94]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x9a,0xf3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0x94,0xd5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0xc3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0xfd,0x97]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0x39]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0xf0]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6,0xf0,0x1e]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0xe0]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x57,0x8b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0x3d,0x70]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0x8f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0xb0,0xa8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x50,0x21]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x69]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0xa4,0xea]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0xf6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0xd4]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0x75]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0xcb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0xbc]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0x43,0x7a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0xb2]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x1f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x44,0xd1]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0x72,0x59]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0x43]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x98,0x7b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0xec]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0xa2]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xd2]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0xfb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x34,0x75]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x91,0xbc]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb,0xa0,0xf6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0xf]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x96,0x44]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x77,0x1d]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0xd5,0x50]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x61,0xe9]},1,6,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
