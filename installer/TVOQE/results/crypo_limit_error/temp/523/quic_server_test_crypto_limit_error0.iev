SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL aioquic
[1,0,0,238,3,3,237,40,1,99,141,119,190,35,232,222,37,58,120,170,232,250,102,240,78,118,80,254,221,64,29,132,139,202,24,224,52,211,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,26,254,205,209,42,63,27,102,176,191,188,121,27,119,214,157,207,113,84,1,103,19,102,139,13,74,86,110,79,58,141,60,208,198,134,142,154,239,39,80,197,4,9,91,16,179,208,9,209,184,232,184,93,142,252,210,16,111,239,103,241,14,72,205,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,129,86,205,155,1,4,129,86,205,148,6,2,96,0,7,4,129,86,205,155,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,82,248]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xed280163,random_bytes:[0x8d,0x77,0xbe,0x23,0xe8,0xde,0x25,0x3a,0x78,0xaa,0xe8,0xfa,0x66,0xf0,0x4e,0x76,0x50,0xfe,0xdd,0x40,0x1d,0x84,0x8b,0xca,0x18,0xe0,0x34,0xd3]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x1a,0xfe,0xcd,0xd1,0x2a,0x3f,0x1b,0x66,0xb0,0xbf,0xbc,0x79,0x1b,0x77,0xd6,0x9d,0xcf,0x71,0x54,0x1,0x67,0x13,0x66,0x8b,0xd,0x4a,0x56,0x6e,0x4f,0x3a,0x8d,0x3c,0xd0,0xc6,0x86,0x8e,0x9a,0xef,0x27,0x50,0xc5,0x4,0x9,0x5b,0x10,0xb3,0xd0,0x9,0xd1,0xb8,0xe8,0xb8,0x5d,0x8e,0xfc,0xd2,0x10,0x6f,0xef,0x67,0xf1,0xe,0x48,0xcd]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x156cd9b}},{max_idle_timeout:{seconds_16:0x156cd94}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x156cd9b}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x52f8}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xed,0x28,0x1,0x63,0x8d,0x77,0xbe,0x23,0xe8,0xde,0x25,0x3a,0x78,0xaa,0xe8,0xfa,0x66,0xf0,0x4e,0x76,0x50,0xfe,0xdd,0x40,0x1d,0x84,0x8b,0xca,0x18,0xe0,0x34,0xd3,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x1a,0xfe,0xcd,0xd1,0x2a,0x3f,0x1b,0x66,0xb0,0xbf,0xbc,0x79,0x1b,0x77,0xd6,0x9d,0xcf,0x71,0x54,0x1,0x67,0x13,0x66,0x8b,0xd,0x4a,0x56,0x6e,0x4f,0x3a,0x8d,0x3c,0xd0,0xc6,0x86,0x8e,0x9a,0xef,0x27,0x50,0xc5,0x4,0x9,0x5b,0x10,0xb3,0xd0,0x9,0xd1,0xb8,0xe8,0xb8,0x5d,0x8e,0xfc,0xd2,0x10,0x6f,0xef,0x67,0xf1,0xe,0x48,0xcd,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x81,0x56,0xcd,0x9b,0x1,0x4,0x81,0x56,0xcd,0x94,0x6,0x2,0x60,0,0x7,0x4,0x81,0x56,0xcd,0x9b,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x52,0xf8],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x28]},1,8,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x4b,0x51]},1,3,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef]},1,8,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0xd]},1,8,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0xf5,0x98]},1,8,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0x7,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[0x4a,0x28]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0xbd,0x4b,0x51]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0xef]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0x30,0xd]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0xba,0xf5,0x98]}}]})
< show_pstats(1,initial,0x7)
< show_pstats(1,initial,0x7)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0x7)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0xb9]},1,8,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x1f]},1,3,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x6c,0x2b]},1,3,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,initial,0)
> frame.crypto.handle({offset:0,length:0,data:[0x32,0xa6,0x80]},1,3,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0xf,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0xad,0xb9]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0x38,0x1f]}},{frame.crypto:{offset:0xffffffff,length:0,data:[]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0xae,0x6c,0x2b]}},{frame.crypto:{offset:0xffffffff,length:0,data:[]}},{frame.crypto:{offset:0xffffffff,length:0,data:[0x32,0xa6,0x80]}}]})
< show_pstats(1,initial,0xf)
< show_pstats(1,initial,0xf)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0xf)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,initial,0)
> packet_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{ptype:initial,pversion:0xff00001d,dst_cid:2,src_cid:1,token:[],seq_num:0x1f,payload:[{frame.crypto:{offset:0xffffffff,length:0,data:[]}}]})
< show_pstats(1,initial,0x1f)
< show_pstats(1,initial,0x1f)
< show_probing(2,0)
< show_ack_credit(1,0,0x1,0x1,0x1f)
< prot.show_data(0,0x10,0x10,0x4b2)
< prot.show_enc_level(0)
sending id: client addr: 2130706433 port: 4443
> frame.crypto.handle({offset:0,length:0,data:[0xba,0x53]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbd,0x1e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0xad,0x94]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0x7d]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0x8a,0xee]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0xa3]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0x79,0xc]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcb,0xd0,0xe7]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9a,0xae]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0xa2,0x5f]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xac]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0x7f,0x70]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81,0x3f,0xf2]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x65]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0xa]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x72]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58,0x7b]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x1e]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0xfd,0x21]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0x4a,0xe2]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x77,0xf3]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69,0x45]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe6]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b,0x4a]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0xc0,0xf7]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0x1,0x1b]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x3f]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd2]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0xd,0xbe]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb8,0xae,0x12]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x6a,0x38]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0xaa]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0xc1,0xfb]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0,0xde]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0xa3]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0x31]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe,0xde]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b,0x48,0x19]},1,3,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,8,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
