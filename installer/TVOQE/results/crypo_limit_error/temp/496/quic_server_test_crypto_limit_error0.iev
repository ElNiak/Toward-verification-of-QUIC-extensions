SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quic-go
[1,0,0,238,3,3,88,52,165,12,113,159,39,202,158,148,2,11,186,40,57,2,117,219,15,228,101,202,239,238,155,143,173,222,133,146,5,242,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,79,252,66,147,104,147,115,181,224,70,169,136,70,27,252,219,0,42,183,170,45,246,154,152,136,64,220,121,118,196,145,3,174,238,174,35,60,175,174,233,46,204,117,218,123,217,1,187,16,52,106,16,109,198,33,85,217,24,34,0,42,208,51,94,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,138,251,19,109,1,4,138,251,19,103,6,2,96,0,7,4,138,251,19,109,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,127,91]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x5834a50c,random_bytes:[0x71,0x9f,0x27,0xca,0x9e,0x94,0x2,0xb,0xba,0x28,0x39,0x2,0x75,0xdb,0xf,0xe4,0x65,0xca,0xef,0xee,0x9b,0x8f,0xad,0xde,0x85,0x92,0x5,0xf2]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x4f,0xfc,0x42,0x93,0x68,0x93,0x73,0xb5,0xe0,0x46,0xa9,0x88,0x46,0x1b,0xfc,0xdb,0,0x2a,0xb7,0xaa,0x2d,0xf6,0x9a,0x98,0x88,0x40,0xdc,0x79,0x76,0xc4,0x91,0x3,0xae,0xee,0xae,0x23,0x3c,0xaf,0xae,0xe9,0x2e,0xcc,0x75,0xda,0x7b,0xd9,0x1,0xbb,0x10,0x34,0x6a,0x10,0x6d,0xc6,0x21,0x55,0xd9,0x18,0x22,0,0x2a,0xd0,0x33,0x5e]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xafb136d}},{max_idle_timeout:{seconds_16:0xafb1367}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xafb136d}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x7f5b}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x58,0x34,0xa5,0xc,0x71,0x9f,0x27,0xca,0x9e,0x94,0x2,0xb,0xba,0x28,0x39,0x2,0x75,0xdb,0xf,0xe4,0x65,0xca,0xef,0xee,0x9b,0x8f,0xad,0xde,0x85,0x92,0x5,0xf2,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x4f,0xfc,0x42,0x93,0x68,0x93,0x73,0xb5,0xe0,0x46,0xa9,0x88,0x46,0x1b,0xfc,0xdb,0,0x2a,0xb7,0xaa,0x2d,0xf6,0x9a,0x98,0x88,0x40,0xdc,0x79,0x76,0xc4,0x91,0x3,0xae,0xee,0xae,0x23,0x3c,0xaf,0xae,0xe9,0x2e,0xcc,0x75,0xda,0x7b,0xd9,0x1,0xbb,0x10,0x34,0x6a,0x10,0x6d,0xc6,0x21,0x55,0xd9,0x18,0x22,0,0x2a,0xd0,0x33,0x5e,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8a,0xfb,0x13,0x6d,0x1,0x4,0x8a,0xfb,0x13,0x67,0x6,0x2,0x60,0,0x7,0x4,0x8a,0xfb,0x13,0x6d,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x7f,0x5b],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0x97]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x14,0xa5]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x2f,0x35]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22,0x73,0x1c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0x4]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0x9d,0x41]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6,0xec,0xd]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x78,0xa4,0x6f]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0xd3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x44]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0x5a,0x1d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0x33]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0x11,0x4d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x8,0xac]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xb6,0x37]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc2,0x8f,0x6c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x33]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f,0x23]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x9b]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0xb0]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3,0xad]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0x82,0xc5]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92,0xa4]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0xa6,0x7e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x42,0x1b]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x56,0x7e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0x99,0x5a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0xac]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x51,0x6d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0xe3,0x28]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x54]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x31]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56,0xff]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa0,0xfb,0x1c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xe0]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x20,0x47,0xeb]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0xac,0x35]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0xe3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0x65,0x51]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x65]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0x7d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0x28]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0xc1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0xb]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0x30]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7,0xf5,0x9e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0xbf]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc,0xdc]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
