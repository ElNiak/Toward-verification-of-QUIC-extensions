SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,238,3,3,84,41,223,150,188,66,48,223,32,42,185,204,147,106,204,30,86,0,145,65,117,1,208,121,129,26,220,56,86,46,118,227,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,12,214,6,170,49,154,182,126,67,78,222,78,183,201,251,204,252,160,95,169,159,172,95,134,201,76,245,11,58,180,78,75,28,99,115,13,82,140,242,222,6,38,149,46,99,133,235,41,15,146,247,19,158,114,91,222,72,225,246,8,10,46,253,225,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,142,25,96,130,1,4,142,25,96,122,6,2,96,0,7,4,142,25,96,130,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,88,234]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x5429df96,random_bytes:[0xbc,0x42,0x30,0xdf,0x20,0x2a,0xb9,0xcc,0x93,0x6a,0xcc,0x1e,0x56,0,0x91,0x41,0x75,0x1,0xd0,0x79,0x81,0x1a,0xdc,0x38,0x56,0x2e,0x76,0xe3]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xc,0xd6,0x6,0xaa,0x31,0x9a,0xb6,0x7e,0x43,0x4e,0xde,0x4e,0xb7,0xc9,0xfb,0xcc,0xfc,0xa0,0x5f,0xa9,0x9f,0xac,0x5f,0x86,0xc9,0x4c,0xf5,0xb,0x3a,0xb4,0x4e,0x4b,0x1c,0x63,0x73,0xd,0x52,0x8c,0xf2,0xde,0x6,0x26,0x95,0x2e,0x63,0x85,0xeb,0x29,0xf,0x92,0xf7,0x13,0x9e,0x72,0x5b,0xde,0x48,0xe1,0xf6,0x8,0xa,0x2e,0xfd,0xe1]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xe196082}},{max_idle_timeout:{seconds_16:0xe19607a}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xe196082}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x58ea}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x54,0x29,0xdf,0x96,0xbc,0x42,0x30,0xdf,0x20,0x2a,0xb9,0xcc,0x93,0x6a,0xcc,0x1e,0x56,0,0x91,0x41,0x75,0x1,0xd0,0x79,0x81,0x1a,0xdc,0x38,0x56,0x2e,0x76,0xe3,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xc,0xd6,0x6,0xaa,0x31,0x9a,0xb6,0x7e,0x43,0x4e,0xde,0x4e,0xb7,0xc9,0xfb,0xcc,0xfc,0xa0,0x5f,0xa9,0x9f,0xac,0x5f,0x86,0xc9,0x4c,0xf5,0xb,0x3a,0xb4,0x4e,0x4b,0x1c,0x63,0x73,0xd,0x52,0x8c,0xf2,0xde,0x6,0x26,0x95,0x2e,0x63,0x85,0xeb,0x29,0xf,0x92,0xf7,0x13,0x9e,0x72,0x5b,0xde,0x48,0xe1,0xf6,0x8,0xa,0x2e,0xfd,0xe1,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8e,0x19,0x60,0x82,0x1,0x4,0x8e,0x19,0x60,0x7a,0x6,0x2,0x60,0,0x7,0x4,0x8e,0x19,0x60,0x82,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x58,0xea],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0xde]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x36,0x42]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5b,0xac,0xdb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x7b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0xd1,0x1c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0x14,0xee]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x4b,0xea]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3,0xea,0xbb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x40]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0x80,0x7b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41,0xce,0x18]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x61,0xb4]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x29,0xb6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xd3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0xc2,0x8b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55,0x6f,0x5f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8f,0x19]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0xa5,0x9c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe,0xf8,0xaf]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7b,0xff]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0x6,0x8b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0xcb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x81]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13,0x14]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x45,0x1c]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0xad,0xbd]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0xf4,0x9b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe6,0x93]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe,0xf6]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xec,0x15,0x92]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0xd6,0x71]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xc5,0xb8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0x4b,0x9a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0xd3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0xc7]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0xd0,0x64]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66,0xcd,0x92]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0xc0,0x63]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0xf2,0x4a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c,0x29]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa5,0xdf]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0xd3,0x49]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0xf0]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0x8a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3,0x5f]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0,0x29,0x48]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x2d,0xbb]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0x14]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0xcf]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2,0xc3,0xda]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0x1d,0x48]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0x4b]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x33,0x7e]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0xd7,0x68]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x2d,0x4a]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0x7]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0x13]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x5d,0x55]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x33]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9,0xf7]},1,6,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
