SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,236,3,3,115,107,224,3,28,3,146,137,232,56,3,59,245,163,58,97,90,205,42,88,253,212,235,187,246,168,223,51,252,46,179,50,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,139,112,173,42,83,178,82,85,5,160,89,251,169,122,181,101,173,204,60,75,180,230,11,64,174,75,187,195,44,111,56,160,35,40,139,202,177,123,175,247,111,86,147,87,66,143,136,244,82,225,49,175,31,218,207,228,156,245,100,226,250,126,22,240,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,139,208,41,171,1,4,139,208,41,163,6,2,96,0,7,4,139,208,41,171,15,8,0,0,0,0,0,0,0,1,12,0,8,2,88,239]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x736be003,random_bytes:[0x1c,0x3,0x92,0x89,0xe8,0x38,0x3,0x3b,0xf5,0xa3,0x3a,0x61,0x5a,0xcd,0x2a,0x58,0xfd,0xd4,0xeb,0xbb,0xf6,0xa8,0xdf,0x33,0xfc,0x2e,0xb3,0x32]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x8b,0x70,0xad,0x2a,0x53,0xb2,0x52,0x55,0x5,0xa0,0x59,0xfb,0xa9,0x7a,0xb5,0x65,0xad,0xcc,0x3c,0x4b,0xb4,0xe6,0xb,0x40,0xae,0x4b,0xbb,0xc3,0x2c,0x6f,0x38,0xa0,0x23,0x28,0x8b,0xca,0xb1,0x7b,0xaf,0xf7,0x6f,0x56,0x93,0x57,0x42,0x8f,0x88,0xf4,0x52,0xe1,0x31,0xaf,0x1f,0xda,0xcf,0xe4,0x9c,0xf5,0x64,0xe2,0xfa,0x7e,0x16,0xf0]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xbd029ab}},{max_idle_timeout:{seconds_16:0xbd029a3}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xbd029ab}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x18ef}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0x73,0x6b,0xe0,0x3,0x1c,0x3,0x92,0x89,0xe8,0x38,0x3,0x3b,0xf5,0xa3,0x3a,0x61,0x5a,0xcd,0x2a,0x58,0xfd,0xd4,0xeb,0xbb,0xf6,0xa8,0xdf,0x33,0xfc,0x2e,0xb3,0x32,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x8b,0x70,0xad,0x2a,0x53,0xb2,0x52,0x55,0x5,0xa0,0x59,0xfb,0xa9,0x7a,0xb5,0x65,0xad,0xcc,0x3c,0x4b,0xb4,0xe6,0xb,0x40,0xae,0x4b,0xbb,0xc3,0x2c,0x6f,0x38,0xa0,0x23,0x28,0x8b,0xca,0xb1,0x7b,0xaf,0xf7,0x6f,0x56,0x93,0x57,0x42,0x8f,0x88,0xf4,0x52,0xe1,0x31,0xaf,0x1f,0xda,0xcf,0xe4,0x9c,0xf5,0x64,0xe2,0xfa,0x7e,0x16,0xf0,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x8b,0xd0,0x29,0xab,0x1,0x4,0x8b,0xd0,0x29,0xa3,0x6,0x2,0x60,0,0x7,0x4,0x8b,0xd0,0x29,0xab,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x58,0xef],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x5f,0xc1]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x85,0xbb]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0xd3,0x6]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0x1,0x7e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x4b]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b,0xd,0xc2]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0x5f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0x7c,0x3a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63,0xc6]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x4e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33,0x99,0xdc]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x2d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0x13]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5,0xe0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad,0xd0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0x97,0xe]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0xf4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61,0xbc]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0x78,0xfb]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0x8b,0x24]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7d]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0xc0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0x50,0x19]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0x30,0x4c]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x82]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2,0x82]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0xea,0x7]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0x5f]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaf]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0x62]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x69,0x9d]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b,0x23]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5,0x30]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0x24,0xca]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0xd1]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x1d,0x1e]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x88]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x55]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xda,0x82]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0x50,0x7a]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6d,0xb0,0xa4]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x71,0xca]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0x50]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0x60]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4,0x6]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0xee]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa]},1,12,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e,0xd3,0xbd]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67]},1,10,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x4a]},1,12,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
