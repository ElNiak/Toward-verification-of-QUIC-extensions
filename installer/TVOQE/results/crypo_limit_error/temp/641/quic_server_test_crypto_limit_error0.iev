SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,70,79,84,219,242,155,96,60,38,3,112,33,105,88,53,164,149,211,186,151,150,3,0,204,22,31,222,95,197,50,112,52,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,32,239,98,195,122,148,10,137,241,209,110,173,230,91,2,116,59,187,142,20,178,99,34,145,99,186,74,128,171,87,133,67,32,118,8,144,75,183,144,170,182,100,234,0,38,241,62,127,205,75,188,150,146,244,9,94,210,92,153,32,189,67,220,161,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,128,8,68,10,1,4,128,8,68,7,6,2,96,0,7,4,128,8,68,10,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,196,43]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x464f54db,random_bytes:[0xf2,0x9b,0x60,0x3c,0x26,0x3,0x70,0x21,0x69,0x58,0x35,0xa4,0x95,0xd3,0xba,0x97,0x96,0x3,0,0xcc,0x16,0x1f,0xde,0x5f,0xc5,0x32,0x70,0x34]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x20,0xef,0x62,0xc3,0x7a,0x94,0xa,0x89,0xf1,0xd1,0x6e,0xad,0xe6,0x5b,0x2,0x74,0x3b,0xbb,0x8e,0x14,0xb2,0x63,0x22,0x91,0x63,0xba,0x4a,0x80,0xab,0x57,0x85,0x43,0x20,0x76,0x8,0x90,0x4b,0xb7,0x90,0xaa,0xb6,0x64,0xea,0,0x26,0xf1,0x3e,0x7f,0xcd,0x4b,0xbc,0x96,0x92,0xf4,0x9,0x5e,0xd2,0x5c,0x99,0x20,0xbd,0x43,0xdc,0xa1]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x8440a}},{max_idle_timeout:{seconds_16:0x84407}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x8440a}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xc42b}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x46,0x4f,0x54,0xdb,0xf2,0x9b,0x60,0x3c,0x26,0x3,0x70,0x21,0x69,0x58,0x35,0xa4,0x95,0xd3,0xba,0x97,0x96,0x3,0,0xcc,0x16,0x1f,0xde,0x5f,0xc5,0x32,0x70,0x34,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x20,0xef,0x62,0xc3,0x7a,0x94,0xa,0x89,0xf1,0xd1,0x6e,0xad,0xe6,0x5b,0x2,0x74,0x3b,0xbb,0x8e,0x14,0xb2,0x63,0x22,0x91,0x63,0xba,0x4a,0x80,0xab,0x57,0x85,0x43,0x20,0x76,0x8,0x90,0x4b,0xb7,0x90,0xaa,0xb6,0x64,0xea,0,0x26,0xf1,0x3e,0x7f,0xcd,0x4b,0xbc,0x96,0x92,0xf4,0x9,0x5e,0xd2,0x5c,0x99,0x20,0xbd,0x43,0xdc,0xa1,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x80,0x8,0x44,0xa,0x1,0x4,0x80,0x8,0x44,0x7,0x6,0x2,0x60,0,0x7,0x4,0x80,0x8,0x44,0xa,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xc4,0x2b],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff,0xa1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0x1,0x47]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0xf,0x77]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0x81,0x43]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x87,0xac]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0x5a]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x7f,0xa4]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0xa9,0x5f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6,0x3c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0,0xe3,0xa4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0xdc,0x1]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0x97]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0xdc,0x8d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0x43,0x98]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0x90]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x94,0xfa,0xcf]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5e,0x31]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xaa]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x82]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x5d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4,0x62,0xee]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0xc7,0xeb]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe3]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0xa9,0x3e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0x89]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51,0x8c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x18,0xd2]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3,0xe1]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x19]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4,0xdd]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x5e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x70,0x2c]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x7b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0x77,0x7]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x24,0x59]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa,0x14]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0x3]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x99,0xfd]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x36]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0x24]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1,0x76,0xaf]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba,0xf9,0x34]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0x71]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43,0xb2]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4,0x4e,0x72]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7,0xe0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x52,0x9b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0x9b,0x28]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa8,0x1e]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21,0xc8]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0xd8]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0x36,0xb7]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4]},1,13,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12,0x60]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0x2e,0xbf]},1,2,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
