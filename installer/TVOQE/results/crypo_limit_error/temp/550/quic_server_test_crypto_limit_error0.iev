SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL aioquic
[1,0,0,238,3,3,204,64,223,146,253,35,38,225,93,99,188,246,197,231,168,237,120,93,60,239,172,196,226,32,207,208,161,78,117,237,127,1,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,36,78,193,197,137,233,126,214,98,205,254,159,43,234,3,71,212,167,219,165,209,12,93,210,141,89,2,224,139,154,25,185,6,69,37,61,159,141,203,35,179,10,0,6,233,35,54,40,56,167,94,180,171,7,138,143,26,101,92,105,109,206,20,24,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,143,115,212,156,1,4,143,115,212,154,6,2,96,0,7,4,143,115,212,156,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,82,110]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xcc40df92,random_bytes:[0xfd,0x23,0x26,0xe1,0x5d,0x63,0xbc,0xf6,0xc5,0xe7,0xa8,0xed,0x78,0x5d,0x3c,0xef,0xac,0xc4,0xe2,0x20,0xcf,0xd0,0xa1,0x4e,0x75,0xed,0x7f,0x1]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x24,0x4e,0xc1,0xc5,0x89,0xe9,0x7e,0xd6,0x62,0xcd,0xfe,0x9f,0x2b,0xea,0x3,0x47,0xd4,0xa7,0xdb,0xa5,0xd1,0xc,0x5d,0xd2,0x8d,0x59,0x2,0xe0,0x8b,0x9a,0x19,0xb9,0x6,0x45,0x25,0x3d,0x9f,0x8d,0xcb,0x23,0xb3,0xa,0,0x6,0xe9,0x23,0x36,0x28,0x38,0xa7,0x5e,0xb4,0xab,0x7,0x8a,0x8f,0x1a,0x65,0x5c,0x69,0x6d,0xce,0x14,0x18]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xf73d49c}},{max_idle_timeout:{seconds_16:0xf73d49a}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xf73d49c}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x526e}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xcc,0x40,0xdf,0x92,0xfd,0x23,0x26,0xe1,0x5d,0x63,0xbc,0xf6,0xc5,0xe7,0xa8,0xed,0x78,0x5d,0x3c,0xef,0xac,0xc4,0xe2,0x20,0xcf,0xd0,0xa1,0x4e,0x75,0xed,0x7f,0x1,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x24,0x4e,0xc1,0xc5,0x89,0xe9,0x7e,0xd6,0x62,0xcd,0xfe,0x9f,0x2b,0xea,0x3,0x47,0xd4,0xa7,0xdb,0xa5,0xd1,0xc,0x5d,0xd2,0x8d,0x59,0x2,0xe0,0x8b,0x9a,0x19,0xb9,0x6,0x45,0x25,0x3d,0x9f,0x8d,0xcb,0x23,0xb3,0xa,0,0x6,0xe9,0x23,0x36,0x28,0x38,0xa7,0x5e,0xb4,0xab,0x7,0x8a,0x8f,0x1a,0x65,0x5c,0x69,0x6d,0xce,0x14,0x18,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8f,0x73,0xd4,0x9c,0x1,0x4,0x8f,0x73,0xd4,0x9a,0x6,0x2,0x60,0,0x7,0x4,0x8f,0x73,0xd4,0x9c,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x52,0x6e],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x14]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0xce]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0xfa]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d,0xd,0xaa]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0x32]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0x37]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x85,0x63,0x28]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0xa9]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xab,0x84,0xf6]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbc]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0xad]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45,0xa7,0x94]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x45]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35,0x19]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0xfa]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x81]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38,0x78,0x78]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0xa]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0xb]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdf,0xcf]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa3]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0x64,0x72]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0xb]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0xe4]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0xa8,0x44]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x66]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21,0x56]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0x25]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1,0x7c]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0x24,0x38]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xdb]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1c]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x2e]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0x55]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0xd4]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0xa]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8c,0x5f]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0x5d]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0xbb,0xb8]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xef]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb6]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfe,0x56]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc8,0xec]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0xd4,0xa7]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0x1d]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0xd8]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f,0,0xf4]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xad]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0xb7,0x1]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0xbe,0xae]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x6e]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x41,0x18]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x43]},1,7,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x97]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0,0x74,0xaa]},1,13,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0xc5]},1,7,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
