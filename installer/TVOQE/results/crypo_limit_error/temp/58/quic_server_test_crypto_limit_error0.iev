SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quant
[1,0,0,236,3,3,170,93,36,225,249,65,152,198,50,248,121,81,99,239,226,195,147,24,184,243,208,57,140,215,12,103,4,241,234,68,133,133,0,0,6,19,2,19,1,19,3,1,0,0,189,0,51,0,71,0,69,0,23,0,65,4,160,238,133,201,135,204,148,57,143,106,190,123,138,20,212,136,154,131,101,27,106,37,82,127,13,15,70,248,24,211,120,150,56,184,142,143,60,235,227,185,218,107,249,78,56,226,60,148,215,5,215,92,53,76,21,109,178,189,15,82,52,50,45,101,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,42,5,2,96,0,4,4,140,188,43,54,1,4,140,188,43,50,6,2,96,0,7,4,140,188,43,54,15,8,0,0,0,0,0,0,0,1,12,0,8,2,94,42]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xaa5d24e1,random_bytes:[0xf9,0x41,0x98,0xc6,0x32,0xf8,0x79,0x51,0x63,0xef,0xe2,0xc3,0x93,0x18,0xb8,0xf3,0xd0,0x39,0x8c,0xd7,0xc,0x67,0x4,0xf1,0xea,0x44,0x85,0x85]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xa0,0xee,0x85,0xc9,0x87,0xcc,0x94,0x39,0x8f,0x6a,0xbe,0x7b,0x8a,0x14,0xd4,0x88,0x9a,0x83,0x65,0x1b,0x6a,0x25,0x52,0x7f,0xd,0xf,0x46,0xf8,0x18,0xd3,0x78,0x96,0x38,0xb8,0x8e,0x8f,0x3c,0xeb,0xe3,0xb9,0xda,0x6b,0xf9,0x4e,0x38,0xe2,0x3c,0x94,0xd7,0x5,0xd7,0x5c,0x35,0x4c,0x15,0x6d,0xb2,0xbd,0xf,0x52,0x34,0x32,0x2d,0x65]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xcbc2b36}},{max_idle_timeout:{seconds_16:0xcbc2b32}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xcbc2b36}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x1e2a}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xec,0x3,0x3,0xaa,0x5d,0x24,0xe1,0xf9,0x41,0x98,0xc6,0x32,0xf8,0x79,0x51,0x63,0xef,0xe2,0xc3,0x93,0x18,0xb8,0xf3,0xd0,0x39,0x8c,0xd7,0xc,0x67,0x4,0xf1,0xea,0x44,0x85,0x85,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbd,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xa0,0xee,0x85,0xc9,0x87,0xcc,0x94,0x39,0x8f,0x6a,0xbe,0x7b,0x8a,0x14,0xd4,0x88,0x9a,0x83,0x65,0x1b,0x6a,0x25,0x52,0x7f,0xd,0xf,0x46,0xf8,0x18,0xd3,0x78,0x96,0x38,0xb8,0x8e,0x8f,0x3c,0xeb,0xe3,0xb9,0xda,0x6b,0xf9,0x4e,0x38,0xe2,0x3c,0x94,0xd7,0x5,0xd7,0x5c,0x35,0x4c,0x15,0x6d,0xb2,0xbd,0xf,0x52,0x34,0x32,0x2d,0x65,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2a,0x5,0x2,0x60,0,0x4,0x4,0x8c,0xbc,0x2b,0x36,0x1,0x4,0x8c,0xbc,0x2b,0x32,0x6,0x2,0x60,0,0x7,0x4,0x8c,0xbc,0x2b,0x36,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x2,0x5e,0x2a],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0xa3]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x30,0xf5]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a,0xaa,0x92]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0xa,0x47]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0x18,0xe]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x80]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd1,0x6b,0x57]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0xed]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc1,0x4f,0xf1]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfa,0x1d]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x21]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0xcd,0x4a]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x43]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x51]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a,0xad,0x8d]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfc,0xb1]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0xe9,0xa7]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0x48,0xd7]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0x9]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6b,0x2a]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0x4,0x24]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x65,0x88]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0x3,0xa5]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9,0x6f]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0x98,0xd]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0x1]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x30,0x4]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc,0x2]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0x3a,0x4a]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0x90]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe9,0x11]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe1]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f,0x9e]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3d]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x77]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0xa0]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0xa1]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5,0xac]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0xf1,0xc]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x39,0xe4]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0xe9,0x89]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0x48,0x13]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x62,0x15,0x67]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a,0xdf]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfd,0x1e]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79,0x70,0xe7]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3e,0x73]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69,0x30]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0x4,0x4a]},1,9,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdd,0,0xa1]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0x8c]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,10,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25]},1,9,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
