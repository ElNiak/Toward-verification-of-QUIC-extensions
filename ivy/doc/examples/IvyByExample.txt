1. Invariants:

Proving the invariant = ivy_check <file.ivy>

ivy_check doc/examples/client_server_example.ivy 

Isolate this:

    The inductive invariant consists of the following conjectures:
        doc/examples/client_server_example.ivy: line 26: invar2
        doc/examples/client_server_example.ivy: line 34: invar3

    The following action implementations are present:
        doc/examples/client_server_example.ivy: line 14: implementation of connect
        doc/examples/client_server_example.ivy: line 20: implementation of disconnect

    The following initializers are present:
        doc/examples/client_server_example.ivy: line 9: init[after1]

    Initialization must establish the invariant
        doc/examples/client_server_example.ivy: line 26: invar2 ... PASS
        doc/examples/client_server_example.ivy: line 34: invar3 ... PASS

    Any assertions in initializers must be checked ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:connect
            doc/examples/client_server_example.ivy: line 26: invar2 ... PASS
            doc/examples/client_server_example.ivy: line 34: invar3 ... PASS
        (internal) ext:disconnect
            doc/examples/client_server_example.ivy: line 26: invar2 ... PASS
            doc/examples/client_server_example.ivy: line 34: invar3 ... PASS

    The following program assertions are treated as assumptions:
        in action disconnect when called from the environment:
            doc/examples/client_server_example.ivy: line 21: assumption
        in action connect when called from the environment:
            doc/examples/client_server_example.ivy: line 15: assumption

OK




2. Specifications:

3. Abstract Datatypes:

4. Parameterized systems;

5. HelloWorld:
