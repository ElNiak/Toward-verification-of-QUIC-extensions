<HTML><HEAD>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<META name=GENERATOR content="MSHTML 11.00.10570.1001">
<STYLE>* {
	WORD-WRAP: break-word; FONT-FAMILY: "Segoe UI"
}
</STYLE>
</HEAD>
<BODY>
<P>\chapter{Results}</P>
<P>\section{Introduction}<BR>In this chapter, we show the results we obtained by following the experimental protocol of McMillan's paper's "Formal Specification and Testing of QUIC" applied to the draft 29 \cite{ietf-quic-transport-29} for the server and client implementation. We also compare our findings with the preceding ones to see the evolution of the correctness of the different implementations. \todo{doit on mettre plus de mots clé en gras ?} %Si on veut faire ca, autant le faire dans une autre section non ? La partie results est déjà chargée rien qu'avec les resultats et on en parle déjà un peu dans le state of the art</P>
<P>\vspace{-0.3cm}</P>
<P>\section{Methodology}</P>
<P>\vspace{-0.2cm}</P>
<P>\subsection{Virtual Machine}</P>
<P>To perform our experiments, we used a virtual \lstinline{CentOS (7.5.1804)}  machine running on an \lstinline{x86_64} architecture with 4 cores of 3100 MHz and 8 Gb of RAM.&nbsp; However, we also have results that we obtain locally on our device.</P>
<P>%\vspace*{-1cm}</P>
<P>&nbsp;</P>
<P>%\vspace*{-1.1cm}</P>
<P>%JF, mettre au début du doc les listes de limitations me parait plus clair<BR>% need shorter title for layout<BR>\subsection{Limits to improve}</P>
<P>Some points restricted the coverage of our tests. First, originally, Ivy accepts variables of maximum eight bytes which wasn't a problem for the implementations that McMillan experimented. We manage to improve Ivy to support data up to 16 bytes. In the last chapter, we explore some paths to go beyond this problem. This peak value of 16 bytes for Ivy datatype limits some tests we could do.  It's also a constraint to generate a scenario for some implementation. One example is the Connection ID. The draft says that it can be between 0 and 20 bytes but only a subset of implementations use a Connection ID of more than 16 bytes. This is a restriction if&nbsp; there are more than 16 bytes used because we would have to truncate the value and that could cause problems for part of our tests. When we had this issue, most of the time we solved it by modifying the implementations themselves so they take connection ID of maximum 16 bytes. Generally, it consisted of modifying just one global variable. \\</P>
<P>\noindent Another point is that we could have done more tests for some errors but we considered that it would have been repetition to create tons of similar tests. It would have significantly increased the time needed to launch all the tests without a great improvement in the quality of our results. For example, concerning errors  linked to transport parameters but not a specific one, we focus our tests by choosing an arbitrary value for a single transport parameter.\\</P>
<P>\noindent We have also seen some cases where the computational time of Ivy was causing a problem, especially when an implementation sends a batch of big packets in a short time. This slows Ivy and can cause the tested implementation to timeout its retransmissions timer. It could result in some false positive. A&nbsp; case of this problem is with \lstinline{quic-go} that typically sends us a batch of five streams frames and timeout. You can check the results for this implementation for more details.</P>
<P>%TODO : aioquic implemente pas ca je pense </P>
<P>% The primary defense against amplification attacks is verifying that a<BR>&nbsp;%&nbsp; peer is able to receive packets at the transport address that it<BR>&nbsp;%&nbsp; claims.&nbsp; Therefore, after receiving packets from an address that is<BR>%&nbsp;&nbsp; not yet validated, an endpoint MUST limit the amount of data it sends<BR>&nbsp; % to the unvalidated address to three times the amount of data received<BR>&nbsp; % from that address.&nbsp; This limit on the size of responses is known as<BR>&nbsp;%&nbsp; the anti-amplification limit.<BR>&nbsp;<BR>&nbsp;% <BR>&nbsp; % Path validation succeeds when a PATH_RESPONSE frame is received that<BR>&nbsp;&nbsp; %contains the data that was sent in a previous PATH_CHALLENGE frame.<BR>&nbsp;&nbsp; %A PATH_RESPONSE frame received on any network path validates the path<BR>&nbsp;&nbsp; %on which the PATH_CHALLENGE was sent.</P>
<P>\subsection{Implementation tested}</P>
<P>Concerning Ivy, we checkout the \lstinline{quic_29} branch of our Ivy forked version \cite{b31}. We decided to test seven QUIC implementations: \lstinline{quinn}, \lstinline{picoquic}, \lstinline{aioquic}, \lstinline{mvfst}, \lstinline{quiche}, \lstinline{quic-go} and \lstinline{lsquic}. We select famous implementation made in different programming languages. Different TLS implementations are used among the implementations. Some of them are mature implementations that exist from a long time while others are newer. We have implementations  intended for production and some used for scientific and feedback purposes. You can find more details in \cite{quicwg}.</P>
<P>&nbsp;</P>
<P>%\lstinline{quinn}<BR>\todo{presenter un peu les implementation ? }<BR>%JF : on le ferait pas dans les annexes ? Maxime dans son mémoire ne présente pas les implem qu'il teste<BR>\begin{table}[h!]<BR>\centering<BR>%\hspace{3cm}<BR>%\caption{Tested Implementation}<BR>\label{tab:my-table}<BR>\scalebox{0.8}{<BR>\begin{tabular}{|c|}<BR>\hline<BR>\textbf{picoquic (C)}&nbsp; \cite{b21}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>ad23e6c3593bd987dcd8d74fc9f528f2676fedf4 \\<BR>\textbf{picotls}&nbsp; \cite{b22}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>47327f8d032f6bc2093a15c32e666ab6384ecca2 \\ \hline<BR>\textbf{quic-go (golang)}&nbsp;&nbsp;&nbsp; \cite{b28}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>v0.18.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\textbf{aioquic (python)}&nbsp;&nbsp; \cite{b24}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>0.9.3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\textbf{quant (C)}&nbsp;&nbsp;&nbsp; \cite{b25}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>29&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\textbf{mvfst (facebook/C++)}&nbsp;&nbsp;&nbsp;&nbsp; \cite{b27}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>36111c1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\textbf{lsquic}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \cite{b23}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>v2.29.4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ <BR>\textbf{boringssl}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \cite{b29}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>a2278d4d2cabe73f6663e3299ea7808edfa306b9 \\ \hline<BR>\textbf{quinn (rust)}&nbsp;&nbsp;&nbsp;&nbsp; \cite{b26}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>0.7.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\textbf{quiche (rust)}&nbsp;&nbsp;&nbsp;&nbsp; \cite{b26}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>0.7.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}<BR>}<BR>\caption{Draft 29 tested implementations}<BR>\end{table}</P>
<P>&nbsp;</P>
<P>%JF faut qu'à chaque fois qu'on utilise du future -&gt; présent<BR>\subsection{Our tests}</P>
<P>\subsubsection{Server tests}</P>
<P>\noindent We have 14 different tests for the server part. Some of them are general while others are specific. \\</P>
<P>\noindent First, we have the original tests of McMillan. They are   different than before because we had to adapt them to draft 29. There is \lstinline{quic_server_test_stream} that is a general scenario&nbsp; for testing streams. During this test, we allow multiple migrations so we can see if the tested implementation can manage it. Several streams are open to see if the management of streams is correct. We create them by increasing the stream ID by four. We have a second test \lstinline{quic_server_test_max} that is specific to the handling of the \lstinline{MAX_STREAM_DATA} and \lstinline{STREAM_DATA_BLOCKED} frames. We test if the amount of data received on a stream is not over the&nbsp; \lstinline{max_stream_data} limit. If it goes above the limit, we test if we receive well \lstinline{stream_data_blocked frame}. The last two tests, \lstinline{quic_server_test_reset_stream}, \lstinline{quic_server_test_connecti} \lstinline{on_close}, are testing respectively the receiving of a \lstinline{RESET_STREAM} frame if the stream is well reset and the way that the tested implementation close his connection. \\</P>
<P>%\noindent Original tests:<BR>%\begin{enumerate}<BR>&nbsp;%&nbsp;&nbsp; \item \lstinline{quic_server_test_stream}: This is a general scenario for testing streams and the client migration <BR>&nbsp; %&nbsp; \item \lstinline{quic_server_test_max}: This is a general scenario for testing the \lstinline{max_stream_data} and \lstinline{stream_data_blocked} frames<BR>&nbsp;&nbsp; % \item \lstinline{quic_server_test_reset_stream}: Here we test what happen during a reset stream<BR>&nbsp;&nbsp; % \item \lstinline{quic_server_test_connection_close}: Finally we also have %a test to check if the connection close well.\\<BR>%\end{enumerate}</P>
<P>\noindent We also added ten more scenarios. The test \lstinline{quic_server_test_unkown} checks the behaviour when receiving a frame of an unknown type after the handshake is confirmed. We should receive a \lstinline{FRAME_ENCODING_ERROR} according to the draft. Note that locally for this test, we allow generation of this frame at any time to see how the implementation behaves if they receive this frame at the wrong encryption level. This won't be reflected in the result tables but we develop some points based on that.&nbsp; \\</P>
<P>\noindent There are several tests for transport parameters since this is one of the parts that changed the most between the two tested drafts. With \lstinline{quic_server_test_tp_error}, we put a wrong value to one of the transport parameters and expect a \lstinline{TRANSPORT_PAR} \lstinline{AMETER_ERROR}. We have one test for the \lstinline{active_connection_id_limit} transport parameter in the test \lstinline{quic_server_test_tp_acticoid_error} where we initiate a connection with this transport parameter value set at a value less than 2. We expect a \lstinline{TRANSPORT_PARAMETER_ERROR}. We are also testing a scenario in \lstinline{quic_server_test_no_icid} where we voluntarily don't set the \lstinline{initial_source_con} \lstinline{nection_id} transport parameter and check that the tested implementation throws a \lstinline{TRANSPORT} \lstinline{_PARAMETER_ERROR}. &nbsp;The test &nbsp;\lstinline{quic_server_test_double_tp_error} is also about transport parameters. We set twice a transport parameter and expect a \lstinline{TRANSPORT_PARAMETER_ERROR}. The rule in the draft is ambiguous as it does not say what we should do in such a case. Should we trigger an error? Discard the connection? Something else? If a server accepts the connection, this can be problematic. For example, if we set twice the \lstinline{max_ack_delay} and we decide not to throw an error, which values to consider? Our interpretation in Ivy is that we should send an error since this is the most formal way of interpretation but the draft should be more precise. Here is the property:</P>
<P>\vspace*{-0.3cm}</P>
<P>\epigraph{\textit{An endpoint MUST NOT send a parameter more than once in a given<BR>&nbsp;&nbsp; transport parameters extension.&nbsp; An endpoint SHOULD treat receipt of<BR>&nbsp;&nbsp; duplicate transport parameters as a connection error of type<BR>&nbsp;&nbsp; \lstinline{TRANSPORT_PARAMETER_ERROR}.}}{Draft 29 of QUIC section 7.4.}<BR>&nbsp; </P>
<P>%Concerning the \lstinline{quic_server_test_tp_limit_acticoid_error}, we test the property saying that when the number of active connection exceed the \lstinline{active_connection_id_limit} transport parameter, we should receive a \lstinline{CONNECTION_ID_LIMIT_ERROR}.<BR>\vspace*{-0.3cm}</P>
<P>\noindent We have another test where we put a non-zero token field in an Initial packet. If a server receives such a packet, it must either discard the packet or either throw a \lstinline{PROTOCOL_VIOLATION} error. We consider that  the test succeed if we received an \lstinline{PROTOCOL_VIOLATION} error or if the handshake does not&nbsp; complete. In \lstinline{quic_server_test_handshake_done_error}, we send a huge amount of&nbsp; \lstinline{handshake_} \lstinline{done} frame at any time. According to the draft, a server should send this frame only before completing the handshake or return a&nbsp; \lstinline{PROTOCOL_VIOLATION} error. This frame should only be sent by the server. Whenever we send this frame as a client, we should receive \lstinline{PROTOCOL_VIOLATION} according to section [19.20.].\\</P>
<P>\noindent We also have one test about the handling of \lstinline{STREAM_BLOCKED} frame. We generate this frame with an invalid "maximum stream" field value. The draft states that upon receiving&nbsp; frame, the server should send a \lstinline{STREAM_LIMIT_ERROR} or \lstinline{FRAME_ENCODING_ERROR}. We verify if this is the case.\\</P>
<P>\noindent&nbsp; The test \lstinline{quic_server_test_maxdata} is  like   \lstinline{quic_server_test_max} except that we restrict to the \lstinline{MAX_DATA} frame. There are also more value allowed in the frame's field domain. The coverage of the test is also higher than \lstinline{quic_server_test_max}.\\</P>
<P>\noindent Finally, there is the \lstinline{quic_server_test_} \lstinline{ext_min_ack_delay} that hold all the properties that we test of the \lstinline{min_ack_delay} QUIC extension. Note that we didn't test the core properties of the extension since the nature itself about delay and time make it difficult to model. However, this test was more here to show that we can easily add new frames and new behaviour for the extensions and that depending on the extension, more or fewer properties can be represented.\\</P>
<P>\noindent Let's note that in all those scenarios, we are keeping our model complete and all the rules that we implemented should be respected.</P>
<P>&nbsp;</P>
<P>&nbsp; %&nbsp; \item \lstinline{quic_server_test_blocked_streams_maxstream_error} In this test, we voluntary generate \lstinline{STREAM_BLOCKED} with an invalid "maximum stream" field value, we should get a \lstinline{STREAM_LIMIT_ERROR} or \lstinline{FRAME_ENCODING_ERROR}.<BR>&nbsp; %&nbsp; \item \lstinline{quic_server_test_accept_maxdata} similar test to \lstinline{quic_server_test_max} but restricted to \lstinline{MAX_DATA} frame where we send "random" value. With the correct behavior, the receiver should accept all frames even with smaller value. <BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_stateless_reset_token}: (todo, cannot be sent by client)<BR>&nbsp;&nbsp; % \item \lstinline{quic_server_test_ext_min_ack_delay}: Only test where we test the behavior of the \lstinline{min_ack_delay} QUIC extensions.\\</P>
<P>&nbsp;</P>
<P>%JF : rajouter plus de détails pour les tests ? J'avais pensé à mettre la règle telle quelle venant de la RFC mais faut savoir ce que obo axel en pense<BR>%\begin{enumerate}<BR>&nbsp;&nbsp; % \item \lstinline{quic_server_test_unkown}: This test the behavior of endpoint reacting to the reception of a frame of unknown type which should trigger a \lstinline{FRAME_ENCODING_ERROR} according to the draft.<BR>&nbsp;&nbsp;&nbsp; %\item&nbsp; \lstinline{quic_server_test_tp_limit_newcoid}: We voluntary create more than allowed connection by&nbsp; \lstinline{active_connection_id_limit} transport parameter and we should receive a \lstinline{CONNECTION_ID_LIMIT_ERROR}.<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_tp_limit_acticoid_error}: We test the property saying that when the number of active connection exceed the \lstinline{active_connection_id_limit} transport parameter, we should receive a \lstinline{CONNECTION_ID_LIMIT_ERROR}, here we put an invalid transport parameter value. <BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_tp_error}: General test where we put wrong value to one of the transport parameters, we should receive a \lstinline{TRANSPORT_PARAMETER_ERROR} according to the draft in section [7.4.]. <BR>&nbsp;&nbsp; % \item \lstinline{quic_server_test_tp_acticoid_error}:&nbsp; Test where we check that the server should throw a \lstinline{TRANSPORT_PARAMETER_ERROR} when we initiate the connection with the \lstinline{active_connection_id_limit} transport parameter value less than 2.<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_token_error}: According to the draft, server that receive a Initial packet with a non-zero token field should either discard the packet or either throw a \lstinline{PROTOCOL_VIOLATION} error. So this test is considered as passed if the handshake never end or if we received an error.<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_stop_sending}: General test to test the behavior of the \lstinline{stop_sending} frame.<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_retirecoid_error}<BR>&nbsp;&nbsp; % \item \lstinline{quic_server_test_no_icid}:&nbsp; Simple test where we voluntary don't set the \lstinline{initial_source_connection_id} transport parameter and check that the implementation throw a \lstinline{TRANSPORT_PARAMETER_ERROR} <BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_newcoid_zero_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_handshake_done_error}: Here we send a huge amount of&nbsp; \lstinline{handshake_done} frame at any times. According to the draft, a server should send this frame only before completing the handshake or return a&nbsp; \lstinline{PROTOCOL_VIOLATION} error. This frame should only be send by the server. Whenever we send this frame as a client, we should&nbsp; receive \lstinline{PROTOCOL_VIOLATION} according to section [19.20.]<BR>&nbsp;&nbsp;&nbsp; %JF : je ré-ecrirai comme ca : We voluntarily choose an "ambiguous" rule where it is not clearly said what is the expected behavior when we set twice the same transport parameter. Should we close the connection ? Send an error ? Another behavior ? We will see which solutions the implementations implemented. <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_double_tp_error}:&nbsp; Test where we set twice a transport parameter and where we should have a<BR>&nbsp;&nbsp;&nbsp; %\lstinline{TRANSPORT_PARAMETER_ERROR}. We voluntarily choose an "ambiguous" rule where it is not clear in the draft what we should do. Should we&nbsp; trigger an error ? Discard the connection ? Something else ? If a server accept the connection, this can be problematic. For example if we set twice the maximum ACK delay, what value to consider ? We can found this property in section [7.4.].<BR>&nbsp;&nbsp; % \item \lstinline{quic_server_test_blocked_streams_maxstream_error} In this test, we voluntary generate \lstinline{STREAM_BLOCKED} with an invalid "maximum stream" field value, we should get a \lstinline{STREAM_LIMIT_ERROR} or \lstinline{FRAME_ENCODING_ERROR}.<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_accept_maxdata} similar test to \lstinline{quic_server_test_max} but restricted to \lstinline{MAX_DATA} frame where we send "random" value. With the correct behavior, the receiver should accept all frames even with smaller value. <BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_stateless_reset_token}: (todo, cannot be sent by client)<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_server_test_ext_min_ack_delay}: Only test where we test the behavior of the \lstinline{min_ack_delay} QUIC extensions.\\<BR>%\end{enumerate}</P>
<P>%\vfill<BR>%\newpage</P>
<P>\subsubsection{Client tests}</P>
<P>McMillan initially made one test similar to his server counterpart. It is&nbsp; \lstinline{quic_client_} \lstinline{test_max} where the scenario is like \lstinline{quic_server_test_max}.<BR>%\begin{enumerate}<BR>&nbsp;%&nbsp;&nbsp; \item \lstinline{quic_client_test_max}: is a general test similar to \lstinline{quic_server_test_max}\\<BR>%\end{enumerate}<BR>%Pas sur que ma tournure de phrase soit mieux We also add some new tests. Some of them are very similar to their client counterpart<BR>\noindent We added 9 other tests. Most of them&nbsp; are as for the server side : the scenario is the same. It is the case for the following tests :&nbsp; \lstinline{quic_client_test_unkown}, \lstinline{quic_client} \lstinline{_test_tp_limit_acticoid_error}, \lstinline{quic_client_test_tp_error}, \\ \lstinline{quic_client_test_tp_acticoid_error}, \lstinline{quic_client_test_no_odci},&nbsp; \lstinline{quic_client}&nbsp; \lstinline{_test_handshake_done_error},\lstinline{quic_client_test_double_tp_error}, \lstinline{quic_client} \lstinline{_test_ext_min_ack_delay}.\\</P>
<P>\noindent There is one test specific to the client side, it is the \lstinline{quic_client_test_tp_prefadd_} \lstinline{error}. We test the fact that the \lstinline{prefered_address} transport parameter should not contain zero-length connection ID and throw \lstinline{TRANSPORT_PARAMETER_ERROR}.\\</P>
<P>\noindent Note that for the client part, we never perform connection migration.<BR>%\begin{enumerate}<BR>&nbsp;%&nbsp;&nbsp; \item \lstinline{quic_client_test_tp_prefadd_error}: we test the fact that the \lstinline{prefered_address} transport parameter should not contain zero-length connection ID and throw \lstinline{TRANSPORT_PARAMETER_ERROR}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_stateless_reset_token}:<BR>&nbsp; %&nbsp; \item \lstinline{quic_client_test_unkown}<BR>&nbsp;&nbsp; % \item \lstinline{quic_client_test_tp_limit_acticoid_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_tp_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_tp_acticoid_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_retirecoid_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_no_odci} is a general test similar to \lstinline{quic_server_test_no_icid}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_newcoid_zero_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_handshake_done_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_double_tp_error}<BR>&nbsp;&nbsp;&nbsp; %\item \lstinline{quic_client_test_ext_min_ack_delay}<BR>%\end{enumerate}</P>
<P>\vspace*{-0.3cm}</P>
<P>\section{Results}</P>
<P>For this experience, we launch 100 iterations for each test and implementation. It took us 3 days to execute all the tests. A larger set of tests is possible but we don't think it would improve by a large factor the quality of our results. We base this observation on some tests that we launched at a large scale (1000+ tests) with no significant difference in the results. A batch of 100 tests seems sufficient to us. We should be careful about how we infer our results with statistical models. We preferred to focus on the analysis of traces than statistical analysis. We prefer to answer the question "how is it possible to improve an implementation" than "do my implementations have a good coverage of the RFC properties". Ivy should be able to answer both questions. However, for the second one, a deeper statistical analysis should be done. The way we proceed doesn’t allow ourselves to extract "probability" and confidence interval of whether an implementation respects a large part of the RFC. It should be possible to analyse statistically the results, but the different parameters of our experiment protocol should be reviewed.</P>
<P>\vspace*{-0.3cm}</P>
<P>\subsection{Servers results}</P>
<P>\noindent We present in this section the server results. First, we present the result of \lstinline{quant} and \lstinline{picoquic}. As those two implementations were the ones that McMillan tested for draft 18, we can compare the previous and current results. Then, we move on to the presentations of the results for the 7 other implementations. There is one implementation where no test passed \lstinline{lsquic}. We end by explaining why we couldn't operate Ivy on it.</P>
<P><BR>%\newpage<BR>\noindent Here is a first overview of the results:</P>
<P>%\vspace*{-0.4cm}</P>
<P>\begin{table}[!h]<BR>\centering<BR>\footnotesize<BR>%\vspace*{-0.6cm}<BR>%\caption{}<BR>%\hspace*{6cm}<BR>%\vspace*{-0.5cm}<BR>\label{tab:my-table}<BR>\begin{tabular}{|c|c|}<BR>\hline<BR>\textbf{quinn}&nbsp;&nbsp;&nbsp; &amp; 1428/1600 \\ \hline<BR>\textbf{mvfst}&nbsp;&nbsp;&nbsp; &amp; 549/1600 \\ \hline<BR>\textbf{picoquic} &amp; 919/1600 \\ \hline<BR>\textbf{quic-go}&nbsp; &amp; 500/1600 \\ \hline<BR>\textbf{aioquic}&nbsp; &amp; 584/1600 \\ \hline<BR>\textbf{quant}&nbsp;&nbsp;&nbsp; &amp; 320/1600 \\ \hline<BR>\textbf{quiche}&nbsp;&nbsp; &amp; 862/1600 \\ \hline<BR>\textbf{lsquic}&nbsp;&nbsp; &amp; 0/1600&nbsp;&nbsp; \\ \hline<BR>\end{tabular}<BR>\caption{Draft 29 server results overview - Passed test ratio}<BR>\end{table}</P>
<P>%\vspace{-0.3cm}</P>
<P>%\newpage<BR>%\noindent And now a more details version:<BR>% Please add the following required packages to your document preamble:</P>
<P>% Please add the following required packages to your document preamble:<BR>% \usepackage{multirow}<BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{multirow}</P>
<P><BR>\vspace{-0.3cm}</P>
<P>%TODO<BR>%TODO resultat aioquic after<BR>%TODO</P>
<P>\newpage<BR>%\vspace*{-1cm}<BR>\noindent And now a more detailed version:<BR>% Please add the following required packages to your document preamble:</P>
<P>% Please add the following required packages to your document preamble:<BR>% \usepackage{multirow}<BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{multirow}</P>
<P>\begin{table}[h!]<BR>\centering<BR>\footnotesize<BR>%\hspace*{-1.5cm}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|l|ccccccc|}<BR>\hline<BR>\multicolumn{1}{|c|}{} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{quinn}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{mvfst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{picoquic}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{quic-go}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{aioquic}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{quant}} &amp;<BR>&nbsp; \textbf{quiche} \\ \hline<BR>\textbf{stream} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 6/100 &amp;<BR>&nbsp; \textbf{56/100} &amp;<BR>&nbsp; \textbf{95/100} &amp;<BR>&nbsp; 18/100 &amp;<BR>&nbsp; 12/100 &amp;<BR>&nbsp; \textbf{97/100} \\ \cline{1-1}<BR>\textbf{max} &amp;<BR>&nbsp; \textbf{97/100} &amp;<BR>&nbsp; 3/100 &amp;<BR>&nbsp; \textbf{47/100} &amp;<BR>&nbsp; 41/100 &amp;<BR>&nbsp; \textbf{27/100} &amp;<BR>&nbsp; 58/100 &amp;<BR>&nbsp; 96/100 \\ \cline{1-1}<BR>\textbf{reset\_stream} &amp;<BR>&nbsp; \textbf{34/100} &amp;<BR>&nbsp; 7/100 &amp;<BR>&nbsp; \textbf{61/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{24/100} &amp;<BR>&nbsp; 5/100 &amp;<BR>&nbsp; \textbf{98/100}&nbsp; \\ \cline{1-1}<BR>\textbf{connection\_close} &amp;<BR>&nbsp; \textbf{83/100} &amp;<BR>&nbsp; 37/100&nbsp; &amp;<BR>&nbsp; \textbf{81/100} &amp;<BR>&nbsp; \textbf{78/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 40/100 &amp;<BR>&nbsp; \textbf{100/100}&nbsp; \\ \cline{1-1}<BR>\textbf{test\_unkown} &amp;<BR>&nbsp; \textbf{96/100} &amp;<BR>&nbsp; \textbf{99/100} &amp;<BR>&nbsp; 99/100 &amp;<BR>&nbsp; \textbf{96/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 100/100&nbsp; \\ \cline{1-1}<BR>\textbf{tp\_limit\_newcoid} &amp;<BR>&nbsp; \textbf{80/100} &amp;<BR>&nbsp; 6/100 &amp;<BR>&nbsp; \textbf{50/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{24/100} &amp;<BR>&nbsp; 5/100 &amp;<BR>&nbsp;\textbf{93/100}&nbsp; \\ \cline{1-1}<BR>\textbf{blocked\_error} &amp;<BR>&nbsp; \textbf{70/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 9/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{100/100}&nbsp; \\ \cline{1-1}<BR>\textbf{tp\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{tp\_acticoid\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{token\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{98/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{99/100}&nbsp; \\ \cline{1-1}<BR>% \textbf{stop\_sending} &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; \textit{\textbf{8/100}} &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; \textit{\textbf{12/100}} &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{no\_icid} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{handshake\_done\_error} &amp;<BR>&nbsp; \textbf{99/100} &amp;<BR>&nbsp; 2/100 &amp;<BR>&nbsp; \textbf{89/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{86/100} &amp;<BR>&nbsp; 2/100 &amp;<BR>&nbsp; \textbf{77/100}&nbsp; \\ \cline{1-1}<BR>\textbf{double\_tp\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{65/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{92/100} &amp;<BR>&nbsp; \textbf{3/100} &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>&nbsp;\textbf{accept\_maxdata} &amp;<BR>&nbsp; \textbf{91/100} &amp;<BR>&nbsp; \textbf{12/100} &amp;<BR>&nbsp; \textbf{50/100} &amp;<BR>&nbsp; \textbf{67/100} &amp;<BR>&nbsp; \textbf{43/100} &amp;<BR>&nbsp; \textbf{21/100} &amp;<BR>&nbsp; \textbf{96/100}&nbsp; \\ \cline{1-1}<BR>&nbsp; <BR>%&nbsp;&nbsp; \textbf{retirecoid\_error (torecheck)} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; \textbf{3/100} &amp;<BR>%&nbsp;&nbsp; \textbf{52/100} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>&nbsp; <BR>&nbsp; \textbf{stop\_sending} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 4/100&nbsp; &amp;<BR>&nbsp; \textbf{48/100} &amp;<BR>&nbsp; \textbf{33/100} &amp;<BR>&nbsp; \textbf{33/100} &amp;<BR>&nbsp; 8/100&nbsp; &amp;<BR>&nbsp; \textbf{96/100} \\ \cline{1-1}<BR>&nbsp; <BR>&nbsp; \textbf{ext\_min\_ack\_delay} &amp;<BR>&nbsp; \textbf{78/100} &amp;<BR>&nbsp; \textbf{10/100} &amp;<BR>&nbsp; \textbf{38/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{26/100} &amp;<BR>&nbsp; \textbf{6/100} &amp;<BR>&nbsp; \textbf{98/100}&nbsp;&nbsp; \\ \hline<BR>\end{tabular} <BR>}<BR>\caption{Draft 29 server results detailed&nbsp; - Passed test ratio}<BR>%\caption{Server results}<BR>\end{table}</P>
<P>&nbsp;</P>
<P>%\vspace*{-1cm}<BR>\subsubsection*{Evolution from draft 18 to draft 29}</P>
<P>%\newpage<BR>\noindent We now present a more detailed version containing the number of errors per test and compare the evolution with draft 18 of the McMillan paper with draft 29. We only present the tests that McMillan already defined to see the progression. A complete version of these results is present in the appendix.</P>
<P>\begin{table}[h!]<BR>\centering<BR>\footnotesize<BR>%\caption{\lstinline{PicoQUIC}}<BR>% \hspace*{-2cm}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{llr}<BR>\multicolumn{1}{c}{\textbf{Test}}&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{Error code}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{\#}} \\<BR>test\_stream&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$\_generating \&amp; $\sim$queued\_non\_ack(scid) -&gt; ack\_credit(scid) &gt; 0;&nbsp; # [5]&nbsp; &amp; 242&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; Ran out of values for type cid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$path\_challenge\_pending(dcid,f.data);&nbsp; &amp; 24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; bind failed: Address already in use&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_seen(dcid) -&gt; hi\_non\_probing\_endpoint(dcid,dst);&nbsp; # [10]&nbsp;&nbsp; &amp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{390/1000}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>test\_max&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require stream\_id\_allowed(dcid,f.id);&nbsp; # [4] &amp; 219&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; Ran out of values for type cid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$path\_challenge\_pending(dcid,f.data);&nbsp; &amp; 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$\_generating \&amp; $\sim$queued\_non\_ack(scid) -&gt; ack\_credit(scid) &gt; 0;&nbsp; # [5]&nbsp;&nbsp; &amp; 12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_total\_data(the\_cid) &gt; 0; &amp; 31&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_seen(dcid) -&gt; hi\_non\_probing\_endpoint(dcid,dst);&nbsp; # [10]&nbsp;&nbsp; &amp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; bind failed: Address already in use&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{380/1000} \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>test\_connection\_close &amp; Ran out of values for type cid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 412&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$\_generating \&amp; $\sim$queued\_non\_ack(scid) -&gt; ack\_credit(scid) &gt; 0;&nbsp; # [5]&nbsp;&nbsp; &amp; 53&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$conn\_closed(scid);&nbsp; # [2]&nbsp; &amp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; bind failed: Address already in use&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$draining\_pkt\_sent(scid) \&amp; queued\_close(scid);&nbsp;&nbsp; &amp; 249&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_seen(dcid) -&gt; hi\_non\_probing\_endpoint(dcid,dst);&nbsp; # [10]&nbsp;&nbsp; &amp; 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_total\_data(the\_cid) &gt; 0; &amp; 177&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$conn\_closed(scid);&nbsp; # [8]&nbsp; &amp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{899/1000} <BR>\end{tabular} }<BR>\caption{\lstinline{picoquic} draft 18 - Number of errors}<BR>\end{table}<BR>\newpage<BR>\begin{table}[h!]<BR>\centering<BR>\footnotesize<BR>%\caption{\lstinline{PicoQUIC}}<BR>%\hspace*{-1.5cm}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{llr}<BR>\multicolumn{1}{c}{\textbf{Test}}&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{Error code}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{\#}} \\<BR>test\_stream&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_seen(dcid) -\textgreater hi\_non\_probing\_endpoint(dcid,dst); &amp; 41&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; Handshake not complete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{44/100}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>test\_max&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_seen(dcid) -\textgreater hi\_non\_probing\_endpoint(dcid,dst); &amp; 46&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; Handshake not complete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{53/100}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>test\_connection\_close&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; Handshake not completed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require conn\_seen(dcid) -\textgreater hi\_non\_probing\_endpoint(dcid,dst); &amp; 17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{19/100}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>\end{tabular}}<BR>\caption{\lstinline{picoquic} draft 29 - Number of errors}<BR>\end{table}</P>
<P>\vspace*{-0.5cm}</P>
<P>&nbsp;</P>
<P><BR>% \noindent We can&nbsp; compare the evolution with draft 18 of the McMillan paper: \todo{JF replace with failed ratio}</P>
<P>&nbsp;</P>
<P>% \begin{table}[h!]<BR>% \centering<BR>% \caption{draft 18 - Passed test ratio}<BR>% \small<BR>% \label{tab:my-table}<BR>% \begin{tabular}{|l|cc|}<BR>% \hline<BR>% \multicolumn{1}{|c|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c|}{\textbf{picoquic}} &amp; \textbf{quant} \\ \hline<BR>% \textbf{quic\_server\_test\_stream}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 614/1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 362/1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{1-1}<BR>% \textbf{quic\_server\_test\_max}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 682/1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 306/1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{1-1}<BR>% \textbf{quic\_server\_test\_connection\_close} &amp; 92/1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 78/1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \end{tabular}<BR>% \end{table}<BR>% \begin{table}[h!]<BR>% \centering<BR>% \caption{draft 29 - Passed test ratio} <BR>% \small<BR>% \label{tab:my-table}<BR>% \begin{tabular}{|l|cc|}<BR>% \hline<BR>% \multicolumn{1}{|c|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c|}{\textbf{picoquic}} &amp; \textbf{quant} \\ \hline<BR>% \textbf{quic\_server\_test\_stream}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 56/100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 12/100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{1-1}<BR>% \textbf{quic\_server\_test\_max}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 47/100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 58/100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{1-1}<BR>% \textbf{quic\_server\_test\_connection\_close} &amp; 81/100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 40/100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \end{tabular}<BR>% \end{table}<BR>\noindent Only by looking at the number of the test passed and failed we cannot conclude that \lstinline{picoquic} evolves well. However, when we look at the number of different errors, we can see fewer errors. We can see all the corrections made, for example with the migration and the \lstinline{PATH_CHALLENGE} management. We conclude that we should not consider the ratio of tests that passed with those that failed. This is not very convenient in this situation since some features are not well implemented for some implementations and occur in every test such as the migration. It can cause high differences in terms of results. For example, with \lstinline{aioquic}, when we disable the migration the implementation has a much better score if we only consider the successful&nbsp; tests. We can also see that the distribution of errors changed from draft 18 to draft 29. For example, the ratio \lstinline{conn_seen(dcid)-&gt;hi_non_probing_endpoint(dcid,dst)} errors increased. An explanation is given in the \lstinline{picoquic} section.<BR>%\todo{dire que au final les resultats stat peuvent montrer le niveau d'avancement des implementations -&gt; Conclusion} \\</P>
<P>%The ratio is better for draft 29. We can conclude it is much more conforming to the specification.&nbsp; We can reach the same conclusion with quant. However, the evolution is less visible.\\ \todo{not true anymore, this should reflect the problem in this interpretation since we still have less different error}</P>
<P>\noindent It is important to note that these global results can induce false conclusions because all the errors don't have the same weight. Also, these results should be analysed while reading the analysis of  traces that we have put for each implementation. Some errors are for example not critical but reduce strongly the ratio of succeeded test for one implementation. On the other side, one implementation with critical but not frequent errors have a better ratio. \\ </P>
<P><BR>&nbsp;\noindent What we should consider is more the type of&nbsp; error and the number of different errors and how they  linked to each other. For example, we know that some errors are only related to the migration so debugging this part will remove quite a lot of errors from some implementations. %\todo{check}</P>
<P><BR>%OLD RESULTS : However we cannot conclude anything with \lstinline{quant} since we always get the same error, no test succeeds. If we remove this condition for the quant implementation, the handshake never complete. Moreover if we remember the errors we get before, they were much more present.\\</P>
<P>\subsubsection*{General observations}</P>
<P>\noindent We can also observe from these results that some properties are well respected by every tested implementation. For example, the test that checks the behaviour of the server in case the client initiates the connection with a non-zero-length token is nearly always respected for the tested implementation.\\</P>
<P>\noindent We can also see that concerning the transport parameter and error tests,  either the feature has been correctly implemented or either not implemented at all. For example, with the test \lstinline{quic_server_test_tp_error}, an endpoint should throw a \lstinline{TRANSPORT_PARAMETER_ERROR} if it received a invalid value. Some implementations fully respect this rule while others are never sending an error. We have an exception with the \lstinline{mvfst} implementation where  the error is only sent from time to time. \\ %Except for \lstinline{mvfst} </P>
<P>\noindent With these tests, we also found an interesting question about what error should be triggered if many errors are possible for a  situation? For example, with the test where we send \lstinline{unknown_frame} to the server, in the case where we permit generation at any encryption level, what error should we trigger ? A \lstinline{FRAME_ENCODING_ERROR} or a \lstinline{PROTOCOL_VIOLATION} error ? The draft said that in such situation we should send the most "appropriate" error code in the frame that signals the error. Here again this is  subjective and the choice taken by the implementation might influence the application over QUIC.\\</P>
<P>\noindent Finally, remember that we voluntarily put an ambiguous test for the \lstinline{quic_server} \lstinline{_tests _double_tp_error} test where we are not sure that we should throw an error or  not completing the handshake. The results seem to confirm that the rule is ambiguous. Either the implementations didn't implement this property or they interpreted it according to the two possible valid ending. Other ambiguities in the draft has been found, but we explain them in detail hereafter.</P>
<P>\vspace{-0.3cm}</P>
<P>%\subsubsection{Errors founds}</P>
<P>&nbsp;&nbsp;&nbsp; \subsubsection{\lstinline{aioquic}}<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \begin{figure}[!h]&nbsp;&nbsp; \todo{update all images}<BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_aioquic_in_test_quic_server_test_stream.png}<BR>%&nbsp;&nbsp; \label{fig:sub2}<BR>% \end{subfigure}<BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_aioquic_in_test_quic_server_test_unkown.png}<BR>%&nbsp;&nbsp; \label{fig:sub3}<BR>% \end{subfigure}<BR>% \end{figure}</P>
<P>%\vspace{-0.8cm}</P>
<P>&nbsp;&nbsp;&nbsp; \noindent To prove that Ivy can be used to find and correct errors. We decide to choose an implementation, find the errors then correct them when it is possible.\\<BR>&nbsp;&nbsp;&nbsp; %We decide to fix some of the errors found which will show you how Ivy can be used to detect and then fix errors in the implementation.<BR>&nbsp;&nbsp;&nbsp; \noindent Our choice for this task is \lstinline{aioquic} since this implementation is in Python and we master this language so correcting errors is fast.&nbsp; You can find a complete table about the errors found at \ref{tab:aio-server}.\\<BR>&nbsp;&nbsp;&nbsp; %\todo{show coverage after fix for stream test}<BR>&nbsp;&nbsp;&nbsp; <BR>\noindent (1) A  simple but good implementation. One big problem usually makes our general tests to end into a failed state. It is that \lstinline{aioquic} returns us a \lstinline{PROTOCOL_VIOLATION} (\lstinline{0xa}) error indicating that the data in the \lstinline{PATH_CHALLENGE} and \lstinline{PATH_RESPONSE} frame are not matching. This happens during the client migration which is an important feature of QUIC.\\</P>
<P>\noindent To recall the migration concept, the client decide at some moment after the handshake to change its address, represented by a pair of IP address and port number. The connection to the server should be able to survive this event thanks to connection ID and other techniques. However for security reasons, i.e. anti-spoofing source address measure, the server sends in a frame a challenge of unpredictable and encrypted data made of 8 bytes \lstinline{PATH_CHALLENGE}  to the client. Then the client should validate this challenge by responding with a \lstinline{PATH_RESPONSE} frame containing the same data.\\</P>
<P>\noindent The problem is that \lstinline{aioquic} should not throw an error since the data are  matching. We based our reasoning on the following RFC rule that state:</P>
<P>%\vspace{-0.3cm}</P>
<P>\epigraph{\textit{"A new address is considered valid when a \lstinline{PATH_RESPONSE} frame is<BR>&nbsp; received that contains the data that was sent in a previous<BR>&nbsp; \lstinline{PATH_CHALLENGE}.&nbsp; Receipt of an acknowledgment for a packet containing<BR>&nbsp; a \lstinline{PATH_CHALLENGE} frame is not adequate validation, since the<BR>&nbsp; acknowledgment can be spoofed by a malicious peer.<BR>&nbsp; %\vspace{0.1cm}<BR>&nbsp; \textbf{Note that receipt on a different local address does not result in<BR>&nbsp;&nbsp; path validation failure}, as it might be a result of a forwarded<BR>&nbsp;&nbsp; packet (see Section 9.3.3) or misrouting.&nbsp; It is possible that a<BR>&nbsp;&nbsp; valid \lstinline{PATH_RESPONSE} might be received in the future."}}{Draft 29 of QUIC section 8.5}% \todo{on a removed les graph car on dit avant que faut pas faire de stats en fin de compte}<BR>&nbsp;&nbsp;&nbsp; %\todo{demander si faut les graph pour etre sur}</P>
<P>% \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \textit{"A new address is considered valid when a \lstinline{PATH_RESPONSE} frame is<BR>%&nbsp;&nbsp; received that contains the data that was sent in a previous<BR>%&nbsp;&nbsp; \lstinline{PATH_CHALLENGE}.&nbsp; Receipt of an acknowledgment for a packet containing<BR>%&nbsp;&nbsp; a \lstinline{PATH_CHALLENGE} frame is not adequate validation, since the<BR>%&nbsp;&nbsp; acknowledgment can be spoofed by a malicious peer.}\\<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \vspace{0.3cm}<BR>%&nbsp;&nbsp; \textit{\textbf{Note that receipt on a different local address does not result in<BR>%&nbsp;&nbsp; path validation failure}, as it might be a result of a forwarded<BR>%&nbsp;&nbsp; packet (see Section 9.3.3) or misrouting.&nbsp; It is possible that a<BR>%&nbsp;&nbsp; valid \lstinline{PATH_RESPONSE} might be received in the future."}<BR>% \end{center}</P>
<P>&nbsp; %\vspace*{-0.3cm}<BR>&nbsp; <BR>&nbsp; %\newpage</P>
<P>\noindent Moreover, this problem arises&nbsp; \~50\% and thus affect the result of many of our tests. Next is a network trace highlighting the problem:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>%\caption{TODO}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{lccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{src} &amp;<BR>&nbsp; \multicolumn{1}{c|}{dst} &amp;<BR>&nbsp; \multicolumn{1}{c|}{Protocol} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4987} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; QUIC &amp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1322 Handshake, DCID=0000000000000001, SCID=0191cbd30002ee7d, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1111 Handshake, DCID=0000000000000001, SCID=0191cbd30002ee7d, PKN: 2, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1322 Handshake, DCID=0000000000000001, SCID=0191cbd30002ee7d, PKN: 4, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 109 Handshake, DCID=0000000000000001, SCID=0191cbd30002ee7d, PKN: 5, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4987} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 158 Handshake, DCID=0191cbd30002ee7d, SCID=0000000000000001, PKN: 15, CRYPTO, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 98 Protected Payload (KP0), DCID=0000000000000001, PKN: 6, DONE, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4987} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=0191cbd30002ee7d, PKN: 8, STREAM(4), PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 75 Protected Payload (KP0), DCID=0000000000000001, PKN: 7, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 82 Protected Payload (KP0), DCID=0000000000000001, PKN: 8, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 71 Protected Payload (KP0), DCID=0000000000000001, PKN: 9, PING, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4988} &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 1274 Protected Payload (KP0), DCID=0191cbd30002ee7d, PKN: 12, ACK, ACK, STREAM(8), PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{4988} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 113 Protected Payload (KP0), DCID=0000000000000001, PKN: 10, ACK, DONE, PC, NCI \\ \hline<BR>\multicolumn{4}{|l|}{PATH\_CHALLENGE(0a7108f0135b0b18)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{4988} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 82 Protected Payload (KP0), DCID=0000000000000001, PKN: 11, STREAM(8) \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4987} &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 1274 Protected Payload (KP0), DCID=0191cbd30002ee7d, PKN: 32, PR, ACK, PADDING \\ \hline<BR>\multicolumn{4}{|l|}{PATH\_RESPONSE(0a7108f0135b0b18)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{4988} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 106 Protected Payload (KP0), DCID=0000000000000001, PKN: 12, CC \\ \hline<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{CONNECTION\_CLOSE (Transport) Error code: PROTOCOL\_VIOLATION}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{2-2}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{} &amp; \multicolumn{2}{l|}{Frame Type: CONNECTION\_CLOSE (Transport) (0x000000000000001c)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{} &amp; \multicolumn{2}{l|}{Error code: PROTOCOL\_VIOLATION (10)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{} &amp; \multicolumn{2}{l|}{Frame Type: 27}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{} &amp; \multicolumn{2}{l|}{Reason phrase Length: 33}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{} &amp; \multicolumn{2}{l|}{Reason phrase: Response does not match challenge}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{3-4} <BR>\end{tabular}}<BR>\end{table}</P>
<P>&nbsp;%\newpage<BR>&nbsp;&nbsp;&nbsp; \noindent We have fixed this problem considering the first rule only and created a pull request. As you see the problem do not arise anymore in the fixed version of \lstinline{aioquic}: <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; %PICOQUIC transport paratemre ok quand pas la mais pas ok quand mauvaise valeur<BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; <BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{2245&nbsp;127.0.0.1&nbsp;127.0.0.1&nbsp;70.051730451&nbsp;4443&nbsp;4988&nbsp;QUIC&nbsp;91&nbsp;Protected Payload (KP0), DCID=0000000000000000, PKN: 16, ACK, PING, STREAM(4)}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan} <BR>4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; QUIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Initial, DCID=0000000000000001, SCID=0000000000000000, PKN: 6, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1322 Handshake, DCID=0000000000000000, SCID=af607353e17bdead, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1111 Handshake, DCID=0000000000000000, SCID=af607353e17bdead, PKN: 2, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1322 Handshake, DCID=0000000000000000, SCID=af607353e17bdead, PKN: 4, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 109 Handshake, DCID=0000000000000000, SCID=af607353e17bdead, PKN: 5, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}173 Handshake, DCID=af607353e17bdead, SCID=0000000000000000, PKN: 12, CRYPTO, ACK,\\&nbsp; ACK, ACK, PADDING\end{tabular} \\ \rowcolor{lightgreen} <BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 98 Protected Payload (KP0), DCID=0000000000000000, PKN: 6, DONE, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\&nbsp; \rowcolor{LightCyan}<BR>4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 107 Protected Payload (KP0), DCID=f5d90b5172d826f1, PKN: 13, STREAM(4), PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\&nbsp; \rowcolor{lightgreen} <BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 78&nbsp; Protected Payload (KP0), DCID=0000000000000000, PKN: 7, PC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\&nbsp; \rowcolor{lightgreen} <BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 75 Protected Payload (KP0), DCID=0000000000000000, PKN: 8, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\&nbsp; \rowcolor{lightgreen} <BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 82 Protected Payload (KP0), DCID=0000000000000000, PKN: 9, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\&nbsp; \rowcolor{lightgreen} <BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 71 Protected Payload (KP0), DCID=0000000000000000, PKN: 10, PING, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 121 Protected Payload (KP0), DCID=af607353e17bdead, PKN: 15, PR, ACK, STREAM(12), PADDING \\ \rowcolor{lightgreen} <BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 104 Protected Payload (KP0), DCID=0000000000000000, PKN: 11, ACK, DONE, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen} <BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 82 Protected Payload (KP0), DCID=0000000000000000, PKN: 12, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen} <BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 71 Protected Payload (KP0), DCID=0000000000000000, PKN: 13, PING, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 108 Handshake, DCID=af607353e17bdead, SCID=0000000000000000, PKN: 29, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen} <BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 71 Protected Payload (KP0), DCID=0000000000000000, PKN: 14, PING, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen} <BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; 71 Protected Payload (KP0), DCID=0000000000000000, PKN: 15, PING, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}142 Protected Payload (KP0), DCID=f5d90b5172d826f1, PKN: 32, ACK, STREAM(16), ACK, ACK, \\ STREAM(28), PADDING\end{tabular} \\ \rowcolor{lightgreen} <BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 91 Protected Payload (KP0), DCID=0000000000000000, PKN: 16, ACK, PING, STREAM(4) \\<BR>\multicolumn{1}{|l}{..}&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp; \multicolumn{1}{l}{} &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table}</P>
<P><BR>&nbsp;&nbsp;&nbsp; \noindent This error is probably due to a change in the draft. Before draft 20, we could only respond to the&nbsp; \lstinline{PATH_RESPONSE} frame from the network path the \lstinline{PATH_CHALLENGE} was sent. Since this feature of \lstinline{aioquic} has not changed for a long time, this could explain the error.\\</P>
<P>&nbsp;&nbsp;&nbsp; \noindent While investigating, we found in the latest draft new ambiguity about this subject. These rules which do not change from draft 29:<BR>&nbsp;&nbsp;&nbsp; %\vspace*{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{\textit{"Path validation succeeds when a \lstinline{PATH_RESPONSE} frame is received that<BR>&nbsp; contains the data that was sent in a previous \lstinline{PATH_CHALLENGE} frame.<BR>&nbsp; \textbf{A \lstinline{PATH_RESPONSE} frame received on any network path validates the path<BR>&nbsp; on which the \lstinline{PATH_CHALLENGE} was sent.}"}}{Draft 34 of QUIC section 8.2.3. [R1]}<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \textit{"Path validation succeeds when a \lstinline{PATH_RESPONSE} frame is received that<BR>%&nbsp;&nbsp; contains the data that was sent in a previous \lstinline{PATH_CHALLENGE} frame.<BR>%&nbsp;&nbsp; \textbf{A \lstinline{PATH_RESPONSE} frame received on any network path validates the path<BR>%&nbsp;&nbsp; on which the \lstinline{PATH_CHALLENGE} was sent.}"}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \noindent&nbsp; One server could think that the path validation is considered as successful when it received the \lstinline{PATH_RESPONSE} frame that contains the data of the previously sent \lstinline{PATH_CHALLENGE} frame. No matter from which network path the response is sent.\\ <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace*{-0.4cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; \noindent However,&nbsp; the draft add a new indication that adds some ambiguity. The same draft state :<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace*{-0.5cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{\textit{"On receiving a \lstinline{PATH_CHALLENGE} frame, an endpoint MUST respond by<BR>&nbsp;&nbsp; echoing the data contained in the \lstinline{PATH_CHALLENGE} frame in a<BR>&nbsp;&nbsp; \lstinline{PATH_RESPONSE} frame.&nbsp; An endpoint MUST NOT delay transmission of a<BR>&nbsp;&nbsp; packet containing a \lstinline{PATH_RESPONSE} frame unless constrained by<BR>&nbsp;&nbsp; congestion control.&nbsp; \textbf{A \lstinline{PATH_RESPONSE} frame MUST be sent on the network path where the \lstinline{PATH_CHALLENGE} was received}.&nbsp; This ensures that path validation by a<BR>&nbsp;&nbsp; peer only succeeds if the path is functional in both directions.<BR>&nbsp;&nbsp; \textbf{This requirement MUST NOT be enforced} by the endpoint that initiates<BR>&nbsp;&nbsp; path validation as that would enable an attack on migration;"}}{Draft 34 of QUIC section 8.2.2. [R2]}<BR>&nbsp;&nbsp; <BR>&nbsp; % \newpage<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; %\epigraph{}{Draft 34 of QUIC section 8.2.2. [R2]}<BR>&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \textit{"On receiving a \lstinline{PATH_CHALLENGE} frame, an endpoint MUST respond by<BR>%&nbsp;&nbsp; echoing the data contained in the \lstinline{PATH_CHALLENGE} frame in a<BR>%&nbsp;&nbsp; \lstinline{PATH_RESPONSE} frame.&nbsp; An endpoint MUST NOT delay transmission of a<BR>%&nbsp;&nbsp; packet containing a \lstinline{PATH_RESPONSE} frame unless constrained by<BR>%&nbsp;&nbsp; congestion control.}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \vspace{0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \textit{\textbf{A \lstinline{PATH_RESPONSE} frame MUST be sent on the network path where the<BR>%&nbsp;&nbsp; \lstinline{PATH_CHALLENGE} was received}.&nbsp; This ensures that path validation by a<BR>%&nbsp;&nbsp; peer only succeeds if the path is functional in both directions.<BR>%&nbsp;&nbsp; \textbf{This requirement MUST NOT be enforced} by the endpoint that initiates<BR>%&nbsp;&nbsp; path validation as that would enable an attack on migration; see<BR>%&nbsp;&nbsp; Section 9.3.3."}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp; \noindent&nbsp; Even for these rules, we found at least two ways to interpret it:<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \begin{enumerate}<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \item<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \end{enumerate}<BR>&nbsp;&nbsp;&nbsp; % \vspace*{-0.5cm}<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; \noindent&nbsp; We could interpret both rules in a way that makes sense. The first rule states that you only need a valid \lstinline{PATH_RESPONSE} and \lstinline{PATH_CHALLENGE} whatever the path. It means that the \lstinline{PATH_CHALLENGE} can be sent on the original network path or the new one. The second rule states that the \lstinline{PATH_RESPONSE} frame MUST be sent on the network path where the \lstinline{PATH_CHALLENGE} was received. The combination of both rules could mean that if you send a \lstinline{PATH_CHALLENGE} on the original path, the \lstinline{PATH_RESPONSE} should be sent from this original path and the validation is valid. The second option would be to send \lstinline{PATH_CHALLENGE} on the migrated network path and we expect a \lstinline{PATH_RESPONSE} that come from this migrated network path. If it is not the case, it would be invalid. \\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \noindent We can see one problem of the RFC. If we interpret that rule 1 (R1) as a contradiction of rule 2 (R2) and this property will be impossible to implement and to verify. If not, the rule 1 shouldn't be present in the draft as the rule 2 already imply it. The rule 1 only put more ambiguity.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent While looking at the evolution of the draft, we understand why this error happens. Migration is a sensitive feature in \lstinline{QUIC}. The rules about it changed in many drafts between versions 19 and 28. Even in the latest draft (34), the rules changed.  It is possible that modifying the rules introduced some contradictions with other parts&nbsp;of the RFC. The migration is involved in many potential security breaches of QUIC. It is important that those rules are stabilized, unambiguous and respected. \\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.5]{plot/errors_for_aioquic_in_test_quic_server_test_stream.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}</P>
<P><BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (2) We can also see that \lstinline{aioquic} is probably lacking the management of errors in the transport parameters since no errors were reported. One hypothesis of the discarding of all packets is that no check is done. A code inspection should be done to confirm this. It can also be shown that for the "ambiguous" test \lstinline{quic_server_test_double} \lstinline{_tp_error}, it decides to discard the packet.\\ <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (3)&nbsp; Another problem arises during migration. We did not fix it :<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require conn_seen(dcid)}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{-&gt; hi_non_probing_endpoint(dcid,dst);}<BR>&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; %\begin{enumerate}</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent This indicates that the server didn't send packets to an address/endpoint from which the highest packet number of non-probing packets has been received.<BR>&nbsp;&nbsp;&nbsp; </P>
<P>%&nbsp;&nbsp; \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \todo{we suppose this is the rule McMillan wanted to refer to}<BR>% \end{center}</P>
<P>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp; QUIC &amp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1322 Handshake, DCID=0000000000000001, SCID=21500f522a60b7b2, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1111 Handshake, DCID=0000000000000001, SCID=21500f522a60b7b2, PKN: 2, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1322 Handshake, DCID=0000000000000001, SCID=21500f522a60b7b2, PKN: 4, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 109 Handshake, DCID=0000000000000001, SCID=21500f522a60b7b2, PKN: 5, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}163 Handshake, DCID=21500f522a60b7b2, SCID=0000000000000001, PKN: 6, CRYPTO, \\ ACK, PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 98 Protected Payload (KP0), DCID=0000000000000000, PKN: 6, DONE, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4987 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 112 Protected Payload (KP0), DCID=0f2380bbb53779ee, PKN: 1, STREAM(4), ACK, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 78 Protected Payload (KP0), DCID=0000000000000001, PKN: 7, PC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table}<BR>\noindent As you can see in this example when we start the migration, we send a short header packet with a sequence number of 1 which is not erroneous since we change of connection ID. This is the random part of Ivy that chooses that in this case. Using the preceding rule \lstinline{aioquic}&nbsp; should have sent us the packet to the first address since we received the highest-numbered packet. One hypothesis is that \lstinline{aioquic} is confused since we migrate but this is the result of the ambiguity of the draft. In Ivy, we consider this RFC rule:</P>
<P>&nbsp;&nbsp;&nbsp; \epigraph{ "\textit{An endpoint only changes the address that it sends packets to in response to the highest-numbered non-probing packet.&nbsp; This ensures that an endpoint does not send packets to an old peer address in the case that it receives reordered packets}."}{Draft 29 of QUIC section 9.3.}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent This rule indicates that we should send the packet to the highest-numbered non-probing packets. As there is no indication about the encryption level to consider, we used the highest-numbered non-probing packet among all possible. Maybe that since migration is only allowed after the handshake complete, then we should consider only the encryption level for the 0-RTT Protected or short header packet but this is not explicitly written.\\</P>
<P>\noindent However, in the same paragraph but presented before, we can also find the following indication:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{ "\textit{Receiving a packet from a new peer address containing a non-probing frame indicates that the peer has migrated to that address. In response to such a packet, an endpoint MUST start sending subsequent packets to the new peer address and MUST initiate path validation (Section 8.2) to verify the peer's ownership of the unvalidated address.}."}{Draft 29 of QUIC section 9.3.}<BR>&nbsp;&nbsp;&nbsp; <BR>\noindent&nbsp; If we use this rule then we must send responses of non-probing frame to the new peer address. Now we ask the question: Why in the same paragraph, these two rules seems to enter in contraction when we consider them in pairs ? What to do if the highest-numbered non-probing packet is received on the old peer address ?\\%\todo{add more ?}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; <BR>&nbsp;<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (4) One last note about \lstinline{aioquic} is that we observed that the \lstinline{qlogs} are usually not working, or at least for the version we tested. For example, we have launched 30&nbsp; local tests and get only two \lstinline{.qlog} files. This indicates again that this implementation is lacking some features including basic ones.</P>
<P>&nbsp;<BR>\vspace{-0.3cm}<BR>&nbsp;\subsubsection{\lstinline{quinn}} % \todo{PROTOCOL VIOLATION instead of frame encoding error todo and to fix}<BR>&nbsp;% This implementation is one of the best implementation in term of error in the sens that from our perspective, it trigger nearly no errors. You check that in the following table \ref{tab:quinn-server}.\\</P>
<P>\noindent (1) The first error is again linked to migration. We can see that we get a requirement that fails indicating that we already have a pending \lstinline{path_challenge} frame with the same data/challenge.&nbsp; The Ivy rule that failed and the trace for more detail: %\footnote{of our 140th test}</P>
<P>\vspace*{-0.3cm}<BR>\begin{center}<BR>&nbsp;&nbsp;&nbsp; \lstinline{require ~path_challenge_pending(dcid,f.data)}<BR>\end{center}</P>
<P>\vspace{-0.3cm}</P>
<P>&nbsp;&nbsp;&nbsp; <BR>% \begin{lstlisting}[<BR>%&nbsp;&nbsp;&nbsp;&nbsp; basicstyle=\footnotesize, %or \small or \footnotesize etc.<BR>%&nbsp;&nbsp;&nbsp;&nbsp; style=myCustomIvyStyleLogs<BR>%&nbsp;&nbsp;&nbsp;&nbsp; ]<BR>% &lt; recv_packet(<BR>%&nbsp;&nbsp;&nbsp;&nbsp; {protocol:udp,addr:0x7f000001,port:0x115b},<BR>%&nbsp;&nbsp;&nbsp;&nbsp; {protocol:udp,addr:0x7f000001,port:0x137c},<BR>%&nbsp;&nbsp;&nbsp;&nbsp; {ptype:one_rtt,pversion:0,dst_cid:1,src_cid:0,token:[],seq_num:0x4,<BR>%&nbsp;&nbsp;&nbsp;&nbsp; payload:[<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.ping:{}},<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.ack:{largest_acknowledged:0x10,ack_delay:0,<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ack_ranges:[{gap:0,ranges:0},{gap:0xe,ranges:0}]}},<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.path_challenge:{data:[0x3,0xa3,0x2c,0xf4,0xa1,0x77,0,0xf]}},<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.padding:{}},&nbsp; ... }]})<BR>&nbsp;&nbsp;&nbsp; <BR>% &lt; recv_packet(<BR>%&nbsp;&nbsp;&nbsp;&nbsp; {protocol:udp,addr:0x7f000001,port:0x115b},<BR>%&nbsp;&nbsp;&nbsp;&nbsp; {protocol:udp,addr:0x7f000001,port:0x137c},<BR>%&nbsp;&nbsp;&nbsp;&nbsp; {ptype:one_rtt,pversion:0,dst_cid:1,src_cid:0,token:[],seq_num:0x5,<BR>%&nbsp;&nbsp;&nbsp;&nbsp; payload:[<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.ping:{}},<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.ack:{largest_acknowledged:0x10,ack_delay:0,<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ack_ranges:[{gap:0,ranges:0},{gap:0xe,ranges:0}]}},<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.path_challenge:{data:[0x3,0xa3,0x2c,0xf4,0xa1,0x77,0,0xf]}},<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {frame.padding:{}}, ... }]})<BR>% \end{lstlisting}&nbsp;&nbsp; </P>
<P><BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cclcl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{l|}{\textbf{time}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline<BR>\rowcolor{LightCyan}4987&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; QUIC &amp; 1274 Initial, DCID=0000000000000000,&nbsp; SCID=0000000000000001, PKN:0, CRYPTO, PADDING&nbsp;&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Handshake, DCID=0000000000000001,&nbsp; SCID=e09f058956664da8, PKN:0, CRYPTO, PADDING \\<BR>\rowcolor{lightgreen}4443 &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 96&nbsp;&nbsp; Protected (KP0) , DCID=0000000000000001, PKN:0, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{LightCyan}4987&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 158&nbsp; Handshake, DCID=e09f058956664da8,&nbsp; SCID=0000000000000001, PKN:0, CRYPTO, PADDING \\<BR>\rowcolor{lightgreen}4443 &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 71&nbsp;&nbsp; Protected (KP0) , DCID=0000000000000001, PKN:1, DONE, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{LightCyan}4988&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Protected (KP0) , DCID=e09f058956664da8, PKN:0, ACK, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Protected (KP0) , DCID=0000000000000001, PKN:2, PC, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{5}{|l|}{PATH\_CHALLENGE (00fe42f00ca1b5a9), PADDING}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\rowcolor{LightCyan}4988&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Protected (KP0) , DCID=e09f058956664da8, PKN:16, PR, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp; 37.38 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Protected (KP0) , DCID=0000000000000001, PKN:3, ACK, PC, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{5}{|l|}{ACK, PATH\_CHALLENGE (03a32cf4a177000f), PADDING}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{1-2} \cline{4-5} <BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp; 40.58 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Protected (KP0) , DCID=0000000000000001, PKN:4, PING, ACK, PC, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{5}{|l|}{PING, ACK, PATH\_CHALLENGE (03a32cf4a177000f), PADDING}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table}</P>
<P>% \begin{table}[h!]<BR>% \centering<BR>% \scriptsize&nbsp;<BR>% %\caption{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755784}<BR>% \label{tab:my-table}<BR>% \hspace*{-2cm}<BR>% \begin{tabular}{|llllll}<BR>% \hline<BR>&nbsp; <BR>% \multicolumn{1}{|c|}{\textbf{}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{time}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{src}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}</P>
<P>% 4379 &amp;<BR>%&nbsp;&nbsp; 125.357 &amp;<BR>%&nbsp;&nbsp; localhost &amp;<BR>%&nbsp;&nbsp; localhost &amp;<BR>%&nbsp;&nbsp; QUIC &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{l|}{1274 Initial, DCID=0000000000000001,&nbsp; SCID=0000000000000000, PKN:0} \\ \rowcolor{LightCyan}<BR>% 4381 &amp; 125.358 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755779} \\ \rowcolor{LightCyan}<BR>% 4387 &amp; 125.471 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755781} \\ \rowcolor{LightCyan}<BR>% 4393 &amp; 125.682 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755783} \\ \hline <BR>% \multicolumn{6}{|l|}{TLSv1.3 Record Layer: Handshake Protocol: Hello Retry Request}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{LightCyan}<BR>% 4394 &amp;<BR>%&nbsp;&nbsp; 125.683 &amp;<BR>%&nbsp;&nbsp; localhost &amp;<BR>%&nbsp;&nbsp; localhost &amp;<BR>%&nbsp;&nbsp; QUIC &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755784} \\ \rowcolor{LightCyan} \hline<BR>% \multicolumn{6}{|l|}{TLSv1.3 Record Layer: Handshake Protocol: Server Hello}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \end{tabular}<BR>% \end{table}</P>
<P>&nbsp;&nbsp;&nbsp; \noindent We can see that the packet is retransmitted since the payload of the packet is the same with only the packet number changing. Moreover, the  time between the two packets seems to confirm this idea. This is not wanted and is due to the computations of Ivy.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent This goes in contradiction with the section "13.3 Retransmission of Information" of the draft 29. It is written that:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{"\textit{A liveness or path validation check using \lstinline{PATH_CHALLENGE} frames is<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sent periodically until a matching \lstinline{PATH_RESPONSE} frame is received<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; or until there is no remaining need for liveness or path<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validation checking. \lstinline{PATH_CHALLENGE} frames \textbf{include a different<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; payload each time they are sent.}}"}{Draft 29 of QUIC section 13.3}<BR>&nbsp;&nbsp;&nbsp; % \begin{center}<BR>&nbsp;&nbsp;&nbsp; %&nbsp;&nbsp;&nbsp;&nbsp; "\textit{A liveness or path validation check using \lstinline{PATH_CHALLENGE} frames is<BR>&nbsp;&nbsp;&nbsp; %&nbsp;&nbsp; sent periodically until a matching \lstinline{PATH_RESPONSE} frame is received<BR>&nbsp;&nbsp;&nbsp; %&nbsp;&nbsp; or until there is no remaining need for liveness or path<BR>&nbsp;&nbsp;&nbsp; %&nbsp;&nbsp; validation checking. \lstinline{PATH_CHALLENGE} frames \textbf{include a different<BR>&nbsp;&nbsp;&nbsp; %&nbsp;&nbsp; payload each time they are sent.}}"<BR>&nbsp;&nbsp;&nbsp; % \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \noindent However, there is also the following general property in the retransmission telling us that:<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \epigraph{"\textit{New frames and packets are used to carry information that is<BR>&nbsp;&nbsp; determined to have been lost.&nbsp; \textbf{In general,} information is sent again<BR>&nbsp;&nbsp; when a packet containing that information is determined to be lost<BR>&nbsp;&nbsp; and sending ceases when a packet containing that information is<BR>&nbsp;&nbsp; acknowledged.}"}{Draft 29 of QUIC section&nbsp; 13.3}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace*{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; %&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp; %&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "\textit{An endpoint MAY send multiple \lstinline{PATH_CHALLENGE} frames to guard against packet loss.&nbsp; However, an endpoint SHOULD NOT send multiple \lstinline{PATH_CHALLENGE} frames in a single packet.}"<BR>&nbsp;&nbsp;&nbsp; %&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \noindent We can conclude that when the implementation noticed that the \lstinline{PATH_CHALLENGE} was lost, it tries to retransmit the frame. Either the developer forgets this feature and the general rule is applied, whether this is a programming mistake. We are currently working on this problem since it seems reachable for us.\\ %When analysing the code we found that when the timer expire, here is what happen:</P>
<P>% -------------------------------------------------------------------------------------------------------------------------------<BR>% TODO: Pour oral <BR>% Let's analyse the code to see if we can correct that. The retransmission timer <BR>% is defined in the migrate function which is activate when the address change: \todo{check if working}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>% \begin{mylistingRust}[enhanced,drop shadow]{quinn-proto/src/connection/mod.rs/migrate()}<BR>% ...<BR>% new_path.challenge = Some(self.rng.gen()); # Random<BR>% new_path.challenge_pending = true;<BR>% let prev_pto = self.pto();</P>
<P>% // Moves new_path into the referenced self.path, returning the previous self.path value.<BR>% let mut prev = mem::replace(&amp;mut self.path, new_path); <BR>% // Don't clobber the original path if the previous one hasn't been validated yet<BR>% if prev.challenge.is_none() {<BR>%&nbsp;&nbsp;&nbsp;&nbsp; prev.challenge = Some(self.rng.gen());&nbsp; # Random<BR>%&nbsp;&nbsp;&nbsp;&nbsp; prev.challenge_pending = true;<BR>%&nbsp;&nbsp;&nbsp;&nbsp; self.prev_path = Some(prev); # prev_path is now defined<BR>% }</P>
<P>% self.timers.set(<BR>%&nbsp;&nbsp;&nbsp;&nbsp; Timer::PathValidation,<BR>%&nbsp;&nbsp;&nbsp;&nbsp; now + 3 * cmp::max(self.pto(), prev_pto),<BR>% );<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{mylistingRust}<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \noindent&nbsp; Here is what happen when this timer expire:<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \begin{mylistingRust}[enhanced,drop shadow]{quinn-proto/src/connection/mod.rs/handle\_timeout()}<BR>% # If timer expire<BR>% Timer::PathValidation =&gt; {&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; debug!("path validation failed");<BR>%&nbsp;&nbsp;&nbsp;&nbsp; if let Some(prev) = self.prev_path.take() {<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # if a prev_path (previous path) is defined <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #&nbsp;&nbsp; set current path to the original one<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.path = prev; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; }<BR>%&nbsp;&nbsp;&nbsp;&nbsp; # reset the fact that we have a pending challenge<BR>%&nbsp;&nbsp;&nbsp;&nbsp; self.path.challenge = None;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; self.path.challenge_pending = false;<BR>% }<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{mylistingRust}<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp; \noindent We know that it can send different payload for the each different challenges validated, we have an example here with the first challenge that is different from the second. So one could think that the problem is directly from the retransmission module of \lstinline{quinn} in \lstinline{quinn-proto/src/connection/spaces.rs}. However, we have seen by analysing the code that the \lstinline{PATH_CHALLENGE} are never retransmit with this module. So there is only the standard function to send this frame that should be bugging. We also know that this function is called after \lstinline{handle_timeout()}:<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp; \begin{mylistingRust}[enhanced,drop shadow]{quinn-proto/src/connection/mod.rs/poll\_transmit()}<BR>% if let Some(ref mut prev_path) = self.prev_path {<BR>%&nbsp;&nbsp;&nbsp;&nbsp; if prev_path.challenge_pending {<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prev_path.challenge_pending = false;<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Error [1]<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; let token = prev_path<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .challenge<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .expect("previous path challenge pending without token");<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; let destination = prev_path.remote;<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; let mut buf = Vec::with_capacity(self.path.mtu as usize);<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; let buf_capacity = self.path.mtu as usize;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; let mut builder = PacketBuilder::new(...)?;<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; trace!("validating previous path with PATH_CHALLENGE {:08x}", token);<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buf.write(frame::Type::PATH_CHALLENGE);<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buf.write(token);<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return Some(Transmit { ... });<BR>%&nbsp;&nbsp;&nbsp;&nbsp; }<BR>% }<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{mylistingRust}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \noindent By looking at the code we think that the error is from the fact that it seems that an old "token".\\<BR>% -------------------------------------------------------------------------------------------------------------------------------<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; %\noindent&nbsp; We can conclude either when the implementation noticed that the \lstinline{PATH_CHALLENGE} was lost and that it has sent a new one. If it is the case, the implementation should not do that as it directly goes in contradiction with the draft. If the implementation directly sends multiple \lstinline{PATH_CHALLENGE} frames, it is not an error \todo{c'est une erreur quand meme non ?}. This shows an ambiguity. We decided to consider it as an error. To be sure of this interpretation, a source code analysis of the implementation is required. \\</P>
<P>&nbsp;&nbsp;&nbsp; \noindent (2) We also have the failure of the following requirement in the QUIC packet specification:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require}&nbsp; $\sim$&nbsp; \lstinline{_generating} $\;$ $\wedge$&nbsp; $\sim$&nbsp; \lstinline{queued_non_ack(scid)}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{-&gt; ack_credit(scid) &gt; 0;&nbsp; # [5]}<BR>&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent Let's explain this requirement by part:<BR>&nbsp;&nbsp;&nbsp; \begin{itemize}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \item&nbsp; $\sim$ \lstinline{queued_non_ack(scid)}: \lstinline{queued_non_ack(C)} is a relation that indicates that one or more of queued frames at aid \lstinline{C} is not a \lstinline{ACK} frame. With the negation rule, we have that we shouldn't have an \lstinline{ACK} frame for \lstinline{C}.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \item&nbsp; \lstinline{ack_credit(scid) &gt; 0}: The relation \lstinline{ack_credit(scid)} is the number of ack-eliciting packet minus the number non-ack-eliciting packet which is any packet containing other frames than \lstinline{ACK}, \lstinline{PADDING}, \lstinline{CONNECTION_CLOSE}<BR>&nbsp;&nbsp;&nbsp; \end{itemize}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent The final relation indicates that the number of non-ack-eliciting packets must not be greater than the number of ack-eliciting packets.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent We can find this in the RFC:</P>
<P>&nbsp;&nbsp;&nbsp; \epigraph{\textit{"Since packets containing only ACK frames are not congestion<BR>&nbsp;&nbsp; controlled, an endpoint MUST NOT send more than one such packet in<BR>&nbsp;&nbsp; response to receiving an ack-eliciting packet."}}{Draft 29 of QUIC section 13.2.1}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \newpage<BR>&nbsp;&nbsp; \noindent We&nbsp; can see in this network trace that we receive an ACK for the same packet twice in a brief time:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; <BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443 &amp; QUIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Handshake, DCID=0000000000000001, SCID=b61bd296f77cd819, PKN: 0, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 96 Protected Payload (KP0), DCID=0000000000000001, PKN: 0, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 163 Handshake, DCID=b61bd296f77cd819, SCID=0000000000000001, PKN: 6, CRYPTO, ACK, PADDING \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 71 Protected Payload (KP0), DCID=0000000000000001, PKN: 1, DONE, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 117 Protected Payload (KP0), DCID=dd2e767c11e3e999, PKN: 2, ACK, ACK, STREAM(4), PADDING&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 76 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, ACK, MS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 116 Protected Payload (KP0), DCID=0000000000000001, PKN: 4, ACK, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 117 Protected Payload (KP0), DCID=b61bd296f77cd819, PKN: 10, ACK, ACK, STREAM(4), PADDING \\ \rowcolor{lightgreen}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 75 Protected Payload (KP0), DCID=0000000000000001, PKN: 5, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4987 &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 107 Protected Payload (KP0), DCID=dd2e767c11e3e999, PKN: 16, STREAM(8), PADDING \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 77 Protected Payload (KP0), DCID=0000000000000001, PKN: 6, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 80 Protected Payload (KP0), DCID=0000000000000001, PKN: 7, ACK, MS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4987 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 120 Protected Payload (KP0), DCID=0000000000000001, PKN: 8, ACK, STREAM(8) \\ \rowcolor{LightCyan}<BR>4987 &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 112 Protected Payload (KP0), DCID=b61bd296f77cd819, PKN: 12, STREAM(8), ACK, PADDING \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 77 Protected Payload (KP0), DCID=0000000000000001, PKN: 9, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4987 &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 107 Protected Payload (KP0), DCID=dd2e767c11e3e999, PKN: 32, STREAM(12), PADDING \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 79 Protected Payload (KP0), DCID=0000000000000001, PKN: 10, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{4}{|l|}{ACK(LA: 32, AD: 0, ACK Cnt:3 ...)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 82 Protected Payload (KP0), DCID=0000000000000001, PKN: 11, ACK, MS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{4}{|l|}{ACK(LA: 32, AD: 0, ACK Cnt:3 ...)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4987 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 122 Protected Payload (KP0), DCID=0000000000000001, PKN: 12, ACK, STREAM(12) \\ \hline<BR>\multicolumn{4}{|l|}{ACK(LA: 32, AD: 0, ACK Cnt:3 ...)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table} </P>
<P>&nbsp;</P>
<P><BR>% \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \textit{"Since packets containing only ACK frames are not congestion<BR>%&nbsp;&nbsp; controlled, an endpoint MUST NOT send more than one such packet in<BR>%&nbsp;&nbsp; response to receiving an ack-eliciting packet."}<BR>% \end{center}<BR>%It is probably because of this that we never managed to send or received \lstinline{STREAM} frames with this implementation.\\</P>
<P>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; %\vspace*{5.4cm}<BR>%\newpage<BR>%<BR>&nbsp;&nbsp; % \newpage<BR>&nbsp; \noindent (3) We pass the test about the management of unknown frames all the time so this feature is well implemented. However, we can also see that sometimes the handshake does not finish and no error is reported. It happens only when we allow generation of \lstinline{unknown_frame} at any time in the execution. This is normal that the handshake does not finish since this frame is not allowed at this time. However, we can ask the question about which rules of the specification to respect in such a case? Is it up to the wishes of the programmers ?\\<BR>&nbsp; <BR>&nbsp; \noindent (4) The last error we get is about the following requirement:<BR>&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require stream_id_allowed(dcid,f.id);}<BR>&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp; This error happens when we test the \lstinline{RESET_STREAM} frame. It means that the stream ID to be reset defined in the \lstinline{RESET_STREAM}/\lstinline{STREAM_STREAM} frame must not exceed the maximum stream ID allowed for the corresponding stream type (or that the stream ID has not been reset).<BR>&nbsp;&nbsp; <BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp; \multicolumn{1}{c|}{\textbf{dst}} &amp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline<BR>\rowcolor{LightCyan}4988&nbsp; &amp; 4443 &amp; QUIC &amp; 1274 Initial, DCID=0000000000000001, SCID=0000000000000000, PKN: 19, CRYPTO, PADDING&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Handshake, DCID=0000000000000000, SCID=70e611f95304c122, PKN: 0, CRYPTO, PADDING \\<BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 96&nbsp;&nbsp; Protected (KP0) , DCID=0000000000000001, PKN:0, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{LightCyan}4988&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 158 Handshake, DCID=70e611f95304c122, SCID=0000000000000000, PKN: 7, CRYPTO, PADDING&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 71 Protected Payload (KP0), DCID=0000000000000000, PKN: 1, DONE, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{LightCyan}4987&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 92 Protected Payload (KP0), DCID=afee30bdbe4a630d, PKN: 6, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Protected Payload (KP0), DCID=0000000000000000, PKN: 2, PC, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{LightCyan}4988&nbsp; &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 103 Protected Payload (KP0), DCID=afee30bdbe4a630d, PKN: 16, PR, RS(4), PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 75 Protected Payload (KP0), DCID=0000000000000000, PKN: 3, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\rowcolor{lightgreen}4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 81 Protected Payload (KP0), DCID=0000000000000000, PKN: 4, ACK, MS, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{4}{|l|}{MS\_BIDI(100); STREAM(4): Length = 0; Stream Data: &lt;MISSING&gt;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table}<BR>&nbsp; <BR>&nbsp; \noindent In this case, we can see that stream 4 is reset but \lstinline{quinn} still sends us a \lstinline{STREAM} frame with ID 4 and without data. It notices the frame since just before it acknowledged the packet (PKN = 16).\\<BR>&nbsp; <BR>&nbsp; For us, \noindent  there is some ambiguity in the stream FSMs. First, even if we suppose that the RFC wanted to have only one initial state, this caused a problem for the one-to-one matching between the sending FSM and the receiving FSM states. This can cause ambiguities. The Figure \ref{fig:Mapping} shows an example of it.&nbsp; %\todo{correct anglais}\todo{explain} %Il faut dire qu'il nous ack le packet 16.<BR>&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \begin{figure}[h!]<BR>&nbsp;&nbsp;&nbsp; \centering<BR>&nbsp;&nbsp;&nbsp; %\hspace*{-1cm}<BR>&nbsp;&nbsp;&nbsp; \includegraphics[scale = 0.65]{image/fsm_ambi.PNG}<BR>&nbsp;&nbsp;&nbsp; \caption{Mapping between FSM}<BR>&nbsp;&nbsp;&nbsp; \label{fig:Mapping}<BR>&nbsp;&nbsp;&nbsp; \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent When we consider the sending FSM and the "Reset Sent" state, we can see that there is only one outgoing state to "Reset Recvd". It is a terminal state. We consider the stream as closed.\\ %\todo{check if true} \\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent When the stream is terminated, and since according to the draft we can only open a&nbsp;stream of the same type in increasing order, we cannot receive another bidirectional stream with 4 as stream ID.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %An endpoint MUST open streams of the same type in increasing order of stream ID.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent For the receiving FSM, when we receive a \lstinline{RESET_STREAM} frame, we enter the "Reset Recvd" state. From this state, there is still the possibility to enter the "Data Recvd" state. It is not the case from the sending FSM. \\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \newpage<BR>&nbsp;&nbsp;&nbsp; \noindent The draft states for&nbsp; \lstinline{RESET_STREAM} frame:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \epigraph{\textit{"An endpoint uses a \lstinline{RESET_STREAM} frame (type=0x04) to abruptly terminate the \textbf{sending part of a stream}. After sending a \lstinline{RESET_STREAM}, an endpoint ceases transmission and retransmission of \lstinline{STREAM} frames on the identified stream.&nbsp; A receiver of \lstinline{RESET_STREAM} can discard any data that it already received on that stream."}}{Draft 29 of QUIC section 19.4. [A1]}<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \vspace*{-0.5cm}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent Now we can see how the FSM are used with the following statement:<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; If you asked yourself, here is what the draft said about the usage of these FSMs: \todo{probably some faults, tocheck}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{\textit{"Unidirectional streams use the applicable state machine directly.<BR>&nbsp; \textbf{Bidirectional streams use both state machines}.&nbsp; For the most part,<BR>&nbsp; the use of these state machines is the same whether the stream is<BR>&nbsp; unidirectional or bidirectional.&nbsp; The conditions for opening a stream<BR>&nbsp; are slightly \textbf{more complex} for a bidirectional stream because the<BR>&nbsp; opening of either the sending or receiving side causes the stream to open<BR>&nbsp; in both directions."}}{Draft 29 of QUIC section 3. [A2]}<BR>&nbsp; <BR>&nbsp; \vspace*{-0.5cm}<BR>&nbsp; <BR>&nbsp; <BR>&nbsp; \noindent To link these rules, with A1 we see that the sending part of a stream is terminated. Then A2 says that bidirectional streams use both state machines. Should we consider that each endpoint uses its version of the FSM since the one-to-one mapping is difficult? Or should we consider that the FSMs are shared between the endpoints?\\<BR>&nbsp; <BR>&nbsp; \noindent If each endpoint uses  different FMSs then which sending FSM to terminate? Receiver or sender? This solution seems possible if we consider the possibility to allow the other endpoint to send data. It would be like if we return in a unidirectional case somehow.\\ %\todo{check ortho}<BR>&nbsp; <BR>&nbsp; %valid if we understand it as we only reset the sending part of the stream to a single endpoint.\\<BR>&nbsp; <BR>&nbsp; \noindent If the endpoints use a shared version of the FSMs, then the termination of the sending part of the FSM should affect both endpoints. This would mean that no data can be sent on the stream. The eventual STREAM frame in flight could still be received. It also seems valid.\\<BR>&nbsp; <BR>&nbsp;% \todo{check why no data if no rule contradict}<BR>&nbsp; <BR>&nbsp; %what does that mean? We can interpret that in at least two ways. The first&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\noindent We can also try to represent the FSM for the bidirectional stream with a mapping to HTTP/2 as it is done in the draft, however this is only one possible mapping among many possible:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp; <BR>&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (5) One last note is that \lstinline{quinn} implements  the errors well in the transport parameter part. For all the concerned tests, it always returns an error even when it is not mandatory, i.e. for the double transport parameter error.<BR>&nbsp; <BR>&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \begin{figure}[!h] <BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_quinn_in_test_quic_server_test_stream.png}<BR>%&nbsp;&nbsp; \label{fig:sub2}<BR>% \end{subfigure}<BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_quinn_in_test_quic_server_test_unkown.png}<BR>%&nbsp;&nbsp; \label{fig:sub3}<BR>% \end{subfigure}<BR>% \end{figure}</P>
<P>% \noindent (5) But except that, this implementation is working well.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \subsubsection{ \lstinline{mvfst}}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;We do not manage to complete the handshake at each run. When we manage to complete it, we still have&nbsp; various errors as we can see in \ref{tab:mvfst-server}.\\ <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace{-0.5cm}<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \begin{figure}[!h] <BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_mvfst_in_test_quic_server_test_stream.png}<BR>%&nbsp;&nbsp; \label{fig:sub2}<BR>% \end{subfigure}<BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_mvfst_in_test_quic_server_test_unkown}<BR>%&nbsp;&nbsp; \label{fig:sub3}<BR>% \end{subfigure}<BR>% \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.5]{plot/errors_for_mvfst_in_test_quic_server_test_stream.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; % %\vspace{-1cm}<BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.5]{plot/errors_for_mvfst_in_test_quic_server_test_unkown.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace*{-0.5cm}<BR>&nbsp;&nbsp;&nbsp; <BR>\noindent&nbsp;&nbsp;&nbsp;&nbsp; (1) The errors are usually similar among the tests. Let's first explain the errors code we get in the \lstinline{connection_close} frame.<BR>&nbsp;&nbsp;&nbsp; \begin{itemize}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \item \lstinline{APPLICATION_ERROR} (0xc): indicating that the application or application protocol caused the connection to be closed.<BR>&nbsp;&nbsp;&nbsp; \end{itemize}<BR>&nbsp;&nbsp;&nbsp; This error seems to appear  a lot, from 10\% to 25\% of the time depending on the test. After investigation, the error message says&nbsp; \lstinline{"Migration disable"}. It comes from our Ivy logs. The implementation logs&nbsp; tell us:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{lstlisting}[<BR>&nbsp;&nbsp;&nbsp; basicstyle=\footnotesize, %or \small or \footnotesize etc.<BR>&nbsp;&nbsp;&nbsp; ]<BR>4472 RecordLayer.cpp:82] Received handshake message Finished<BR>4472 StateMachine-inl.h:41] Transition from ExpectingFinished to AcceptingData<BR>...<BR>633 LogQuicStats.h:60 server&nbsp; onPacketDropped&nbsp; reason=PEER_ADDRESS_CHANGE<BR>633 QuicTransportBase.cpp:1870&nbsp; onNetworkData&nbsp; Migration disabled<BR>633 EchoHandler.h:53 Socket "error=Invalid migration"<BR>633 LogQuicStats.h:91 server&nbsp; onConnectionClose reason=NONE<BR>&nbsp;&nbsp;&nbsp; \end{lstlisting}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; \noindent&nbsp; This is unexpected since according to our Ivy logs, we didn't receive the\\ \lstinline{disable_active_migration} transport parameter and the logs of the implementation only tell us that this is not valid when we perform it. Moreover, the \lstinline{HANDSHAKE_DONE} frame is received so the migration is allowed. A hypothesis is that our "Hello Retry" problem, which we describe in the third point (3), perturbs our specification. <BR>&nbsp;&nbsp; %It is not impossible that our deserializer is wrong since we modified it a lot, however usually when it failed we get a segmentation fault instead due to the resulting strange alignment in the data parsed.\\ JF -&gt; on est peut être pas obligé de dire ca mdr, faudrait qu'on soit sûr<BR>&nbsp;&nbsp;&nbsp; %\noindent (2) Our modified version of Ivy also \lstinline{SegmentationFault}, we know that we have a bug in the interface of the PicoTLS API and Ivy which causes the segmentation fault in a function used for the handshake where we use the wrong inputs. We know that this bugs occurs when the connection ID is zero-length, but also for other unknown situation.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>\begin{table}[h!]<BR>\centering<BR>\scriptsize<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\label{tab:my-table}<BR>\begin{tabular}{|lccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4987} &amp; 4443 &amp; QUIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 10, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480956, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480958, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480961, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480963, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480964, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Initial, DCID=400000d42cb02248, SCID=0000000000000001, PKN: 27, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480965, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 814 Handshake, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480956, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{4}{|l|}{Extension: quic\_transport\_parameters (drafts version) (len=89)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: original\_destination\_connection\_id (len=8)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: initial\_max\_stream\_data\_bidi\_local (len=4) 66560}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: initial\_max\_stream\_data\_bidi\_remote (len=4) 66560}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: initial\_max\_stream\_data\_uni (len=4) 66560}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: initial\_max\_data (len=4) 1048576}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: initial\_max\_streams\_bidi (len=2) 2048}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: initial\_max\_streams\_uni (len=2) 2048}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: max\_idle\_timeout (len=4) 60000 ms}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: ack\_delay\_exponent (len=1)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: max\_udp\_payload\_size (len=2) 1500}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: stateless\_reset\_token (len=16)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: facebook\_partial\_reliability (len=1)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{4}{|l|}{Parameter: initial\_source\_connection\_id (len=8)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480967, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4443} &amp; 4987 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Initial, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480968, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4987} &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 150 Handshake, DCID=400000d42cb02248, SCID=0000000000000001, PKN: 7, CRYPTO, ACK, PADDING \\ \rowcolor{LightCyan}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 89 Handshake, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480957, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 71 Protected Payload (KP0), DCID=0000000000000001, PKN: 5480956, DONE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4988} &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 95 Protected Payload (KP0), DCID=400000d42cb02248, PKN: 19, ACK, PADDING \\ \rowcolor{LightCyan}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 92 Protected Payload (KP0), DCID=0000000000000001, PKN: 5480957, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4987 &amp; \multicolumn{1}{l}{} &amp; 105 Handshake, DCID=0000000000000001, SCID=400000d42cb02248, PKN: 5480958, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}}<BR>\end{table} </P>
<P>&nbsp;&nbsp; \noindent&nbsp; We can see that it throws us an error when we start migration just after receiving the \lstinline{HANDSHAKE_DONE}. It considers that we break the specification. In the draft it is said that we cannot perform the migration before the handshake is confirmed:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{ "\textit{The design of QUIC relies on endpoints retaining a stable address for<BR>&nbsp;&nbsp; the duration of the handshake.&nbsp; An endpoint MUST NOT initiate<BR>&nbsp;&nbsp; connection migration before the handshake is confirmed, as defined in<BR>&nbsp;&nbsp; section 4.1.2 of [QUIC-TLS]."}}{Draft 29 of QUIC section 9.}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \newpage<BR>&nbsp;&nbsp; \noindent However we can argue with the following requirement in QUIC-TLS for the client view:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{ "\textit{In this document, the TLS handshake is considered confirmed at the<BR>&nbsp;&nbsp; server when the handshake completes.&nbsp; At the client, the handshake is<BR>&nbsp;&nbsp; considered confirmed when a \lstinline{HANDSHAKE_DONE} frame is received."}}{Draft 29 of QUIC-TLS section 4.1.2.}</P>
<P><BR>%&nbsp;&nbsp;&nbsp;&nbsp; \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; "\textit{In this document, the TLS handshake is considered confirmed at the<BR>%&nbsp;&nbsp; server when the handshake completes.&nbsp; At the client, the handshake is<BR>%&nbsp;&nbsp; considered confirmed when a \lstinline{HANDSHAKE_DONE} frame is received.}"&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent&nbsp; So from, the client point of view, we can consider the handshake as confirmed either when we received the \lstinline{HANDSHAKE_DONE} frame or either when we \lstinline{ACK} the packet containing this frame.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent For the server, the handshake is confirmed when the handshake is complete. It happens when the TLS stack has both sent a "Finished" message and verified the peer's "Finished" message which is the case here (at least for the sending part).&nbsp; %\todo{show RFC where not allow to migrate before complete}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{ "\textit{In this document, the TLS handshake is considered \textbf{complete} when the<BR>&nbsp;&nbsp; TLS stack has reported that the handshake is complete.&nbsp; This happens<BR>&nbsp;&nbsp; when the TLS stack has both sent a Finished message and verified the<BR>&nbsp;&nbsp; peer's Finished message. Verifying the peer's Finished provides the<BR>&nbsp;&nbsp; endpoints with an assurance that previous handshake messages have not<BR>&nbsp;&nbsp; been modified.&nbsp; Note that the handshake does not complete at both<BR>&nbsp;&nbsp; endpoints simultaneously.&nbsp; Consequently, any requirement that is<BR>&nbsp;&nbsp; based on the completion [also confirmation for server] of the handshake depends on the perspective<BR>&nbsp;&nbsp; of the endpoint in question."}}{Draft 29 of QUIC-TLS section 4.1.1.}<BR>&nbsp; <BR>%&nbsp;&nbsp;&nbsp; \noindent This can be a serious security problem since <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (2) This "error" is about the \lstinline{unknown_frame} test. We have that \lstinline{mvfst} \lstinline{SIGTERM} with the following error message in its logs (so without return error): %\footnote{1091}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{lstlisting}[<BR>&nbsp;&nbsp;&nbsp; basicstyle=\footnotesize, %or \small or \footnotesize etc.<BR>&nbsp;&nbsp;&nbsp; ]<BR>I0417 23:58:05.578828 12458 EchoServer.h:90] Echo server started at: 127.0.0.1:4443<BR>E0417 23:58:11.153787 12463 EchoHandler.h:53] Socket error=Frame format error<BR>*** Aborted at 1618703891 (Unix time, try 'date -d @1618703891') ***<BR>*** Signal 15 (SIGTERM) (0x30a7) received by PID 12458 (pthread TID 0x7f762ccb2ec0) (linux TID 12458) (maybe from PID 12455, UID 0) (code: 0), stack trace: ***<BR>(error retrieving stack trace)<BR>&nbsp;&nbsp;&nbsp; \end{lstlisting} <BR>&nbsp;&nbsp;&nbsp; This happens only when we allow the generation \lstinline{unknown_frame} for any encryption level (in this example, Initial). In the other case, \lstinline{mvfst} behave well by reporting a \lstinline{FRAME_ENCODING_ERROR}. When we are in the Initial encryption level, it can either discard the packet or return an error. When we are in the Handshake encryption level, it must return an error. So according to these rules, \lstinline{mvfst} behave well and decide to drop packet when we are in the Initial encryption level.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{ "\textit{The payload of an Initial packet includes a \lstinline{CRYPTO} frame (or frames)<BR>&nbsp;&nbsp; containing a cryptographic handshake message, \lstinline{ACK} frames, or both.<BR>&nbsp;&nbsp; \lstinline{PING}, \lstinline{PADDING}, and \lstinline{CONNECTION_CLOSE} frames of type 0x1c are also<BR>&nbsp;&nbsp; permitted.&nbsp; An endpoint that receives an Initial packet containing<BR>&nbsp;&nbsp; other frames can \textbf{either} discard the packet as spurious or treat it as<BR>&nbsp;&nbsp; a connection error."}}{Draft 29 of QUIC section 17.2.2.}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace{-0.5cm}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \epigraph{ "\textit{The payload of this packet [Handshake] contains \lstinline{CRYPTO} frames and could contain<BR>&nbsp;&nbsp; \lstinline{PING}, \lstinline{PADDING}, or \lstinline{ACK} frames.&nbsp; Handshake packets MAY contain<BR>&nbsp;&nbsp; \lstinline{CONNECTION_CLOSE} frames of type 0x1c.&nbsp; Endpoints MUST treat receipt<BR>&nbsp;&nbsp; of Handshake packets with other frames as a connection error."}}{Draft 29 of QUIC section 17.2.2.}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \noindent (3) We also have that \lstinline{mvfst}, for only one time, for the stream test that \lstinline{SegmentationFault} with the following error message in its logs (so without return error): \footnote{254}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace{0.5cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (3) Concerning the problem of the handshake, usually \lstinline{mvfst} try to respond to a connection request with four QUIC/\lstinline{TLS} packets of type "Hello Retry Request" then send a normal "Server Hello" at the fifth trial. It could be the reason why we manage to do the handshake and sometimes not.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \hspace*{-1cm}<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.4]{Ivy-results-1/image/helloretry1.PNG}<BR>&nbsp;&nbsp;&nbsp; % \hspace*{-1cm}<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.4]{Ivy-results-1/image/helloretry2.PNG}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; % Please add the following required packages to your document preamble:</P>
<P>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>%\caption{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755784}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|llllll}<BR>\hline<BR>&nbsp; <BR>\multicolumn{1}{|c|}{\textbf{}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{time}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}</P>
<P>4379 &amp;<BR>&nbsp; 125.357 &amp;<BR>&nbsp; localhost &amp;<BR>&nbsp; localhost &amp;<BR>&nbsp; QUIC &amp;<BR>&nbsp; \multicolumn{1}{l|}{1274 Initial, DCID=0000000000000001,&nbsp; SCID=0000000000000000, PKN:0} \\ \rowcolor{lightgreen}<BR>4381 &amp; 125.358 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755779} \\ \rowcolor{lightgreen}<BR>4387 &amp; 125.471 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755781} \\ \rowcolor{lightgreen}<BR>4393 &amp; 125.682 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755783} \\ \hline <BR>\multicolumn{6}{|l|}{TLSv1.3 Record Layer: Handshake Protocol: Hello Retry Request}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{lightgreen}<BR>4394 &amp;<BR>&nbsp; 125.683 &amp;<BR>&nbsp; localhost &amp;<BR>&nbsp; localhost &amp;<BR>&nbsp; QUIC &amp;<BR>&nbsp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755784} \\ \rowcolor{LightCyan}<BR>4506 &amp; 126.090 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1274 Initial, DCID=40000087630fcf40,&nbsp; SCID=0000000000000000, PKN:16}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4507 &amp; 126.091 &amp;&nbsp; &amp;&nbsp; &amp;&nbsp; &amp; \multicolumn{1}{l|}{1294 Initial, DCID=0000000000000000,&nbsp; SCID=40000087630fcf40, PKN:12755785} \\ \hline<BR>\multicolumn{6}{|l|}{TLSv1.3 Record Layer: Handshake Protocol: Server Hello}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}}<BR>\end{table}</P>
<P>&nbsp;&nbsp;&nbsp; \noindent The cost of implementing this feature would be to update the serializer/deserializer of the TLS part and the associated Ivy modernization. This is the "easy" part. We would also need to update the PicoTLS API interface with Ivy but with some deeper analysis of PicoTLS and eventually also by analysing other QUIC implementation using PicoTLS, we could solve the problem.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\noindent (4) Another unexpected event occurs for the \lstinline{quic_server_test_tp_error}. It is as test&nbsp; where we put an invalid transport parameter value. Sometime it pass and sometime it fails. Maybe developers have considered the fact that in the case the handshake is not finished, there is no need to explicitly close the connection with an error. It would still be strange that the draft specified an error for the transport parameter. \\ %So either it is an ambiguity in the draft or either an omission that makes these features not implemented.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h!]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.5]{plot/errors_for_mvfst_in_test_quic_server_test_tp_error.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace{-0.6cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\noindent However, <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace{3.6cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (4) It can also be shown that for the "ambiguous" test \lstinline{quic_server_test_double_tp} \lstinline{_error}, the handshake does not complete. It either decides to discard the packet or stop sending us packets for other reasons. No information in the logs seems to tell us that it detects the double transport parameter.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (5) It can also be&nbsp; shown that for the "ambiguous" test \lstinline{quic_server_test_token_error}, we get a \lstinline{INTERNAL_ERROR} from the implementation in a \lstinline{CONNECTION_CLOSE} frame:%\footnote{4257}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{lstlisting}[<BR>&nbsp;&nbsp;&nbsp; basicstyle=\footnotesize, %or \small or \footnotesize etc.<BR>&nbsp;&nbsp;&nbsp; ]<BR>I0418 10:41:27.839520 15506 EchoServer.h:90] Echo server started at: 127.0.0.1:4443<BR>I0418 10:41:46.003042 15510 EchoHandler.h:48] Socket closed<BR>*** Aborted at 1618742506 (Unix time, try 'date -d @1618742506') ***<BR>*** Signal 15 (SIGTERM) (0x3c8f) received by PID 15506 (pthread TID 0x7f30a8656ec0) (linux TID 15506) (maybe from PID 15503, UID 0) (code: 0), stack trace: ***<BR>(error retrieving stack trace)<BR>&nbsp;&nbsp;&nbsp; \end{lstlisting} <BR>&nbsp;&nbsp;&nbsp; But the draft says that we should :<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{ "\textit{Token Length:&nbsp; A variable-length integer specifying the length of the<BR>&nbsp;&nbsp;&nbsp;&nbsp; Token field, in bytes.&nbsp; This value is zero if no token is present.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Initial packets sent by the server MUST set the Token Length field<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; to zero; clients that receive an Initial packet with a non-zero<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The token Length field MUST either discard the packet or generate a<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connection error of type \lstinline{PROTOCOL_VIOLATION}}."}{Draft 29 of QUIC section 17.2.2.}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent But since in the other tests of the batch, it behaves well, we are not sure that this is specifically our test that causes the internal error. It might happen in "any" case.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (6) For the test where we voluntarily send \lstinline{HANDSHAKE_DONE} frame but we are not allowed. \lstinline{mvfst} has "choose" the strategy to discard the connection since we usually don't finish the handshake. But this is still unexpected since twice we get the test that passed. After investigation, we discover that usually we were performing migration and the deliverable of the frame at the same time and \lstinline{mvfst} decide to first report the invalid migration. When we disable the migration, it reacts as expected.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (7) For the error generally, whether it is fully implemented either nothing is done.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\noindent (8) For one test of the stream, our Ivy implementation also get an internal error with a \lstinline{bad_alloc()} error in the TLS API interface due to a bad "aead" key. We fixed it and now we consider this case as an "undecryptable" packet event.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; \subsubsection{ \lstinline{picoquic}}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; % \vspace{-1cm}<BR>&nbsp;&nbsp;&nbsp; \noindent We can find the detailed version of the results at \ref{tab:pico-server}.\\<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (1)&nbsp; We mainly have one property that fails:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require conn_seen(dcid)}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{-&gt; hi_non_probing_endpoint(dcid,dst);}<BR>&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; %\begin{enumerate}</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \noindent We already got this error for \lstinline{aioquic}. The interpretation of this error is the same as the one in the &nbsp;\lstinline{aioquic} section. This error is appearing more often than in draft 18. \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \noindent It is probably a good example of how the global interpretation of results can be misleading. The code was not fixed between the two drafts but it is more appearing now. It is probably because other errors were fixed between the two drafts. \lstinline{picoquic} fixed its implementation of the migration between the two drafts and it could be the reason why this error happens more often. We can suppose that the migration errors of the previous draft are "hiding" this error. As a recall, Ivy stops on the first error seen.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </P>
<P>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{src} &amp;<BR>&nbsp; \multicolumn{1}{c|}{dst} &amp;<BR>&nbsp; \multicolumn{1}{c|}{Protocol} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline&nbsp; \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp; QUIC &amp;<BR>&nbsp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 1294 Handshake, DCID=0000000000000001, SCID=340db0bf519f3482, PKN: 0, CRYPTO \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 506 Protected Payload (KP0), DCID=0000000000000001, PKN: 0, NT, NCI, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 1482 Protected Payload (KP0), DCID=0000000000000001, PKN: 1, PING, PADDING \\&nbsp; \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 158 Handshake, DCID=1a7780ee8e9a53b8, SCID=0000000000000001, PKN: 10, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 225 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, NT, NCI, PADDING \\ <BR>\rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 97 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, DONE, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 1442 Protected Payload (KP0), DCID=0000000000000001, PKN: 4, PING, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 225 Protected Payload (KP0), DCID=0000000000000001, PKN: 5, NT, NCI, PADDING \\&nbsp;&nbsp; \end{tabular}}<BR>\end{table}<BR>&nbsp; \begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 97 Protected Payload (KP0), DCID=0000000000000001, PKN: 6, DONE, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 225 Protected Payload (KP0), DCID=0000000000000001, PKN: 7, NT, NCI, PADDING \\ \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}167 Protected Payload (KP0), DCID=1a7780ee8e9a53b8, \textbf{PKN: 15}, STREAM(4), ACK, \\ ACK, ACK, STREAM(8), STREAM(12), ACK, PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}1249 Protected Payload (KP0), DCID=0000000000000001, PKN: 8, ACK, STREAM(4), \\ STREAM(8), STREAM(12), PADDING\end{tabular} \\ \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}237 Protected Payload (KP0), DCID=340db0bf519f3482, PKN: 1, STREAM(4),\\&nbsp; ACK, ACK, ACK, STREAM(8), STREAM(12), ACK, STREAM(16), STREAM(24), \\ ACK, STREAM(20), ACK, PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}1249 Protected Payload (KP0), DCID=0000000000000001, PKN: 9, ACK, STREAM(16), \\ STREAM(20), STREAM(24), PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 97 Protected Payload (KP0), DCID=0000000000000001, PKN: 10, DONE, ACK, PADDING \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 225 Protected Payload (KP0), DCID=0000000000000001, PKN: 11, NT, NCI, ACK, PADDING \\ \rowcolor{LightCyan}<BR>4987 &amp;<BR>&nbsp; \multicolumn{1}{l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}132 Protected Payload (KP0), DCID=1a7780ee8e9a53b8, PKN: 4, ACK, STREAM(32), \\ STREAM(28), PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; 4987 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 1294 Protected Payload (KP0), DCID=0000000000000001, PKN: 12, PC, ACK, PADDING \\ \hline<BR>\end{tabular}}<BR>\end{table}</P>
<P>\noindent We can see here that the packet with 15 as the sequence number is the highest non-probing frame that we send. \lstinline{Picoquic} should send packets on port 4987 until we send him a non-probing frame with a higher packet number than 15.\\</P>
<P>&nbsp;&nbsp; %\noindent (3) We also sometimes receive \lstinline{APPLICATION_ERROR} (\lstinline{0xc}) like \lstinline{mvfst} but without error message. \todo{find trace}\\<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (3) For the implementation of the error management of the transport parameter, we can conclude that \lstinline{picoquic} &nbsp;either not implemented not, either choose to ignore the bad value in the transport parameter. If it ignores it, this does not conform to the draft.\\</P>
<P><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \noindent (4) Looking at this result, we can also see that \lstinline{picoquic} implement a good strategy for unknown frames since it only sends \lstinline{PROTOCOL_VIOLATION} (\lstinline{0xa}) errors or doesn't complete the handshake when we send an unknown frame in the wrong encryption level. In other cases, it sends a \lstinline{FRAME_ENCODING_ERROR} as the draft specified in section [12.4.] %todo only when in the handshake, else good<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h!]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.45]{plot/errors_for_picoquic_in_test_quic_server_test_stream.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \vspace{-0.4cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \newpage<BR>&nbsp;&nbsp;&nbsp;&nbsp; \subsubsection{\lstinline{quic-go}}<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; The table referring its result is \ref{tab:go-server}.\\<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; % TODO: ack implicit ??4.11.&nbsp; Discarding Unused Keys<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (1) The following rule is not respected and only implementation produces it:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require f.fin &lt;-&gt; (stream_app_data_finished(dcid,f.id)}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{ &amp; offset+f.length = stream_app_data_end(dcid,f.id));}<BR>&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent This indicates that when a \lstinline{STREAM} frame has the \lstinline{fin} bit set to 1, then we should have the corresponding stream finished and the total stream offset must match. And inversely if the \lstinline{fin} bit is set to 0.&nbsp; This does not concern retransmission.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{\textit{"The final size of a stream is always signaled to the recipient.&nbsp; The<BR>&nbsp;&nbsp; final size is the sum of the Offset and Length fields of a STREAM<BR>&nbsp;&nbsp; frame with a FIN flag, noting that these fields might be implicit."}}{Draft 29 of QUIC section 4.4.}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{center}<BR>&nbsp;&nbsp;&nbsp; %&nbsp;&nbsp;&nbsp;&nbsp; \textit{"RFC"}<BR>&nbsp;&nbsp;&nbsp; % \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent In our example, we can see that \lstinline{quic-go} retransmit all the data from the \lstinline{STREAM(4)} even if we acknowledged the preceding stream which is not allowed and strange. We know that this is retransmission since we get the same content in the frames. No useful information in the logs too. %\todo{verify and find RFC rule}</P>
<P>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; %we don't manage to finish the handshake, we think this come from the TLS module since after investigation we can see in the qlogs this triggered message \lstinline{"key_unavailable"}. For the server we do not SegFault but we loop in the same function and never respond to the finished message. The normal logs of \lstinline{quic-go} not helping us so much except for saying that we timeout. We think that this is due to the fact that quic-go send us fragment of the certificate and this is a case that we probably don't manage.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage</P>
<P>% \begin{table}[h!]<BR>% \centering<BR>% \scriptsize&nbsp;<BR>% \caption{TODO}<BR>% \label{tab:my-table}<BR>% \hspace*{-1.5cm}<BR>% \begin{tabular}{|llll|}<BR>% \hline<BR>% \multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>% \multicolumn{1}{|c}{4988} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{4443} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{QUIC} &amp;<BR>%&nbsp;&nbsp; 158 Handshake, DCID=010d4f159fb76688, SCID=0000000000000001, PKN: 4, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>% \multicolumn{1}{|c}{4443} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{4998} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{} &amp;<BR>%&nbsp;&nbsp; 225 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, NT, NCI, PADDING \\ \rowcolor{lightgreen}<BR>% 4443 &amp;<BR>%&nbsp;&nbsp; 4988 &amp;<BR>%&nbsp;&nbsp; &amp;<BR>%&nbsp;&nbsp; 97 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, DONE, ACK\_FREQ, PING, PADDING \\ \hline <BR>% \multicolumn{4}{|l|}{ACK\_FREQ(SN: 0, PT: 3, UMAD: 512)} \\ \hline \rowcolor{lightgreen}<BR>% 4443 &amp;<BR>%&nbsp;&nbsp; 4988 &amp;<BR>%&nbsp;&nbsp; &amp;<BR>%&nbsp;&nbsp; 1442 Protected Payload (KP0), DCID=0000000000000001, PKN: 4, PING, PADDING \\ \rowcolor{LightCyan}<BR>% 4988 &amp;<BR>%&nbsp;&nbsp; 4443 &amp;<BR>%&nbsp;&nbsp; &amp;<BR>%&nbsp;&nbsp; \begin{tabular}[c]{@{}l@{}}1274 Protected Payload (KP0), DCID=fc7d49e5619bb357, PKN: 0, STREAM(4), STREAM(8), \\ ACK, ACK, PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>% 4443 &amp;<BR>%&nbsp;&nbsp; 4988 &amp;<BR>%&nbsp;&nbsp; &amp;<BR>%&nbsp;&nbsp; \begin{tabular}[c]{@{}l@{}}865 Protected Payload (KP0), DCID=0000000000000001, PKN: 5, ACK, ACK\_FREQ, PING, \\ STREAM(4), STREAM(8), PADDING\end{tabular} \\ \hline<BR>% \multicolumn{4}{|l|}{ACK\_FREQ(SN: 1, PT: 17, UMAD: 10000)} \\ \hline \rowcolor{lightgreen}<BR>% 4443 &amp;<BR>%&nbsp;&nbsp; 4988 &amp;<BR>%&nbsp;&nbsp; &amp;<BR>%&nbsp;&nbsp; 225 Protected Payload (KP0), DCID=0000000000000001, PKN: 6, NT, NCI, ACK, PADDING \\ \rowcolor{lightgreen}<BR>% \multicolumn{1}{|c}{4433} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{4988} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{} &amp;<BR>%&nbsp;&nbsp; \begin{tabular}[c]{@{}l@{}}97 Protected Payload (KP0), DCID=0000000000000001, PKN: 7, DONE, ACK\_FREQ, PING, ACK, \\ PADDING\end{tabular} \\ \hline<BR>% \multicolumn{4}{|l|}{ACK\_FREQ(SN: 0, PT: 3, UMAD: 512) == retransmission}\\ \hline<BR>% \end{tabular}<BR>% \end{table}</P>
<P>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>% \begin{table}[h!]<BR>% \centering<BR>% %\caption{}<BR>% \label{tab:my-table}<BR>% \resizebox{\textwidth}{!}{%<BR>% \begin{tabular}{|ccll|}<BR>% \hline<BR>% \multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline<BR>% 4988 &amp;<BR>%&nbsp;&nbsp; 4443 &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{QUIC} &amp;<BR>%&nbsp;&nbsp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\<BR>% 4443 &amp; 4988 &amp; \multicolumn{1}{c}{} &amp; 1294 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 0, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp; \multicolumn{1}{c}{} &amp; 228 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp; \multicolumn{1}{c}{} &amp; 1294 Initial, DCID=0000000000000000, SCID=e87f172d, PKN: 1, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp; \multicolumn{1}{c}{} &amp; 1294 Initial, DCID=0000000000000000, SCID=e87f172d, PKN: 2, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4988 &amp;<BR>%&nbsp;&nbsp; 4443 &amp;<BR>%&nbsp;&nbsp; \multicolumn{1}{c}{} &amp;<BR>%&nbsp;&nbsp; 154 Handshake, DCID=e87f172d, SCID=0000000000000000, PKN: 13, CRYPTO, PADDING \\<BR>% 4443 &amp; 4988 &amp; \multicolumn{1}{c}{} &amp; 1127 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 2, ACK, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp; \multicolumn{1}{c}{} &amp; 228 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 3, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1394 Protected Payload (KP0), DCID=0000000000000000, PKN: 0, PADDING, PING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 1, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 3, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 4, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1344 Protected Payload (KP0), DCID=0000000000000000, PKN: 5, PADDING, PING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 103 Protected Payload (KP0), DCID=e87f172d, PKN: 15, STREAM(4), PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 74 Protected Payload (KP0), DCID=0000000000000000, PKN: 6, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 7, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 8, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 9, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 10, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 187 Protected Payload (KP0), DCID=0000000000000000, PKN: 11, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000000, PKN: 12, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 14, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 15, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 16, PADDING, PING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 88 Protected Payload (KP0), DCID=e87f172d, PKN: 32, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 113 Protected Payload (KP0), DCID=e87f172d, PKN: 36, STREAM(12), ACK, ACK, PADDING \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1303 Protected Payload (KP0), DCID=0000000000000000, PKN: 17, ACK, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 18, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 187 Protected Payload (KP0), DCID=0000000000000000, PKN: 19, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000000, PKN: 20, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 21, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 22, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp; \multicolumn{1}{c}{} &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 23, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \end{tabular}%<BR>% }<BR>% \end{table}</P>
<P>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cclll|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{time}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; \multicolumn{1}{c}{QUIC} &amp;<BR>&nbsp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1294 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 0, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 228 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1294 Initial, DCID=0000000000000000, SCID=e87f172d, PKN: 1, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1294 Initial, DCID=0000000000000000, SCID=e87f172d, PKN: 2, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 154 Handshake, DCID=e87f172d, SCID=0000000000000000, PKN: 13, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1127 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 2, ACK, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 228 Handshake, DCID=0000000000000000, SCID=e87f172d, PKN: 3, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1394 Protected Payload (KP0), DCID=0000000000000000, PKN: 0, PADDING, PING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 1, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 3, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 4, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1344 Protected Payload (KP0), DCID=0000000000000000, PKN: 5, PADDING, PING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 103 Protected Payload (KP0), DCID=e87f172d, PKN: 15, STREAM(4), PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 74 Protected Payload (KP0), DCID=0000000000000000, PKN: 6, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 7, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 8, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 9, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 10, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 187 Protected Payload (KP0), DCID=0000000000000000, PKN: 11, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000000, PKN: 12, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 319 Protected Payload (KP0), DCID=0000000000000000, PKN: 14, DONE, NT, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 15, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\&nbsp; \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 16, PADDING, PING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ <BR>% \end{tabular}%<BR>% }<BR>% \end{table}</P>
<P>% \newpage</P>
<P>% \begin{table}[h!]<BR>% \centering<BR>% %\caption{}<BR>% \label{tab:my-table}<BR>% \resizebox{\textwidth}{!}{%<BR>% \begin{tabular}{|cclll|}<BR>% \hline <BR>\rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp; 41.63 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 88 Protected Payload (KP0), DCID=e87f172d, PKN: 32, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp; 43.3848 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 113 Protected Payload (KP0), DCID=e87f172d, PKN: 36, STREAM(12), ACK, ACK, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp; 43.3851 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1303 Protected Payload (KP0), DCID=0000000000000000, PKN: 17, ACK, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp; 43.3852 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Protected Payload (KP0), DCID=0000000000000000, PKN: 18, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp; 43.3852 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 187 Protected Payload (KP0), DCID=0000000000000000, PKN: 19, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp; 43.3855 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000000, PKN: 20, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 21, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 22, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1319 Protected Payload (KP0), DCID=0000000000000000, PKN: 23, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table}</P>
<P>%\vspace*{-0.4cm}</P>
<P>\noindent After an analysis, we are in presence of a clear false positive. In Ivy, we already acknowledged the last \lstinline{STREAM(4)} send by \lstinline{quic-go} but more or less at the same time the retransmission timer of \lstinline{quic-go} expires then retransmit some \lstinline{STREAM(4)}. Since in the Ivy state, this stream has already been processed and that we consider the stream finished and acknowledged, we report an error. We can see a limitation of Ivy, it took 2 seconds to process all messages of \lstinline{quic-go} which causes retransmission. One solution to this problem would be to configure an implementation to have a longer retransmission timer.\\</P>
<P>% \begin{table}[h!]<BR>% \centering<BR>% \scriptsize&nbsp;<BR>% %\caption{TODO}<BR>% \label{tab:my-table}<BR>% \resizebox{\textwidth}{!}{%<BR>% \begin{tabular}{|llll|}<BR>% \hline<BR>% \multicolumn{1}{|c|}{\textbf{src}} &amp; \multicolumn{1}{c|}{\textbf{dst}} &amp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>% \multicolumn{1}{|c}{4443} &amp; \multicolumn{1}{c}{4987} &amp; \multicolumn{1}{c}{QUIC} &amp; 71 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, PING, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>% \multicolumn{1}{|c}{4988} &amp; \multicolumn{1}{c}{4443} &amp; \multicolumn{1}{c}{}&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Handshake, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 0, CRYPTO&nbsp; \\ \rowcolor{lightgreen}<BR>% 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 469 Handshake, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 1, CRYPTO&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 213 Initial, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 213 Initial, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 2, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1118&nbsp; Handshake, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 2, CRYPTO \\ \rowcolor{lightgreen}<BR>% 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 469 Handshake, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 3, CRYPTO&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 213 Initial, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 3, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 213 Initial, DCID=0000000000000001, SCID=6f66202989d924b0, PKN: 4, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \end{tabular}}<BR>% \end{table}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; \noindent (2) Except that we can still conclude that \lstinline{quic-go} behave well for transport parameter properties and the management of the unknown frame. We can also see that for the "ambiguous" test \lstinline{quic_server_test_double_}\lstinline{tp_error}, it decides to send a \lstinline{TRANSPORT_PARAMETER_ERROR}.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (3) The fact that none of our tests about the \lstinline{HANDSHAKE_DONE} frame passed might indicate that \lstinline{quic-go} has still some trouble for this part. It can explain the problem of connection we faced. For this test, \lstinline{quic-go} usually returns us a \lstinline{FRAME_ENCODING_ERROR} which is unexpected since this the only implementation to do that. The specification states: <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{"\textit{A \lstinline{HANDSHAKE_DONE} frame can only be sent by the server.&nbsp; Servers MUST<BR>&nbsp;&nbsp; NOT send a \lstinline{HANDSHAKE_DONE} frame before completing the handshake.&nbsp; A<BR>&nbsp;&nbsp; server MUST treat receipt of a \lstinline{HANDSHAKE_DONE} frame as a connection<BR>&nbsp;&nbsp; error of type \lstinline{PROTOCOL_VIOLATION}}"}{Draft 29 of QUIC section 19.20.}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>% \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "\textit{A \lstinline{HANDSHAKE_DONE} frame can only be sent by the server.&nbsp; Servers MUST<BR>%&nbsp;&nbsp; NOT send a \lstinline{HANDSHAKE_DONE} frame before completing the handshake.&nbsp; A<BR>%&nbsp;&nbsp; server MUST treat receipt of a \lstinline{HANDSHAKE_DONE} frame as a connection<BR>%&nbsp;&nbsp; error of type \lstinline{PROTOCOL_VIOLATION}}"</P>
<P>% \end{center}<BR>&nbsp;&nbsp;&nbsp; \noindent Moreover the error message indicates that the feature is not well implemented. The message says that we cannot send this frame with the "Handshake" encryption which is true but it was intentional in our case. The most important thing is that it doesn't detect that the frame has been sent by a client. <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>%\caption{TODO}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{llll|}<BR>\hline<BR>\multicolumn{1}{|c|}{src} &amp; \multicolumn{1}{c|}{dst} &amp; \multicolumn{1}{c|}{Protocol} &amp; \multicolumn{1}{c|}{Information}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4988} &amp;<BR>&nbsp; \multicolumn{1}{c}{4443} &amp;<BR>&nbsp; \multicolumn{1}{c}{QUIC} &amp;<BR>&nbsp; 1274 Initial, DCID=0000000000000000, SCID=0000000000000001, PKN: 0, CRYPTO, PADDING <A>\\\rowcolor{LightCyan</A>}<BR>\multicolumn{1}{|l}{4443} &amp;<BR>&nbsp; \multicolumn{1}{c}{4988} &amp;<BR>&nbsp; \multicolumn{1}{c}{} &amp;<BR>&nbsp; 1294 Handshake, DCID=0000000000000001, SCID=6d0df88cb463f2a1, PKN: 0, CRYPTO \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 465 Handshake, DCID=0000000000000001, SCID=6d0df88cb463f2a1, PKN: 1, CRYPTO&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 213 Initial, DCID=0000000000000001, SCID=6d0df88cb463f2a1, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 213 Initial, DCID=0000000000000001, SCID=6d0df88cb463f2a1, PKN: 2, CRYPTO&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1118 Handshake, DCID=0000000000000001, SCID=6d0df88cb463f2a1, PKN: 2, CRYPTO \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 465 Handshake, DCID=0000000000000001, SCID=6d0df88cb463f2a1, PKN: 3, CRYPTO&nbsp; \\&nbsp; \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4988} &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}109 Handshake, DCID=6d0df88cb463f2a1, SCID=0000000000000001, PKN: 0, DONE, DONE, \\ DONE, DONE, DONE, DONE, PADDING\end{tabular} \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|l}{4443} &amp; 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 240 Protected Payload (KP0), DCID=0000000000000001, PKN: 0, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{CONNECTION\_CLOSE (Transport) Error code: FRAME\_ENCODING\_ERROR}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{2-2}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp; &amp; \multicolumn{2}{l|}{Error code: FRAME\_ENCODING\_ERROR (7)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp; &amp; \multicolumn{2}{l|}{Frame Type: 30}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp; &amp; \multicolumn{2}{l|}{Reason phrase Length: 60}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp; &amp; \multicolumn{2}{l|}{Reason phrase: HandshakeDoneFrame not allowed at encryption level Handshake}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{3-4} <BR>\end{tabular}}<BR>\end{table}</P>
<P><BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp; \newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.5]{plot/errors_for_quic-go_in_test_quic_server_test_handshake_done_error.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp; % \newpage<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace*{-0.5cm}</P>
<P><BR>&nbsp;&nbsp;&nbsp; \subsubsection{\lstinline{quant}}<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; We have numerous number of errors with this implementation as we can see in the results table \ref{tab:quant-server}.\\<BR>&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %&nbsp; \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.55]{plot/errors_for_quant_in_test_quic_server_test_stream.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \begin{figure}[!h] <BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_quant_in_test_quic_server_test_stream.png}<BR>%&nbsp;&nbsp; \label{fig:sub2}<BR>% \end{subfigure}<BR>% \begin{subfigure}{.5\textwidth}<BR>%&nbsp;&nbsp; \centering<BR>%&nbsp;&nbsp; \includegraphics[width=1\linewidth]{plot/errors_for_quant_in_test_quic_server_test_connection_close.png}<BR>%&nbsp;&nbsp; \label{fig:sub3}<BR>% \end{subfigure}<BR>% \end{figure}</P>
<P>%\vspace*{-0.5cm}</P>
<P>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; \noindent (1) This trigger the failure of a requirement in the QUIC packet specification, i.e. the same as for the \lstinline{quinn} implementation:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require}&nbsp; $\sim$&nbsp; \lstinline{_generating} $\;$ $\wedge$&nbsp; $\sim$&nbsp; \lstinline{queued_non_ack(scid)}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{-&gt; ack_credit(scid) &gt; 0;&nbsp; # [5]}<BR>&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace{-0.4cm}<BR>&nbsp;&nbsp; <BR>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\label{tab:my-table}<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{src} &amp; \multicolumn{1}{c|}{dst} &amp; \multicolumn{1}{c|}{Protocol} &amp; \multicolumn{1}{c|}{\textbf{Information}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{LightCyan}<BR>4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; QUIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 1242 Initial, DCID=0000000000000001, SCID=5015dece, PKN: 0, ACK, PADDING, CRYPTO \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 1294 Handshake, DCID=0000000000000001, SCID=5015dece, PKN: 0, PADDING, CRYPTO&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 354 Handshake, DCID=0000000000000001, SCID=5015dece, PKN: 1, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 154 Handshake, DCID=5015dece, SCID=0000000000000001, PKN: 3, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 105 Protected Payload (KP0), DCID=0000000000000001, PKN: 0, DONE, NT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 16, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 74 Protected Payload (KP0), DCID=0000000000000001, PKN: 1, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 32, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 33, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp; \multicolumn{1}{l}{4988} &amp; \multicolumn{1}{l}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{4}{|l|}{ACK (LA: 33, ACK Delay: 37, ACK Range Count: 0, First ACK range:0)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}}<BR>\end{table}</P>
<P>\noindent We can see that \lstinline{quant} acknowledged \lstinline{ACK} frame which does not respect the property. Maybe also that some problems come from the fact that the encryption cipher for level 3 is not set for the first packet of this type received.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (2) Another result is for the test \lstinline{quic_server_test_tp_error} where we voluntarily send an invalid value for the \lstinline{ack_delay_exponent} transport parameter. Theoretically, we should get a \lstinline{TRANSPORT_PARAMETER_ERROR} but instead \lstinline{quant} get a runtime error and crash with the following error message: %\footnote{1239 (quant-quinn-result)}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{lstlisting}[<BR>&nbsp;&nbsp;&nbsp; basicstyle=\footnotesize, %or \small or \footnotesize etc.<BR>]<BR>[0m[41m[0m[35m err_close[30m&nbsp; [34m conn.c:1691 [0mack_delay_exponent 16040 invalid<BR>/quic/quant/lib/src/tls.c:1465:9: runtime error: null pointer passed as argument 7, which is declared to never be null<BR>&nbsp;&nbsp;&nbsp; \end{lstlisting}</P>
<P>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent We also have a similar behaviour when we send the same transport parameter twice or for the test where we omit the original connection ID transport parameter. We suppose there is none or little coverage of the transport parameter value check from \lstinline{quant}.\\<BR>&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (3) We can also see that for the test where we test the \lstinline{connection_close} frame, we have many errors. Among them an error of invalid state: %\todo{draining, new trace, nb modified version of real req}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require conn_draining(scid) -&gt; ~draining_pkt_sent(scid) &amp; queued_close(scid);}<BR>&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\vspace{-0.3cm}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent This rule indicates that if the sender is in the draining state, then we consider it as a "draining packet". This implies no retransmission of these packets and the presence of a \lstinline{CONNECTION_CLOSE} frame these the packet. In this case, we can see that we have retransmission of the packet. <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; % \newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp; \multicolumn{1}{c|}{\textbf{dst}} &amp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp; QUIC &amp; 1274 Initial, DCID=0000000000000001, SCID=0000000000000000, PKN: 7, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Initial, DCID=0000000000000000, SCID=d2676493, PKN: 0, ACK, PADDING, CRYPTO&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 0, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 351 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 1, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 115 Handshake, DCID=d2676493, SCID=0000000000000000, PKN: 18, ACK, CC, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 89 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 2, ACK, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 104 Handshake, DCID=d2676493, SCID=0000000000000000, PKN: 31, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 91 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 3, ACK, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table}</P>
<P>% \begin{table}[h!]<BR>% \centering<BR>% %\caption{}<BR>% \label{tab:my-table}<BR>% \resizebox{\textwidth}{!}{%<BR>% \begin{tabular}{|cccl|}<BR>% \hline<BR>% \multicolumn{1}{|c|}{\textbf{src}} &amp; \multicolumn{1}{c|}{\textbf{dst}} &amp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline<BR>% 4988 &amp; 4443 &amp; QUIC &amp; 1274 Initial, DCID=0000000000000001, SCID=0000000000000000, PKN: 7, CRYPTO, PADDING \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1242 Initial, DCID=0000000000000000, SCID=d2676493, PKN: 0, ACK, PADDING, CRYPTO&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1294 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 0, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 351 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 1, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 115 Handshake, DCID=d2676493, SCID=0000000000000000, PKN: 18, ACK, CC, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 89 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 2, ACK, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4988 &amp; 4443 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 104 Handshake, DCID=d2676493, SCID=0000000000000000, PKN: 31, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>% 4443 &amp; 4988 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 91 Handshake, DCID=0000000000000000, SCID=d2676493, PKN: 3, ACK, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \end{tabular}%<BR>% }<BR>% \end{table}</P>
<P>&nbsp;\noindent This corresponds to the following RFC rule:<BR>&nbsp;<BR>&nbsp;\vspace{-0.3cm}<BR>&nbsp;<BR>&nbsp;\epigraph{\textit{"After receiving a \lstinline{CONNECTION_CLOSE} frame, endpoints enter the<BR>&nbsp;&nbsp; draining state.&nbsp; An endpoint that receives a \lstinline{CONNECTION_CLOSE} frame<BR>&nbsp;&nbsp; MAY send a single packet containing a \lstinline{CONNECTION_CLOSE} frame before<BR>&nbsp;&nbsp; entering the draining state, using a \lstinline{CONNECTION_CLOSE} frame and a<BR>&nbsp;&nbsp; \lstinline{NO_ERROR} code if appropriate.&nbsp; An endpoint MUST NOT send further<BR>&nbsp;&nbsp; packets, which could result in a constant exchange of<BR>&nbsp;&nbsp; \lstinline{CONNECTION_CLOSE} frames until the closing period on either peer<BR>&nbsp;&nbsp; ended"}}{Draft 29 of QUIC section 10.3.}<BR>&nbsp;<BR>&nbsp;\vspace{-0.3cm}<BR>&nbsp;<BR>% \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \textit{"After receiving a \lstinline{CONNECTION_CLOSE} frame, endpoints enter the<BR>%&nbsp;&nbsp; draining state.&nbsp; An endpoint that receives a \lstinline{CONNECTION_CLOSE} frame<BR>%&nbsp;&nbsp; MAY send a single packet containing a \lstinline{CONNECTION_CLOSE} frame before<BR>%&nbsp;&nbsp; entering the draining state, using a \lstinline{CONNECTION_CLOSE} frame and a<BR>%&nbsp;&nbsp; \lstinline{NO_ERROR} code if appropriate.&nbsp; An endpoint MUST NOT send further<BR>%&nbsp;&nbsp; packets, which could result in a constant exchange of<BR>%&nbsp;&nbsp; \lstinline{CONNECTION_CLOSE} frames until the closing period on either peer<BR>%&nbsp;&nbsp; ended"}<BR>% \end{center}</P>
<P>&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (4) Finally, we also have a problem of \lstinline{PATH_CHALLENGE} where we receive the same data for the challenge. This is not allowed and this occurs even if we only allow one migration. As you see, the behaviour is unexpected: %\footnote{22 (quant-quinn)}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; %\newpage<BR>&nbsp;&nbsp;&nbsp; </P>
<P>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>%\caption{TODO}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|llll|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4443} &amp;<BR>&nbsp; \multicolumn{1}{c}{4987} &amp;<BR>&nbsp; \multicolumn{1}{c}{QUIC} &amp;<BR>&nbsp; 71 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, PING, PADDING \\ \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4988} &amp;<BR>&nbsp; \multicolumn{1}{c}{4443} &amp;<BR>&nbsp; \multicolumn{1}{c}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}1274 Protected Payload (KP0), DCID=71155229, PKN: 0, ACK, STREAM(24),\\&nbsp; STREAM(16), STREAM(8), PADDING\end{tabular} \\ \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}1274 Protected Payload (KP0), DCID=c38284e7, PKN: 4, STREAM(28), ACK, \\ ACK, STREAM(12), PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 120 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, ACK, DONE, NT, PC \\ \hline<BR>\multicolumn{4}{|l|}{PATH\_CHALLENGE (1dc4add05cbb8c5f)} \\ \hline \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 110 Protected Payload (KP0), DCID=0000000000000001, PKN: 4, PC, PADDING, STREAM(28) \\ \hline<BR>\multicolumn{4}{|l|}{PATH\_CHALLENGE (1dc4add05cbb8c5f)} \\ \hline \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 110 Protected Payload (KP0), DCID=0000000000000001, PKN: 5, PC, PADDING, STREAM(12) \\ \hline<BR>\multicolumn{4}{|l|}{PATH\_CHALLENGE (1dc4add05cbb8c5f)} \\ \hline \rowcolor{LightCyan}<BR>4988 &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}1274 Protected Payload (KP0), DCID=c38284e7, PKN: 5, STREAM(28), ACK, ACK, \\ STREAM(12), PADDING\end{tabular} \\ \rowcolor{lightgreen}<BR>4443 &amp;<BR>&nbsp; 4988 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 83 Protected Payload (KP0), DCID=0000000000000001, PKN: 6, ACK, PC \\ \hline<BR>\multicolumn{4}{|l|}{PATH\_CHALLENGE (1dc4add05cbb8c5f)} \\ \hline<BR>\end{tabular}}<BR>\end{table}</P>
<P>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \noindent (5) <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.6]{plot/errors_for_quant_in_test_quic_server_test_handshake_done_error.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; % \newpage<BR>&nbsp;&nbsp;&nbsp; \subsubsection{\lstinline{quiche}}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; Except for the following, we consider \lstinline{quiche} as a mature implementation without much-detected error. You can have this observation in the global results \ref{tab:quiche-server}.\\<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (1) As the first observation, we can see that \lstinline{quiche} choose, voluntary or not, not to react when an endpoint initiate connection with an invalid transport parameter value. We usually get a timeout where in most cases it should return us an error:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % %\hspace{1cm}<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.5]{plot/errors_for_quiche_in_test_quic_server_test_tp_error.png}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>\begin{lstlisting}[<BR>&nbsp;&nbsp;&nbsp; basicstyle=\footnotesize, %or \small or \footnotesize etc.<BR>&nbsp;&nbsp;&nbsp; ]<BR>Finished dev [unoptimized + debuginfo] target(s) in 0.12s<BR>Running `tools/apps/target/debug/quiche-server --cert tools/apps/src/bin/cert.crt --key tools/apps/src/bin/cert.key --no-retry --dump-packets /results/dump.txt --listen '127.0.0.1:4443'`<BR>[2021-04-18T18:05:39.038882591Z ERROR quiche_server] d21987e22b078c1d8b4a32d0308c321f recv failed: InvalidTransportParam<BR>&nbsp;&nbsp;&nbsp; \end{lstlisting} <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent But according to the draft, <BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp; \epigraph{\textit{"An endpoint MUST treat receipt of a transport parameter with an<BR>&nbsp;&nbsp; invalid value as a connection error of type<BR>&nbsp;&nbsp;&nbsp; \lstinline{TRANSPORT_PARAMETER_ERROR}."}}{Draft 29 of QUIC section 7.4.}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent We suppose \todo{Review: supposition allowed? can we put this on the discussion part of the conclusion } that this is voluntary since \lstinline{quiche} it is made by Cloudflare. It is a big player in the industry and in security. To be sure we should ask them directly. Our interpretation is that they probably do nothing since it could reveal useful information that an attacker could eventually use. For example, if an attacker try to do fuzzing with these transport parameters to crash the system, then never reporting errors is a way to hide information about the potential vulnerabilities. We based this idea on a mitigation technique used against SQL injection and which consist not to disclose more information than necessary since for this attack, we should guess the architecture of the database with some  fuzzing. However, this way of proceeding can be problematic if an application needs these error messages. This is only a supposition. The RFC is also not respected anyways.\\&nbsp; <BR>&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \textit{"An endpoint MUST treat receipt of a transport parameter with an<BR>%&nbsp;&nbsp; invalid value as a connection error of type<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{TRANSPORT_PARAMETER_ERROR}."}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{center}</P>
<P>\newpage<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent (2) The other tests we launch were successful except few cases where we encountered the same error as other implementations about the \lstinline{ACK}, see \ref{tab:quiche-server}. However, we can test only unidirectional cases&nbsp; for unknown reasons. It is probably due to a wrong configuration:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; % \newpage</P>
<P>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>%\caption{TODO}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|llll|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4988} &amp;<BR>&nbsp; \multicolumn{1}{c}{4443} &amp;<BR>&nbsp; \multicolumn{1}{c}{QUIC} &amp;<BR>&nbsp; 1274 Initial, DCID=0000000000000000, SCID=0000000000000001, PKN: 0, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 226 Initial, DCID=0000000000000001, SCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, PKN: 0, ACK, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 1238 Handshake, DCID=0000000000000001, SCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, PKN: 0, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 287 Handshake, DCID=0000000000000001, SCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, PKN: 1, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A>\\\rowcolor{LightCyan</A>}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 150 Handshake, DCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, SCID=0000000000000001, PKN: 6, CRYPTO, PADDING <A>\\\rowcolor{lightgreen</A>}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 97 Handshake, DCID=0000000000000001, SCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, PKN: 2, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A>\\\rowcolor{LightCyan</A>}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 72 Protected Payload (KP0), DCID=0000000000000001, PKN: 0, DONE, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A>\\\rowcolor{lightgreen</A>}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, PKN: 12, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A>\\\rowcolor{LightCyan</A>}<BR>\multicolumn{1}{|c}{4988} &amp;<BR>&nbsp; \multicolumn{1}{c}{4443} &amp;<BR>&nbsp; \multicolumn{1}{c}{} &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}1274 Protected Payload (KP0), DCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, PKN: 4, STREAM(8), \\ STREAM(12), STREAM(20), PADDING\end{tabular} <A>\\\rowcolor{lightgreen</A>} <BR>4443 &amp; 4988 &amp;&nbsp; &amp; 78 Protected Payload (KP0), DCID=0000000000000001, PKN: 1, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=bd56b6665d7d4ad4a2e00aa1075ba8b5, PKN: 0, ACK, STREAM(4), PADDING \\<BR>&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp; &amp; ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}}<BR>\end{table}</P>
<P>%\todo{explain with what is in the summary}</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>%&nbsp;&nbsp;&nbsp; \newpage<BR>&nbsp;&nbsp;&nbsp; \subsubsection{\lstinline{lsquic}}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; As said before, we get a TLS internal error.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; % \begin{figure}[h]<BR>&nbsp;&nbsp;&nbsp; % \centering<BR>&nbsp;&nbsp;&nbsp; % \hspace{1cm}<BR>&nbsp;&nbsp;&nbsp; % \includegraphics[scale = 0.7]{Ivy-results-1/image/cryptoerror_lsquic.PNG}<BR>&nbsp;&nbsp;&nbsp; % %\caption{Titre}<BR>&nbsp;&nbsp;&nbsp; % \label{fig:titre}<BR>&nbsp;&nbsp;&nbsp; % \end{figure}<BR>&nbsp;&nbsp;&nbsp; <BR>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>%\caption{TODO}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{llcl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline \rowcolor{LightCyan}<BR>\multicolumn{1}{|c}{4988} &amp;<BR>&nbsp; \multicolumn{1}{c}{4443} &amp;<BR>&nbsp; QUIC &amp;<BR>&nbsp; 1274 Initial, DCID=0000000000000000, SCID=0000000000000001, PKN: 0, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|c}{4443} &amp;<BR>&nbsp; \multicolumn{1}{c}{4988} &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; 108 Initial, DCID=0000000000000001, SCID=ea9727ea9e27fa35, PKN: 0, ACK, CC \\ \hline<BR>\multicolumn{4}{|l|}{CONNECTION\_CLOSE (Transport) Error code: CRYPTO\_ERROR (Internal Error)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{1-1}<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Frame Type: CONNECTION\_CLOSE (Transport) (0x1c)} \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Error code: CRYPTO\_ERROR (336)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{TLS Alert Description: Internal Error (80)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Frame Type: 0}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Reason phrase Length: 12}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Reason phrase: TLS alert 80}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{2-4} <BR>\end{tabular}}<BR>\end{table}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent The logs not helping us either:<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \begin{lstlisting}[<BR>&nbsp;&nbsp;&nbsp; basicstyle=\tiny, %or \small or \footnotesize etc.<BR>]<BR>12:22:15.657 [DEBUG] [QUIC:0000000000000000] event: decrypted packet 0<BR>12:22:15.657 [DEBUG] [QUIC:0000000000000000] event: packet in: 0, type: Initial, size: <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1232; ecn: 0, spin: 0; path: 0<BR>12:22:15.657 [DEBUG] [QUIC:0000000000000000] event: CRYPTO frame in: level 0; offset 0; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; size 234<BR>12:22:15.658 [DEBUG] [QUIC:0000000000000000] event: PADDING frame in of 948 bytes<BR>12:22:15.658 [DEBUG] engine: decref conn 0000000000000000, 'HT' -&gt; 'H'<BR>12:22:15.658 [DEBUG] [QUIC:0000000000000000] event: generated ACK frame: [0-0]<BR>12:22:15.658 [DEBUG] engine: incref conn 0000000000000000, 'H' -&gt; 'HO'<BR>12:22:15.658 [DEBUG] engine: incref conn 0000000000000000, 'HO' -&gt; 'CHO'<BR>12:22:15.658 [DEBUG] engine: decref conn 0000000000000000, 'CHO' -&gt; 'CO'<BR>12:22:15.658 [DEBUG] engine: batched packet 0 for connection 0000000000000000<BR>12:22:15.658 [DEBUG] engine: batched all outgoing packets for mini conn 0000000000000000<BR>12:22:15.658 [DEBUG] engine: packets out returned 1 (out of 1)<BR>12:22:15.658 [DEBUG] [QUIC:0000000000000000] event: sent packet 0, type Initial, crypto: <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; clear, size 66, frame types: ACK CONNECTION_CLOSE, ecn: 0, spin: 0;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kp: 0, path: 0, flags: 98829<BR>12:22:15.658 [DEBUG] engine: decref conn 0000000000000000, 'CO' -&gt; 'C'<BR>12:22:15.658 [DEBUG] engine: send_packets_out: sent 1 packet<BR>12:22:15.658 [DEBUG] engine: decref conn 0000000000000000, 'C' -&gt; ''<BR>&nbsp;&nbsp;&nbsp; \end{lstlisting}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \noindent We still present the implementation since we have some results for the clients.</P>
<P>%\subsection{Conclusion}</P>
<P>%\paragraph{Problems}</P>
<P>\newpage</P>
<P>%\begin{comment}<BR>&nbsp; \subsection{Client results}</P>
<P>\noindent Now, we present in this section the client results.&nbsp; Let's start with a first overview of the results:</P>
<P>%\vspace*{-0.4cm}</P>
<P>\begin{table}[!h]<BR>\centering<BR>\small<BR>%\vspace*{-0.6cm}<BR>%\caption{}<BR>%\hspace*{6cm}<BR>%\vspace*{-0.5cm}<BR>\label{tab:my-table}<BR>\begin{tabular}{|c|c|}<BR>\hline<BR>\textbf{quinn}&nbsp;&nbsp; todo&nbsp; &amp; 875/1600 \\ \hline<BR>\textbf{mvfst}&nbsp;&nbsp;&nbsp; &amp; 549/1600 \\ \hline<BR>\textbf{picoquic} &amp; 919/1600 \\ \hline<BR>\textbf{quic-go} todo&nbsp; &amp; 500/1600 \\ \hline<BR>\textbf{aioquic}&nbsp; &amp; 584/1600 \\ \hline<BR>\textbf{quant}&nbsp;&nbsp;&nbsp; &amp; 320/1600 \\ \hline<BR>\textbf{quiche}&nbsp;&nbsp; &amp; 862/1600 \\ \hline<BR>\textbf{lsquic}&nbsp;&nbsp; &amp; 0/1600&nbsp;&nbsp; \\ \hline<BR>\end{tabular}<BR>\caption{Draft 29 client results overview TODO}<BR>\end{table}</P>
<P>%\newpage<BR>\noindent And as before a more detailed version:<BR>% Please add the following required packages to your document preamble:</P>
<P>% Please add the following required packages to your document preamble:<BR>% \usepackage{multirow}<BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{multirow}</P>
<P>\begin{table}[h!]<BR>\centering<BR>\footnotesize<BR>%\hspace*{-1.5cm}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|l|ccccccc|}<BR>\hline<BR>\multicolumn{1}{|c|}{} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{quinn}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{mvfst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{picoquic}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{quic-go}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{aioquic}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{quant}} &amp;<BR>&nbsp; \textbf{quiche} \\ \hline<BR>\textbf{stream} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 6/100 &amp;<BR>&nbsp; \textbf{56/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 18/100 &amp;<BR>&nbsp; 12/100 &amp;<BR>&nbsp; \textbf{97/100} \\ \cline{1-1}<BR>\textbf{max} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 3/100 &amp;<BR>&nbsp; \textbf{47/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{27/100} &amp;<BR>&nbsp; 58/100 &amp;<BR>&nbsp; 96/100 \\ \cline{1-1}<BR>\textbf{reset\_stream} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{7/100} &amp;<BR>&nbsp; \textbf{61/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{24/100} &amp;<BR>&nbsp; 5/100 &amp;<BR>&nbsp; \textbf{98/100}&nbsp; \\ \cline{1-1}<BR>\textbf{connection\_close} &amp;<BR>&nbsp; \textbf{83/100} &amp;<BR>&nbsp; 37/100&nbsp; &amp;<BR>&nbsp; \textbf{81/100} &amp;<BR>&nbsp; \textbf{78/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 40/100 &amp;<BR>&nbsp; \textbf{100/100}&nbsp; \\ \cline{1-1}<BR>\textbf{test\_unkown} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{99/100} &amp;<BR>&nbsp; 99/100 &amp;<BR>&nbsp; \textbf{48/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 100/100&nbsp; \\ \cline{1-1}<BR>\textbf{tp\_limit\_newcoid} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 6/100 &amp;<BR>&nbsp; \textbf{50/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{24/100} &amp;<BR>&nbsp; 5/100 &amp;<BR>&nbsp;\textbf{ 93/100}&nbsp; \\ \cline{1-1}<BR>\textbf{blocked\_error} &amp;<BR>&nbsp; \textbf{73/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{100/100}&nbsp; \\ \cline{1-1}<BR>\textbf{tp\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{100/100 }&amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{tp\_acticoid\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{token\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{98/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{99/100}&nbsp; \\ \cline{1-1}<BR>% \textbf{stop\_sending} &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; \textit{\textbf{8/100}} &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; \textit{\textbf{12/100}} &amp;<BR>%&nbsp;&nbsp; 0/100 &amp;<BR>%&nbsp;&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{no\_icid} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>\textbf{handshake\_done\_error} &amp;<BR>&nbsp; \textbf{89/100} &amp;<BR>&nbsp; 2/100 &amp;<BR>&nbsp; \textbf{89/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{86/100} &amp;<BR>&nbsp; 2/100 &amp;<BR>&nbsp; \textbf{77/100}&nbsp; \\ \cline{1-1}<BR>\textbf{double\_tp\_error} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{65/100} &amp;<BR>&nbsp; \textbf{100/100} &amp;<BR>&nbsp; \textbf{0/100} &amp;<BR>&nbsp; \textbf{92/100} &amp;<BR>&nbsp; \textbf{3/100} &amp;<BR>&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>&nbsp;\textbf{accept\_maxdata} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{12/100} &amp;<BR>&nbsp; \textbf{50/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{43/100} &amp;<BR>&nbsp; \textbf{21/100} &amp;<BR>&nbsp; \textbf{96/100}&nbsp; \\ \cline{1-1}<BR>&nbsp; <BR>%&nbsp;&nbsp; \textbf{retirecoid\_error (torecheck)} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; \textbf{3/100} &amp;<BR>%&nbsp;&nbsp; \textbf{52/100} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; \textbf{0/100} &amp;<BR>%&nbsp;&nbsp; 0/100&nbsp; \\ \cline{1-1}<BR>&nbsp; <BR>&nbsp; \textbf{stop\_sending} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{4/100} &amp;<BR>&nbsp; \textbf{48/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{33/100} &amp;<BR>&nbsp; 8/100&nbsp; &amp;<BR>&nbsp; \textbf{96/100} \\ \cline{1-1}<BR>&nbsp; <BR>&nbsp; \textbf{ext\_min\_ack\_delay} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{10/100} &amp;<BR>&nbsp; \textbf{38/100} &amp;<BR>&nbsp; 0/100 &amp;<BR>&nbsp; \textbf{26/100} &amp;<BR>&nbsp; \textbf{6/100} &amp;<BR>&nbsp; \textbf{98/100}&nbsp;&nbsp; \\ \hline<BR>\end{tabular} <BR>}<BR>\caption{Draft 29 client results detailed - Number of failed test}<BR>%\caption{Server results}<BR>\end{table}</P>
<P>\noindent When we look closely at the errors, they are relatively like the ones we get with the server. This is normal since usually, the tests are nearly the same but adapted for the client.\\ \todo[color=orange]{Speak about results overviews}</P>
<P>%\noindent Another thing we observed when doing the tests is that usually they are quite simple <BR>\noindent Then we can also directly see that there is less error generally. This is probably because the migration was not activated. A simple way to confirm this would be to configure a client manually to perform migration on a determined port such that we can easily detect it. However all implementations don't directly allow that and by lack of time, we have decided not to do that. It may be interesting in the sense that it reflects in some way the results that we may observe without migration.\\ \todo{dire que on fera dans le futur ?}</P>
<P><BR>%\noindent We do not compare old results of draft 18 with these one since they were so non conlud</P>
<P><BR>\newpage </P>
<P>\subsubsection*{Evolution from draft 18 to draft 29}</P>
<P>%\newpage<BR>\noindent As for the server, here is a more detailed version containing the number of errors per test and compare the evolution with draft 18 of the McMillan paper with draft 29. <BR>\begin{table}[h!]<BR>\centering<BR>\footnotesize<BR>\caption{\lstinline{picoquic} draft 18 - Number of errors}<BR>\resizebox{\textwidth}{!}{%<BR>\label{tab:my-table}<BR>\begin{tabular}{llr}<BR>\multicolumn{1}{c}{\textbf{Test}}&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{Error code}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{\#}} \\<BR>quic\_client\_test\_max &amp; Ran out of values for type cid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 862&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require src = server.ep \&amp; dst = client.ep; &amp; 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; cipher for level 2 is not set&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 369&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$\_generating \&amp; $\sim$queued\_non\_ack(scid) -&gt; ack\_credit(scid) &gt; 0;&nbsp; # [5]&nbsp;&nbsp; &amp; 21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require stream\_id\_allowed(dcid,f.id);&nbsp; # [6]&nbsp; &amp; 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require f.err\_code = 0 &amp; 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; cipher for level 3 is not set&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 629&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; Segmentation fault&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; timeout: the monitored command dumped core&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{862/1000}<BR>\end{tabular}}<BR>\end{table}</P>
<P>\begin{table}[h!]<BR>\centering<BR>\footnotesize<BR>\caption{\lstinline{picoquic} draft 29 - Number of errors - TODO}<BR>\resizebox{\textwidth}{!}{%<BR>\label{tab:my-table}<BR>\begin{tabular}{llr}<BR>\multicolumn{1}{c}{\textbf{Test}}&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{Error code}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{\textbf{\#}} \\<BR>quic\_client\_test\_max &amp; Ran out of values for type cid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 862&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require src = server.ep \&amp; dst = client.ep; &amp; 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; cipher for level 2 is not set&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 369&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require $\sim$\_generating \&amp; $\sim$queued\_non\_ack(scid) -&gt; ack\_credit(scid) &gt; 0;&nbsp; # [5]&nbsp;&nbsp; &amp; 21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require stream\_id\_allowed(dcid,f.id);&nbsp; # [6]&nbsp; &amp; 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; require f.err\_code = 0 &amp; 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; cipher for level 3 is not set&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 629&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; Segmentation fault&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; timeout: the monitored command dumped core&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \textbf{862/1000}<BR>\end{tabular}}<BR>\end{table}</P>
<P>\todo[inline]{blabla}</P>
<P>&nbsp;</P>
<P><BR>\newpage<BR>\subsubsection{\lstinline{aioquic}}</P>
<P>(1) Since the migration is not activated, we can see that most of the visible problems of \lstinline{aioquic} are not present anymore. So the general test on streams usually passed without detecting many errors.\\</P>
<P>\noindent (2) We can also see that the errors for the transport parameter and more, generally, are not implemented but this is not surprising with the server results. For example, when we set the original destination connection ID with the wrong parameter nothing is checked.\\</P>
<P>\noindent (3) This is also the case for the \lstinline{preferred_address} transport parameter. Nothing is detected wrong, as you can see our parameter are well formed:<BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp; QUIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1322 Initial, DCID=334504622eb55b3a, SCID=024cb26de12cf949, PKN: 0, CRYPTO, PADDING&nbsp;&nbsp; \\<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 59841 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 I&nbsp; nitial, DCID=024cb26de12cf949, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 92 Initial, DCID=0000000000000001, SCID=024cb26de12cf949, PKN: 1, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 59841 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1510 Handshake, DCID=024cb26de12cf949, SCID=0000000000000001, PKN: 6, CRYPTO, PADDING \\ \hline<BR>\multicolumn{4}{|l|}{Parameter: preferred\_address (len=41)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{Type: preferred\_address (0x0d)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{Length: 41}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp;<BR>&nbsp; \multicolumn{3}{l|}{Value: 7f000001115b00000000000000007f0000017f000002115b0000000000000000007f0000…} \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{ipv4Address: localhost (127.0.0.1)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{ipv4Port: 4443}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{ipv6Address: ::7f00:1:7f00:2 (::7f00:1:7f00:2)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{ipv6Port: 4443}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{Length: 0}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{connectionId: &lt;MISSING&gt;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{} &amp; \multicolumn{3}{l|}{statelessResetToken: 00000000000000007f0000017f000001}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 202 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 4, STREAM(0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 5, STREAM(4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 6, STREAM(8)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp; \multicolumn{1}{l}{} &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 7, STREAM(12)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp; \multicolumn{1}{l}{} &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 8, STREAM(16)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp; \multicolumn{1}{l}{} &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 9, STREAM(20)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp; \multicolumn{1}{l}{} &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 10, STREAM(24)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp; \multicolumn{1}{l}{} &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 11, STREAM(28)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp; &amp; \multicolumn{1}{l}{} &amp; 90 Protected Payload (KP0), DCID=0000000000000001, PKN: 12, STREAM(32)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>4443 &amp;<BR>&nbsp; 59841 &amp;<BR>&nbsp; \multicolumn{1}{l}{} &amp;<BR>&nbsp; 88 Protected Payload (KP0), DCID=024cb26de12cf949, PKN: 12, DONE, PADDING \\ \hline<BR>\multicolumn{4}{|l|}{...}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}%<BR>}<BR>\end{table}</P>
<P>\noindent Just to remember, the draft tell us that:</P>
<P>\epigraph{\textit{"\lstinline{preferred_address} (0x0d): ... Similarly, a server MUST NOT include a zero-<BR>&nbsp;&nbsp;&nbsp; length connection ID in this transport parameter.&nbsp; A client MUST<BR>&nbsp;&nbsp;&nbsp; treat violation of these requirements as a connection error of<BR>&nbsp;&nbsp;&nbsp; type \lstinline{TRANSPORT_PARAMETER_ERROR}."}}{Draft 29 of QUIC section 18.2.}<BR>&nbsp;&nbsp;&nbsp; <BR>% \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; \textit{"\lstinline{preferred_address} (0x0d): ... Similarly, a server MUST NOT include a zero-<BR>%&nbsp;&nbsp;&nbsp;&nbsp; length connection ID in this transport parameter.&nbsp; A client MUST<BR>%&nbsp;&nbsp;&nbsp;&nbsp; treat violation of these requirements as a connection error of<BR>%&nbsp;&nbsp;&nbsp;&nbsp; type \lstinline{TRANSPORT_PARAMETER_ERROR}."}<BR>% \end{center}<BR>\noindent We find and correct this error and now \lstinline{aioquic} return the correct error code. \todo{correct in real life}</P>
<P>\noindent We can observe strange things since the implementation send use the "\lstinline{GET /index.html}" request in a batch before the handshake is done.</P>
<P>%\newpage<BR>\subsubsection{\lstinline{quinn}}</P>
<P>(1) Very good as for the server tests. However, sometimes the decryption keys are not well shared so we cannot decrypt messages that he sent. Usually, he returns us the good error codes.\\</P>
<P>\vspace{-0.2cm}</P>
<P>\noindent (2) We have also discovered that \lstinline{quinn} return us a \lstinline{CONNECTION_CLOSE} frame with error code 0 for the fact that we spend a lot of \lstinline{HANDSHAKE_DONE} once we can. We do that because nothing in the draft says that we cannot do that and this can be interesting to see how implementation reacts. The only requirements about these frames are:</P>
<P>&nbsp;&nbsp; \vspace{-0.3cm}<BR>&nbsp;&nbsp; <BR>\epigraph{"\textit{A \lstinline{HANDSHAKE_DONE} frame can only be sent by the server.&nbsp; Servers MUST<BR>&nbsp;&nbsp; NOT send a \lstinline{HANDSHAKE_DONE} frame before completing the handshake.&nbsp; A<BR>&nbsp;&nbsp; server MUST treat receipt of a \lstinline{HANDSHAKE_DONE} frame as a connection<BR>&nbsp;&nbsp; error of type \lstinline{PROTOCOL_VIOLATION}}"}{Draft 29 of QUIC section 19.20.}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace*{-1cm}<BR>&nbsp;&nbsp; <BR>\epigraph{\textit{"The \lstinline{HANDSHAKE_DONE} frame MUST be retransmitted until it is<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; acknowledged."}}{Draft 29 of QUIC section 13.3.}</P>
<P>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace*{-1cm}<BR>&nbsp;&nbsp; <BR>\epigraph{\textit{"An endpoint MUST discard its handshake keys when the TLS handshake is<BR>&nbsp;&nbsp; confirmed (Section 4.1.2).&nbsp; The server MUST send a \lstinline{HANDSHAKE_DONE}<BR>&nbsp;&nbsp; frame as soon as it completes the handshake."}}{Draft 29 of QUIC-TLS section 4.11.2}<BR>&nbsp;<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace*{-1cm}<BR>&nbsp;&nbsp; <BR>&nbsp;&nbsp; \epigraph{\textit{"Note that it is not possible to send the following frames in 0-RTT<BR>&nbsp;&nbsp; packets for various reasons: \lstinline{ACK}, \lstinline{CRYPTO}, \lstinline{HANDSHAKE_DONE}, \lstinline{NEW_TOKEN},<BR>&nbsp;&nbsp; \lstinline{PATH_RESPONSE}, and \lstinline{RETIRE_CONNECTION_ID}.&nbsp; A server MAY treat receipt<BR>&nbsp;&nbsp; of these frames in 0-RTT packets as a connection error of type<BR>&nbsp;&nbsp; \lstinline{PROTOCOL_VIOLATION}."}}{Draft 29 of QUIC-TLS section 4.}<BR>&nbsp;<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; \vspace{-0.5cm}&nbsp; <BR>% \begin{center}<BR>% \textit{"A \lstinline{HANDSHAKE_DONE} frame can only be sent by the server.&nbsp; Servers MUST<BR>%&nbsp;&nbsp; NOT send a \lstinline{HANDSHAKE_DONE} frame before completing the handshake.&nbsp; A<BR>%&nbsp;&nbsp;&nbsp;&nbsp; server MUST treat receipt of a \lstinline{HANDSHAKE_DONE} frame as a connection<BR>%&nbsp;&nbsp;&nbsp;&nbsp; error of type \lstinline{PROTOCOL_VIOLATION}."}\\<BR>&nbsp;&nbsp; <BR>%&nbsp;&nbsp; \vspace{0.3cm}<BR>%&nbsp;&nbsp; \textit{"The \lstinline{HANDSHAKE_DONE} frame MUST be retransmitted until it is<BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; acknowledged."}\\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \vspace{0.3cm} <BR>% \textit{"An endpoint MUST discard its handshake keys when the TLS handshake is<BR>%&nbsp;&nbsp; confirmed (Section 4.1.2).&nbsp; The server MUST send a \lstinline{HANDSHAKE_DONE}<BR>%&nbsp;&nbsp; frame as soon as it completes the handshake."}<BR>% \end{center}<BR>\noindent However, we understand why \lstinline{quinn} returns us an error since it could be interpreted as an attack or bugs, for example. So  the draft should be more precise about this subject. \todo{faire resumer des ambiguité et comment les contourners}<BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}<BR>% Please add the following required packages to your document preamble:<BR>% \usepackage{graphicx}</P>
<P>\begin{table}[h!]<BR>\centering<BR>%\caption{}<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\begin{tabular}{ccll|}<BR>\hline<BR>\multicolumn{1}{|c|}{\textbf{src}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{dst}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Protocol}} &amp;<BR>&nbsp; \multicolumn{1}{c|}{\textbf{Information}} \\ \hline<BR>\multicolumn{1}{|c}{59841} &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp; \multicolumn{1}{c}{QUIC} &amp;<BR>&nbsp; 1242 Initial, DCID=55feed94e19a636ec3aa407b21982368, SCID=f6c43cccb16865d2, PKN: 0, CRYPTO, PADDING \\<BR>\multicolumn{1}{|c}{4443}&nbsp; &amp; 59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1274 Initial, DCID=f6c43cccb16865d2, SCID=0000000000000000, PKN: 7, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1242 Initial, DCID=0000000000000000, SCID=f6c43cccb16865d2, PKN: 1, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{4443}&nbsp; &amp; 59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 1463 Handshake, DCID=f6c43cccb16865d2, SCID=0000000000000000, PKN: 9, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 144 Handshake, DCID=0000000000000000, SCID=f6c43cccb16865d2, PKN: 0, ACK, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 116 Protected Payload (KP0), DCID=0000000000000000, PKN: 0, NCI, STREAM(0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 88 Protected Payload (KP0), DCID=f6c43cccb16865d2, PKN: 11, DONE, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{c}{} &amp; 73 Protected Payload (KP0), DCID=0000000000000000, PKN: 1, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp;<BR>&nbsp; 4443 &amp;<BR>&nbsp;&nbsp; &amp;<BR>&nbsp; \begin{tabular}[c]{@{}l@{}}96 Protected Payload (KP0), DCID=f6c43cccb16865d2, PKN: 32, DONE, DONE, DONE, DONE, DONE, DONE,\\&nbsp; DONE, DONE, DONE, PADDING\end{tabular} \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 75 Protected Payload (KP0), DCID=0000000000000000, PKN: 2, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 103 Protected Payload (KP0), DCID=0000000000000000, PKN: 3, ACK, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 103 Protected Payload (KP0), DCID=0000000000000000, PKN: 4, ACK, NCI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 97 Protected Payload (KP0), DCID=1cca369fdcfb0484, PKN: 36, ACK, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|c}{59841} &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 97 Protected Payload (KP0), DCID=1cca369fdcfb0484, PKN: 38, DONE, STREAM(0), DONE, PADDING \\<BR>\multicolumn{1}{|c}{4443}&nbsp; &amp; 59841&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 77 Protected Payload (KP0), DCID=0000000000000000, PKN: 5, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 80 Protected Payload (KP0), DCID=0000000000000000, PKN: 6, ACK, MS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{|l}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{1}{l}{} &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 75 Protected Payload (KP0), DCID=0000000000000000, PKN: 7, CC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{4}{|l|}{CONNECTION\_CLOSE (Application) Error code: 0}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{1-1}<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Frame Type: CONNECTION\_CLOSE (Application) (0x000000000000001d)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Application Error code: 0}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Reason phrase Length: 4}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<BR>\multicolumn{1}{l|}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; \multicolumn{3}{l|}{Reason phrase: done}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \cline{2-4} <BR>\end{tabular}%<BR>}<BR>\end{table}</P>
<P>\newpage</P>
<P>\noindent A (too?) simple possible solution could be</P>
<P>\epigraph{\textit{"The \lstinline{HANDSHAKE_DONE} frame MUST be retransmitted until it is<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; acknowledged. Once done, it SHOULD not be send again. A server MUST treat receipt of a \lstinline{HANDSHAKE_DONE} frame at this stage as a connection error of type \lstinline{PROTOCOL_VIOLATION}"}}{Draft 29 of QUIC section 13.3. modified}</P>
<P>%\newpage<BR>\subsubsection{\lstinline{mvfst}}</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>\newpage<BR>\subsubsection{\lstinline{picoquic}}</P>
<P>\noindent (1) One thing interesting in the client part for \lstinline{picoquic} is that it triggers the failure of a requirement in the QUIC packet specification that we already get for other implementations in the server part but never for \lstinline{picoquic}:<BR>&nbsp;&nbsp;&nbsp; \begin{center}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{require}&nbsp; $\sim$&nbsp; \lstinline{_generating} $\;$ $\wedge$&nbsp; $\sim$&nbsp; \lstinline{queued_non_ack(scid)}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \lstinline{-&gt; ack_credit(scid) &gt; 0;&nbsp; # [5]}<BR>&nbsp;&nbsp;&nbsp; \end{center}<BR>You can see in this trace than\todo{todo}<BR>\begin{table}[h!]<BR>\centering<BR>\scriptsize&nbsp;<BR>\label{tab:my-table}<BR>\resizebox{\textwidth}{!}{%<BR>\label{tab:my-table}<BR>\begin{tabular}{|cccl|}<BR>\hline<BR>\multicolumn{1}{|c|}{src} &amp; \multicolumn{1}{c|}{dst} &amp; \multicolumn{1}{c|}{Protocol} &amp; \multicolumn{1}{c|}{\textbf{Information}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{LightCyan}<BR>4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; QUIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 1242 Initial, DCID=0000000000000001, SCID=5015dece, PKN: 0, ACK, PADDING, CRYPTO \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 1294 Handshake, DCID=0000000000000001, SCID=5015dece, PKN: 0, PADDING, CRYPTO&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 354 Handshake, DCID=0000000000000001, SCID=5015dece, PKN: 1, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 154 Handshake, DCID=5015dece, SCID=0000000000000001, PKN: 3, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 105 Protected Payload (KP0), DCID=0000000000000001, PKN: 0, DONE, NT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 16, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 74 Protected Payload (KP0), DCID=0000000000000001, PKN: 1, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 32, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>4443 &amp; 4988 &amp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 33, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>\multicolumn{1}{|l}{4443} &amp; \multicolumn{1}{l}{4988} &amp; \multicolumn{1}{l}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\multicolumn{4}{|l|}{ACK (LA: 33, ACK Delay: 37, ACK Range Count: 0, First ACK range:0)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>\end{tabular}}<BR>\end{table}</P>
<P>\noindent (2) We also discover that for no apparent reasons, \lstinline{picoquic} sometimes crash locally without sending an error. The problem is that from our point of view, since we do not receive connection error codes and since the test seems to be correct in the sense that we receive all minimum required elements, the test is considered as passed. This is a limitation of Ivy and the global view that we have. We could solve this problem by doing a post-analysis. We could also add a module that analyses the \lstinline{qlog} and the standard output of implementation. However, this approach has the problem of standardization of the logs, even with \lstinline{qlogs} there are some differences between implementation. But isn't outside our work scope?\\ \todo{plus parler des faux positive et faux negative}</P>
<P>\noindent You can see the problem in this example where no error where reported except in the logs of \lstinline{picoquic}:</P>
<P>% \begin{table}[h!]<BR>% \centering<BR>% \scriptsize&nbsp;<BR>% \label{tab:my-table}<BR>% \resizebox{\textwidth}{!}{%<BR>% \label{tab:my-table}<BR>% \begin{tabular}{|cccl|}<BR>% \hline<BR>% \multicolumn{1}{|c|}{src} &amp; \multicolumn{1}{c|}{dst} &amp; \multicolumn{1}{c|}{Protocol} &amp; \multicolumn{1}{c|}{\textbf{Information}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline \rowcolor{LightCyan}<BR>% 4988&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 4443&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; QUIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 1274 Initial, DCID=0000000000000002, SCID=0000000000000001, PKN: 7, CRYPTO, PADDING \\ \rowcolor{lightgreen}<BR>% 4443 &amp; 4988 &amp;&nbsp; &amp; 1242 Initial, DCID=0000000000000001, SCID=5015dece, PKN: 0, ACK, PADDING, CRYPTO \\ \rowcolor{lightgreen}<BR>% 4443 &amp; 4988 &amp;&nbsp; &amp; 1294 Handshake, DCID=0000000000000001, SCID=5015dece, PKN: 0, PADDING, CRYPTO&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>% 4443 &amp; 4988 &amp;&nbsp; &amp; 354 Handshake, DCID=0000000000000001, SCID=5015dece, PKN: 1, PADDING, CRYPTO&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4988 &amp; 4443 &amp;&nbsp; &amp; 154 Handshake, DCID=5015dece, SCID=0000000000000001, PKN: 3, CRYPTO, PADDING&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>% 4443 &amp; 4988 &amp;&nbsp; &amp; 105 Protected Payload (KP0), DCID=0000000000000001, PKN: 0, DONE, NT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 16, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>% 4443 &amp; 4988 &amp;&nbsp; &amp; 74 Protected Payload (KP0), DCID=0000000000000001, PKN: 1, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 32, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>% 4443 &amp; 4988 &amp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000001, PKN: 2, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{LightCyan}<BR>% 4988 &amp; 4443 &amp;&nbsp; &amp; 1274 Protected Payload (KP0), DCID=5015dece, PKN: 33, ACK, PADDING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \rowcolor{lightgreen}<BR>% \multicolumn{1}{|l}{4443} &amp; \multicolumn{1}{l}{4988} &amp; \multicolumn{1}{l}{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; 73 Protected Payload (KP0), DCID=0000000000000001, PKN: 3, ACK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \multicolumn{4}{|l|}{ACK (LA: 33, ACK Delay: 37, ACK Range Count: 0, First ACK range:0)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\ \hline<BR>% \end{tabular}}<BR>% \end{table}</P>
<P>\begin{lstlisting}[<BR>&nbsp;&nbsp;&nbsp; basicstyle=\footnotesize, %or \small or \footnotesize etc.<BR>]<BR>6ed30c9cf9a32709: T= 19.337266, cwin: 5008,flight: 403,nb_ret: 19,rtt_min: 1414454,rtt: 3000892,rtt_var: 2635210,max_ack_delay: 0,state: 14<BR>6ed30c9cf9a32709: Sending 55 bytes to 127.0.0.1:4443 at T=19.337266 (5c246da3f7367)<BR>6ed30c9cf9a32709: T= 20.658154, Lost packet type 6, number 24, size 39, DCID &lt;0000000000000000&gt;, reason: timer<BR>Received a request to close the connection.<BR>Connection end with local error 0x434.<BR>Quic Bit was NOT greased by the client.<BR>Quic Bit was NOT greased by the server.<BR>ECN was not received.<BR>ECN was not acknowledged.<BR>Received 8 bytes in 20.658195 seconds, 0.000003 Mbps.<BR>6ed30c9cf9a32709: Received 8 bytes in 20.658195 seconds, 0.000003 Mbps.<BR>Client exit with code = -1<BR>\end{lstlisting}</P>
<P>\noindent So now we have to be careful while analysing the data. To counter we locally in our python analysis script parse the output of implementation to detect that but this is not directly integrated to Ivy for now since it is too much implementation specific.</P>
<P>\subsubsection{\lstinline{quic-go}}</P>
<P>&nbsp;</P>
<P>\subsubsection{\lstinline{quant}}<BR>\subsubsection{\lstinline{quiche}}<BR>\subsubsection{\lstinline{lsquic}}</P>
<P>\newpage<BR>%\end{comment}</P>
<P><BR>\subsection{Summary}</P>
<P>\noindent Let's summarize. The first point to highlight is that we were unable to test all implementations. It is the case for the server test with \lstinline{lsquic}. When we look at other testing tools used for QUIC, this seems normal. We also decide to focus on the type of error rather than the number of errors since it could be misinterpreted or lead to a false conclusion.\\</P>
<P>\noindent We can also see that the tested implementation by McMillan evolve well. Fewer errors are reported than for the draft 18. For the streams management, most errors that were found in draft 18 disappear. \\</P>
<P>\noindent We manage to find different types of errors such as internal errors or requirements in the draft that are not followed. For the internal errors, we spotted mostly memory errors from the implementations. As expected, these errors were principally present in an implementation written in a low-level programming language. \\</P>
<P>\noindent When we considered the management of the errors by the implementation, we could observe that most of the time either the features are well implemented, either nothing was done. One representative implementation is \lstinline{picoquic} that react well for some scenarios such as the omission of the \lstinline{original_destination_connection_id} transport parameter. Not for those where we put an invalid value, for example with the \lstinline{active_connection_id_limit} transport parameter where the value is not checked.\\</P>
<P>\noindent There is also the fact that some implementations send error codes with the wrong message. However these problems can only be found with a post-analysis of the results and not directly with Ivy.\\</P>
<P>\noindent We can also see that some implementations seem to disable voluntarily  some features concerning the errors in the transport parameter. \lstinline{quiche} is the perfect example since for all these tests it never sends an error. One hypothesis is that this is voluntary since \lstinline{quiche} it is made by Cloudflare which is a big player in the security industry. A hypothesis is that they probably do nothing since it could reveal useful information that an attacker could eventually use.\\ % For example if an attacker try to do fuzzing with these transport parameter to crash the system, then never reporting errors is a way to hide information about the potential vulnerabilities. We based this idea on a mitigation technique that can be used against SQL injection and which consist to not disclose more information than necessary since for this attack, we should guess the architecture of the database with some kind of fuzzing. However, this way of proceeding can be annoying if an application need these error messages. \todo{change a little bit this is repetition}\\</P>
<P>\noindent Another important point to highlight is the migration of clients. We have seen that there is a lot of ambiguity in the draft for this part and this is reflected in the different implementations. One of the biggest and most important ambiguities is about the validation of the \lstinline{PATH_CHALLENGE}. Just to remember, here are the requirements that are ambiguous:</P>
<P>% \begin{tiny}<BR>% \epigraph{\textit{"A new address is considered valid when a \lstinline{PATH_RESPONSE} frame is<BR>%&nbsp;&nbsp; received that contains the data that was sent in a previous<BR>%&nbsp;&nbsp; \lstinline{PATH_CHALLENGE}.&nbsp; Receipt of an acknowledgment for a packet containing<BR>%&nbsp;&nbsp; a \lstinline{PATH_CHALLENGE} frame is not adequate validation, since the<BR>%&nbsp;&nbsp; acknowledgment can be spoofed by a malicious peer. \textbf{Note that receipt on a different local address does not result in<BR>%&nbsp;&nbsp; path validation failure}, as it might be a result of a forwarded<BR>%&nbsp;&nbsp; packet (see Section 9.3.3) or misrouting.&nbsp; It is possible that a<BR>%&nbsp;&nbsp; valid \lstinline{PATH_RESPONSE} might be received in the future."}}{Draft 29 of QUIC section 8.5}<BR>% \end{tiny}</P>
<P>%\vspace{-0.5cm}</P>
<P>&nbsp;&nbsp; \epigraph{\textit{"Path validation succeeds when a \lstinline{PATH_RESPONSE} frame is received that<BR>&nbsp; contains the data that was sent in a previous \lstinline{PATH_CHALLENGE} frame.<BR>&nbsp; \textbf{A \lstinline{PATH_RESPONSE} frame received on any network path validates the path<BR>&nbsp; on which the \lstinline{PATH_CHALLENGE} was sent.}"}}{Draft 34 of QUIC section 8.2.3. [R1]}<BR>&nbsp; <BR>&nbsp;% \newpage</P>
<P>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; \epigraph{\textit{"On receiving a \lstinline{PATH_CHALLENGE} frame, an endpoint MUST respond by<BR>&nbsp;&nbsp; echoing the data contained in the \lstinline{PATH_CHALLENGE} frame in a<BR>&nbsp;&nbsp; \lstinline{PATH_RESPONSE} frame.&nbsp; An endpoint MUST NOT delay transmission of a<BR>&nbsp;&nbsp; packet containing a \lstinline{PATH_RESPONSE} frame unless constrained by<BR>&nbsp;&nbsp; congestion control.&nbsp; \textbf{A \lstinline{PATH_RESPONSE} frame MUST be sent on the network path where the \lstinline{PATH_CHALLENGE} was received}.&nbsp; This ensures that path validation by a<BR>&nbsp;&nbsp; peer only succeeds if the path is functional in both directions.<BR>&nbsp;&nbsp; \textbf{This requirement MUST NOT be enforced} by the endpoint that initiates<BR>&nbsp;&nbsp; path validation as that would enable an attack on migration;"}}{Draft 34 of QUIC section 8.2.2. [R2]}<BR>&nbsp;&nbsp; <BR>&nbsp; \noindent&nbsp; We can see that are sure with these statements if we can or cannot validate a migration when we receive a \lstinline{PATH_RESPONSE} on a different network path than there \lstinline{PATH_CHALLENGE} was sent. This is reflected in the tested implementation where some consider that this is not allowed and others that this allowed. This is also reflected in our modelization of QUIC with Ivy since we still have to make a choice, as for the QUIC developer, on what rules to enforce.\\<BR>&nbsp; <BR>&nbsp; \noindent Some RFC rules should be more precise about some situations and changed. For example, <BR>&nbsp; <BR>&nbsp; \epigraph{"\textit{In this document, the TLS handshake is considered confirmed at the<BR>&nbsp;&nbsp; server when the handshake completes.&nbsp; At the client, the handshake is<BR>&nbsp;&nbsp; considered confirmed when a \lstinline{HANDSHAKE_DONE} frame is received."}}{Draft 29 of QUIC-TLS section 4.1.2.}</P>
<P><BR>%&nbsp;&nbsp;&nbsp;&nbsp; \begin{center}<BR>%&nbsp;&nbsp;&nbsp;&nbsp; "\textit{In this document, the TLS handshake is considered confirmed at the<BR>%&nbsp;&nbsp; server when the handshake completes.&nbsp; At the client, the handshake is<BR>%&nbsp;&nbsp; considered confirmed when a \lstinline{HANDSHAKE_DONE} frame is received.}"&nbsp;&nbsp;&nbsp;&nbsp; <BR>%&nbsp;&nbsp;&nbsp;&nbsp; \end{center}<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; \noindent&nbsp; So from, the client's point of view, we can consider the handshake as confirmed either when we received the \lstinline{HANDSHAKE_DONE} frame or either when we \lstinline{ACK} the packet containing this frame. We could replace this rule with this one, for example :<BR>&nbsp; <BR>&nbsp;&nbsp; \epigraph{"\textit{In this document, the TLS handshake is considered confirmed at the<BR>&nbsp;&nbsp; server when the handshake completes.&nbsp; At the client, the handshake is<BR>&nbsp;&nbsp; considered confirmed when a \lstinline{HANDSHAKE_DONE} frame is received \textbf{and acknowledge}."}}{Draft 29 of QUIC-TLS section 4.1.2. modified}<BR>&nbsp;&nbsp; <BR>&nbsp; \noindent However, even this solution is far from perfect since even if we \lstinline{ACK} the frame we are not sure that both client and server will be synchronized on their state. However, for the migration since we would need to wait until we acknowledged the \lstinline{HANDSHAKE_DONE} before starting the migration, we should respect the RFC. \\<BR>&nbsp;&nbsp; <BR>&nbsp; \noindent We also found that there are sometimes no indications in the RFC on what to do in some situations. Here again we can see that the implementations have to make a choice by themselves. But  this is not good since the RFC should at least consider the situation then let the choice to the developer. A good example of that is what to do if someone retransmits \lstinline{HANDSHAKE_DONE} frame "too much" times? Should we interpret that as an attack? Should we report an error? Should we do nothing since nothing is specified? Some implementations like \lstinline{picoquic} deciding to do nothing, some of them report errors like \lstinline{quinn}. \\<BR>&nbsp; <BR>&nbsp; \noindent Some implementations also have small problems with their ACK management since sometimes for no apparent reason, some of them acknowledge the same packet twice in a short period of time.\\<BR>&nbsp; <BR>&nbsp; \noindent Finally, some false positives are found. It is mainly due to the performance problem of Ivy. A good example is with \lstinline{quic-go} where a small-time interval and packet batch cause the detection of a false positive. This means that we should never use the result provided by Ivy directly. A post-analysis of the result is always required. \\<BR>&nbsp; <BR>&nbsp; <BR>&nbsp; \todo[inline]{Review: dire dans cette partie que les resultats concordent +- avec ceux de mcmillan ?}<BR>&nbsp; \todo[inline]{Review: Le summary n'est pas totalement fini car il faut encore la partie client}<BR>&nbsp; \todo[inline]{Review: On compte mettre des liens vers differentes trace et example présenter nous n'avons pas encore eu le temps de faire ca}<BR>&nbsp; %\todo[inline]{Review: On ne parle pas de notre extension tester car elle n'est pas totalement fonctionnel}<BR>&nbsp; <BR>&nbsp; <BR>&nbsp; %\noindent <BR>&nbsp; <BR>&nbsp; %\noindent The main advantages of Ivy compares to other tools is that by doing formal verification, we can easily detect all ambiguity in the draft which is no ndent Howeve t as trivial with other techniques. However this imply a long research time in the specification to be sure that the model is good.\\<BR>&nbsp;<BR>&nbsp; %\noindent However, there are a lot of limitations such as the time needed for these analysis which is not very scalable for now.\todo{todo}</P>
<P><BR>&nbsp;</P></BODY></HTML>