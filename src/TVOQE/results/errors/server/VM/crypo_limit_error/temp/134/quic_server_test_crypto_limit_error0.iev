SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quinn
[1,0,0,238,3,3,135,138,6,82,126,87,128,221,227,136,129,67,91,90,29,47,20,75,243,58,157,251,38,109,124,88,111,197,182,109,68,19,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,244,142,73,252,212,157,155,25,93,79,201,225,214,43,227,120,247,164,169,44,184,248,56,103,7,225,201,181,214,20,66,30,100,180,208,116,17,167,49,177,3,222,4,52,189,167,108,78,39,183,161,34,31,26,90,63,42,102,212,245,177,221,169,195,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,139,29,28,154,1,4,139,29,28,151,6,2,96,0,7,4,139,29,28,154,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,201,15]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x878a0652,random_bytes:[0x7e,0x57,0x80,0xdd,0xe3,0x88,0x81,0x43,0x5b,0x5a,0x1d,0x2f,0x14,0x4b,0xf3,0x3a,0x9d,0xfb,0x26,0x6d,0x7c,0x58,0x6f,0xc5,0xb6,0x6d,0x44,0x13]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xf4,0x8e,0x49,0xfc,0xd4,0x9d,0x9b,0x19,0x5d,0x4f,0xc9,0xe1,0xd6,0x2b,0xe3,0x78,0xf7,0xa4,0xa9,0x2c,0xb8,0xf8,0x38,0x67,0x7,0xe1,0xc9,0xb5,0xd6,0x14,0x42,0x1e,0x64,0xb4,0xd0,0x74,0x11,0xa7,0x31,0xb1,0x3,0xde,0x4,0x34,0xbd,0xa7,0x6c,0x4e,0x27,0xb7,0xa1,0x22,0x1f,0x1a,0x5a,0x3f,0x2a,0x66,0xd4,0xf5,0xb1,0xdd,0xa9,0xc3]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0xb1d1c9a}},{max_idle_timeout:{seconds_16:0xb1d1c97}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0xb1d1c9a}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0xc90f}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x87,0x8a,0x6,0x52,0x7e,0x57,0x80,0xdd,0xe3,0x88,0x81,0x43,0x5b,0x5a,0x1d,0x2f,0x14,0x4b,0xf3,0x3a,0x9d,0xfb,0x26,0x6d,0x7c,0x58,0x6f,0xc5,0xb6,0x6d,0x44,0x13,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xf4,0x8e,0x49,0xfc,0xd4,0x9d,0x9b,0x19,0x5d,0x4f,0xc9,0xe1,0xd6,0x2b,0xe3,0x78,0xf7,0xa4,0xa9,0x2c,0xb8,0xf8,0x38,0x67,0x7,0xe1,0xc9,0xb5,0xd6,0x14,0x42,0x1e,0x64,0xb4,0xd0,0x74,0x11,0xa7,0x31,0xb1,0x3,0xde,0x4,0x34,0xbd,0xa7,0x6c,0x4e,0x27,0xb7,0xa1,0x22,0x1f,0x1a,0x5a,0x3f,0x2a,0x66,0xd4,0xf5,0xb1,0xdd,0xa9,0xc3,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x8b,0x1d,0x1c,0x9a,0x1,0x4,0x8b,0x1d,0x1c,0x97,0x6,0x2,0x60,0,0x7,0x4,0x8b,0x1d,0x1c,0x9a,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0xc9,0xf],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3a,0x76]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4b,0x92]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc,0xca,0x7]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xef,0x1d,0xdc]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0x4e,0xa6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0xb4,0xf3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x72,0x80]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0xa7]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0x55]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf9,0x8e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x45]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0x1a,0x99]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x30,0x39]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76,0x70]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0x31,0x7a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35,0x6b]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d,0xd3,0x7c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xde,0xf3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0xf9,0x8]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8,0xf6,0x58]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0xc0,0x1b]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0x6d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7a]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e,0xc6,0xfa]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xba]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdc,0xe0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b,0x80,0xe]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x25,0xef]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2c]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xc9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd5,0x3d,0x2a]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0x5a,0x4b]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53,0x48]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd7,0xfc,0x83]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x15,0x6a,0x45]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc5,0xb4,0xf3]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe2,0x3b]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0xbc]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0xdc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0xe5]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x79]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x88,0x64,0x22]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc9,0x78]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0xf0]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6f,0x69]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa2,0xd6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea,0xd2]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xeb,0xbc]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe0,0x9e]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d,0xcf]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x49,0xa,0xe6]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x97,0xd2,0x84]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xe0]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf5,0x5d]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0x5f,0x21]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x43]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0,0x6e]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x74,0x68]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xb6]},1,1,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc3,0xf3,0x75]},1,2,handshake,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0x7b]},1,2,handshake,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
