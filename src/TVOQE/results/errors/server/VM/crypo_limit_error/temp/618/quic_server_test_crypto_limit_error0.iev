SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL quiche
[1,0,0,238,3,3,109,102,132,58,110,104,108,113,165,156,254,242,223,209,90,107,114,83,148,149,1,105,70,151,87,15,39,167,110,118,144,161,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,232,116,190,248,246,141,138,149,165,6,141,164,128,224,159,193,234,44,1,45,205,238,62,251,160,28,173,120,188,196,177,46,58,126,143,191,61,157,178,34,250,38,214,241,51,23,231,101,249,178,68,86,65,23,72,210,195,210,247,40,185,79,93,204,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,132,167,62,109,1,4,132,167,62,103,6,2,96,0,7,4,132,167,62,109,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,145,11]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x6d66843a,random_bytes:[0x6e,0x68,0x6c,0x71,0xa5,0x9c,0xfe,0xf2,0xdf,0xd1,0x5a,0x6b,0x72,0x53,0x94,0x95,0x1,0x69,0x46,0x97,0x57,0xf,0x27,0xa7,0x6e,0x76,0x90,0xa1]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xe8,0x74,0xbe,0xf8,0xf6,0x8d,0x8a,0x95,0xa5,0x6,0x8d,0xa4,0x80,0xe0,0x9f,0xc1,0xea,0x2c,0x1,0x2d,0xcd,0xee,0x3e,0xfb,0xa0,0x1c,0xad,0x78,0xbc,0xc4,0xb1,0x2e,0x3a,0x7e,0x8f,0xbf,0x3d,0x9d,0xb2,0x22,0xfa,0x26,0xd6,0xf1,0x33,0x17,0xe7,0x65,0xf9,0xb2,0x44,0x56,0x41,0x17,0x48,0xd2,0xc3,0xd2,0xf7,0x28,0xb9,0x4f,0x5d,0xcc]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x4a73e6d}},{max_idle_timeout:{seconds_16:0x4a73e67}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x4a73e6d}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x910b}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x6d,0x66,0x84,0x3a,0x6e,0x68,0x6c,0x71,0xa5,0x9c,0xfe,0xf2,0xdf,0xd1,0x5a,0x6b,0x72,0x53,0x94,0x95,0x1,0x69,0x46,0x97,0x57,0xf,0x27,0xa7,0x6e,0x76,0x90,0xa1,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xe8,0x74,0xbe,0xf8,0xf6,0x8d,0x8a,0x95,0xa5,0x6,0x8d,0xa4,0x80,0xe0,0x9f,0xc1,0xea,0x2c,0x1,0x2d,0xcd,0xee,0x3e,0xfb,0xa0,0x1c,0xad,0x78,0xbc,0xc4,0xb1,0x2e,0x3a,0x7e,0x8f,0xbf,0x3d,0x9d,0xb2,0x22,0xfa,0x26,0xd6,0xf1,0x33,0x17,0xe7,0x65,0xf9,0xb2,0x44,0x56,0x41,0x17,0x48,0xd2,0xc3,0xd2,0xf7,0x28,0xb9,0x4f,0x5d,0xcc,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x84,0xa7,0x3e,0x6d,0x1,0x4,0x84,0xa7,0x3e,0x67,0x6,0x2,0x60,0,0x7,0x4,0x84,0xa7,0x3e,0x6d,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x91,0xb],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91,0xc4,0x47]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x13,0xf2]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x2b]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xed,0xb6]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0xf7,0x89]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11,0x6f,0x35]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92,0x6a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xce,0x97,0x31]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6a,0x11,0xea]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x63]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6e]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x41]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0x2d,0xb0]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x54]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c,0x25]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x27,0x5b,0x8b]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3c,0x5f,0xb2]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0x9f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1,0xcd]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0xfb]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7,0x44,0xa7]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5c,0x4c]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb0,0x2e]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd9,0x32]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x38]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3b,0x87,0xa6]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x80,0x25]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x61]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0xa9]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xae,0x3e]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9b,0xe6,0xdd]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x7e,0xb4]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x16,0x12]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3,0xf4,0x44]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x3f,0x3d,0x58]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x59,0x92]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x18,0x37]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7c]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0x93]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7,0x2a]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x40,0xef,0xa2]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x84,0x70,0x8f]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xd2,0x2b]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95,0xbf,0x8]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1f,0x30,0xef]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9e,0x95,0x3]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x64,0x9e]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc6,0x9]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0x10,0xd0]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34,0xbe]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf6,0xab]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x86,0x7e,0x3c]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa1,0x42,0x27]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4,0xe4]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x90,0xa0,0xd]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89,0x81]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf,0x33]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0xc7]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcd,0x34]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xaa,0x3d]},1,6,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa]},1,2,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
