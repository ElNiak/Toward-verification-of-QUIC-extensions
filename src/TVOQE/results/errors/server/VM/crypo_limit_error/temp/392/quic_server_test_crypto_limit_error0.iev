SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL picoquic
[1,0,0,238,3,3,139,133,72,208,67,119,164,231,95,14,29,78,2,54,134,46,79,112,245,64,68,208,105,156,163,142,170,232,150,225,172,79,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,237,245,147,59,143,115,43,187,146,32,250,101,28,51,47,35,91,103,235,237,162,117,234,177,93,188,177,172,155,66,109,75,53,57,136,151,221,40,57,214,177,197,60,234,173,121,53,234,219,122,65,196,183,155,58,145,167,176,67,143,26,66,148,2,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,128,75,49,59,1,4,128,75,49,53,6,2,96,0,7,4,128,75,49,59,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,114,105]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0x8b8548d0,random_bytes:[0x43,0x77,0xa4,0xe7,0x5f,0xe,0x1d,0x4e,0x2,0x36,0x86,0x2e,0x4f,0x70,0xf5,0x40,0x44,0xd0,0x69,0x9c,0xa3,0x8e,0xaa,0xe8,0x96,0xe1,0xac,0x4f]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0xed,0xf5,0x93,0x3b,0x8f,0x73,0x2b,0xbb,0x92,0x20,0xfa,0x65,0x1c,0x33,0x2f,0x23,0x5b,0x67,0xeb,0xed,0xa2,0x75,0xea,0xb1,0x5d,0xbc,0xb1,0xac,0x9b,0x42,0x6d,0x4b,0x35,0x39,0x88,0x97,0xdd,0x28,0x39,0xd6,0xb1,0xc5,0x3c,0xea,0xad,0x79,0x35,0xea,0xdb,0x7a,0x41,0xc4,0xb7,0x9b,0x3a,0x91,0xa7,0xb0,0x43,0x8f,0x1a,0x42,0x94,0x2]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x4b313b}},{max_idle_timeout:{seconds_16:0x4b3135}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x4b313b}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x7269}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0x8b,0x85,0x48,0xd0,0x43,0x77,0xa4,0xe7,0x5f,0xe,0x1d,0x4e,0x2,0x36,0x86,0x2e,0x4f,0x70,0xf5,0x40,0x44,0xd0,0x69,0x9c,0xa3,0x8e,0xaa,0xe8,0x96,0xe1,0xac,0x4f,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0xed,0xf5,0x93,0x3b,0x8f,0x73,0x2b,0xbb,0x92,0x20,0xfa,0x65,0x1c,0x33,0x2f,0x23,0x5b,0x67,0xeb,0xed,0xa2,0x75,0xea,0xb1,0x5d,0xbc,0xb1,0xac,0x9b,0x42,0x6d,0x4b,0x35,0x39,0x88,0x97,0xdd,0x28,0x39,0xd6,0xb1,0xc5,0x3c,0xea,0xad,0x79,0x35,0xea,0xdb,0x7a,0x41,0xc4,0xb7,0x9b,0x3a,0x91,0xa7,0xb0,0x43,0x8f,0x1a,0x42,0x94,0x2,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x80,0x4b,0x31,0x3b,0x1,0x4,0x80,0x4b,0x31,0x35,0x6,0x2,0x60,0,0x7,0x4,0x80,0x4b,0x31,0x3b,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x72,0x69],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x6,0x97]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x35,0xfb,0xa]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb,0x5d,0x7f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x96,0x22,0x9]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1d,0x5,0xa]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1b,0x88]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xdb,0x8c]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff,0xe3,0x69]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe8,0xba,0x63]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0x1f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x76,0x87,0x66]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcc]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x37,0x54,0xb]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4d]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb2]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x19,0xa8]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x98,0x35]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x58]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x26,0xa6,0x5b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf7]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2f,0xc0]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8,0x21]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x31,0xfc,0xb]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x28,0xe7,0x99]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d,0x7d,0x70]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x33]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xea]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0x1d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x11,0x80]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0x2f]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9c,0xdf,0x7]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xff]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x23,0xe0,0x4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf8,0x2]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x68,0xd6]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2d,0xb9,0x4d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x67]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x1a,0x25]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4,0x42,0x18]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x11]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x38]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2b]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x12]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa9]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x95]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0x1,0x14]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1e]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x48,0x3d]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9d,0xcb]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbe]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9f,0x1a,0xa2]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf4]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb1,0x5c,0xd7]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe5]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x83,0x4]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x46,0x34,0x4]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xe7,0x17]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x17,0x30]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x60,0x3b,0xe9]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2,0xa4,0xb8]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0xa9,0x47]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xfb,0x1a,0xdc]},1,5,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4a,0x63]},1,1,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xca,0xd3,0x12]},1,5,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
