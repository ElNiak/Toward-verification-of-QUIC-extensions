SOCKET 6
binding id: client addr: 2130706433 port: 4987
SOCKET 7
binding id: client_alt addr: 2130706433 port: 4988
TEST_ALPN hq-29
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: name 1: "transport_parameters"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: name 1: "seconds_16"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: name 1: "stream_pos_32"
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: name 1: "scid"
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: name 1: "stream_id_16"
TEST_IMPL mvfst
[1,0,0,238,3,3,10,233,39,78,104,135,224,51,89,97,239,97,246,124,164,93,143,121,189,162,49,99,88,86,81,195,60,177,111,1,177,72,0,0,6,19,2,19,1,19,3,1,0,0,191,0,51,0,71,0,69,0,23,0,65,4,50,175,134,13,116,119,246,201,206,116,36,57,159,55,151,221,65,14,132,17,212,230,115,150,210,101,141,62,160,31,209,221,160,180,159,108,56,132,182,116,20,107,108,39,184,20,141,4,25,23,43,184,183,126,21,52,166,17,177,11,0,240,248,53,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,23,0,29,255,165,0,44,5,2,96,0,4,4,133,214,234,208,1,4,133,214,234,206,6,2,96,0,7,4,133,214,234,208,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,66,46]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
deser-open_field: name : "tls.client_hello"
deser-open_field: name : "client_version"
deser-open_field: name : "rand_info"
deser-open_field: name : "gmt_unix_time"
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: name : "cipher_suites"
deser-open_field: name : "compression_methods"
deser-open_field: name : "extensions"
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
deser-open_field: name : "tls.unknown_extension"
deser-open_field: name : "etype"
deser-open_field: name : "content"
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
deser-open_field: name : "quic_transport_parameters"
deser-open_field: name : "transport_parameters"
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: name : "stream_pos_32"
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_data"
deser-open_field: name : "stream_pos_32"
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "max_idle_timeout"
deser-open_field: name : "seconds_16"
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: name : "stream_pos_32"
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: name : "stream_pos_32"
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
deser-open_field: name : "initial_source_connection_id"
deser-open_field: name : "scid"
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "disable_active_migration"
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: name : "stream_id_16"
< tls.handshake_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},{tls.client_hello:{client_version:0x303,rand_info:{gmt_unix_time:0xae9274e,random_bytes:[0x68,0x87,0xe0,0x33,0x59,0x61,0xef,0x61,0xf6,0x7c,0xa4,0x5d,0x8f,0x79,0xbd,0xa2,0x31,0x63,0x58,0x56,0x51,0xc3,0x3c,0xb1,0x6f,0x1,0xb1,0x48]},session_id:[],cipher_suites:[0x1302,0x1301,0x1303],compression_methods:[0],extensions:[{tls.unknown_extension:{etype:0x33,content:[0,0x45,0,0x17,0,0x41,0x4,0x32,0xaf,0x86,0xd,0x74,0x77,0xf6,0xc9,0xce,0x74,0x24,0x39,0x9f,0x37,0x97,0xdd,0x41,0xe,0x84,0x11,0xd4,0xe6,0x73,0x96,0xd2,0x65,0x8d,0x3e,0xa0,0x1f,0xd1,0xdd,0xa0,0xb4,0x9f,0x6c,0x38,0x84,0xb6,0x74,0x14,0x6b,0x6c,0x27,0xb8,0x14,0x8d,0x4,0x19,0x17,0x2b,0xb8,0xb7,0x7e,0x15,0x34,0xa6,0x11,0xb1,0xb,0,0xf0,0xf8,0x35]}},{tls.unknown_extension:{etype:0,content:[0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65]}},{tls.unknown_extension:{etype:0x10,content:[0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39]}},{tls.unknown_extension:{etype:0x2b,content:[0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a]}},{tls.unknown_extension:{etype:0xd,content:[0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1]}},{tls.unknown_extension:{etype:0xa,content:[0,0x4,0,0x17,0,0x1d]}},{quic_transport_parameters:{transport_parameters:[{initial_max_stream_data_bidi_local:{stream_pos_32:0x2000}},{initial_max_data:{stream_pos_32:0x5d6ead0}},{max_idle_timeout:{seconds_16:0x5d6eace}},{initial_max_stream_data_bidi_remote:{stream_pos_32:0x2000}},{initial_max_stream_data_uni:{stream_pos_32:0x5d6ead0}},{initial_source_connection_id:{scid:1}},{disable_active_migration:{}},{initial_max_stream_id_bidi:{stream_id_16:0x422e}}]}}]}})
< show_tls_send_event({protocol:udp,addr:0x7f000001,port:0x137b},{protocol:udp,addr:0x7f000001,port:0x115b},1,0,[0x1,0,0,0xee,0x3,0x3,0xa,0xe9,0x27,0x4e,0x68,0x87,0xe0,0x33,0x59,0x61,0xef,0x61,0xf6,0x7c,0xa4,0x5d,0x8f,0x79,0xbd,0xa2,0x31,0x63,0x58,0x56,0x51,0xc3,0x3c,0xb1,0x6f,0x1,0xb1,0x48,0,0,0x6,0x13,0x2,0x13,0x1,0x13,0x3,0x1,0,0,0xbf,0,0x33,0,0x47,0,0x45,0,0x17,0,0x41,0x4,0x32,0xaf,0x86,0xd,0x74,0x77,0xf6,0xc9,0xce,0x74,0x24,0x39,0x9f,0x37,0x97,0xdd,0x41,0xe,0x84,0x11,0xd4,0xe6,0x73,0x96,0xd2,0x65,0x8d,0x3e,0xa0,0x1f,0xd1,0xdd,0xa0,0xb4,0x9f,0x6c,0x38,0x84,0xb6,0x74,0x14,0x6b,0x6c,0x27,0xb8,0x14,0x8d,0x4,0x19,0x17,0x2b,0xb8,0xb7,0x7e,0x15,0x34,0xa6,0x11,0xb1,0xb,0,0xf0,0xf8,0x35,0,0,0,0xf,0,0xd,0,0,0xa,0x73,0x65,0x72,0x76,0x65,0x72,0x6e,0x61,0x6d,0x65,0,0x10,0,0x8,0,0x6,0x5,0x68,0x71,0x2d,0x32,0x39,0,0x2b,0,0x9,0x8,0x3,0x4,0x7f,0x1c,0x7f,0x1b,0x7f,0x1a,0,0xd,0,0xa,0,0x8,0x8,0x4,0x4,0x3,0x4,0x1,0x2,0x1,0,0xa,0,0x6,0,0x4,0,0x17,0,0x1d,0xff,0xa5,0,0x2c,0x5,0x2,0x60,0,0x4,0x4,0x85,0xd6,0xea,0xd0,0x1,0x4,0x85,0xd6,0xea,0xce,0x6,0x2,0x60,0,0x7,0x4,0x85,0xd6,0xea,0xd0,0xf,0x8,0,0,0,0,0,0,0,0x1,0xc,0,0x8,0x4,0x80,0,0x42,0x2e],0,initial)
> frame.crypto.handle({offset:0,length:0,data:[0x9c]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc4]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7f,0xd2]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92,0xbb,0xe6]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x6c,0x59,0xe6]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8d]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x47,0x9]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xcf,0xe8]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc7]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x9,0xeb]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x13]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4,0xde]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd6,0x29]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4f]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb4,0xa0]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x7e,0xe9]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd4,0x11,0xb1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x34]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0x50,0x32]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x53]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xd5,0x48]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf2]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x2f,0xac]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x69]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf1]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa4]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd8]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb7,0x85,0xe5]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xac,0x79,0x2a]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x89]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x22]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xee,0xdf,0x56]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2a,0xda]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x73,0x75,0x2b]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa6,0xa5]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a,0x14]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x10,0xe9,0xfe]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4e,0xd3,0xd4]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x75,0x84]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x66]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x24,0xef]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd0,0xf2]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82,0xf2]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x92,0xda]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xc0]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5f,0x93]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x25,0xa1,0xcb]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xa7]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x82]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x93,0x1d]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x56,0xa1]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x91]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xf3,0x25]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x1a,0xf,0x5e]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xbb,0x63]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xd,0x29]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x2e,0x7]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x8a]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x4c]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x42,0xe1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[]},1,4,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0x5a,0xf1]},1,2,one_rtt,0)
> frame.crypto.handle({offset:0,length:0,data:[0xb9]},1,2,one_rtt,0)
assumption_failed("quic_server_test_crypto_limit_error.ivy: line 272")
assumption_failed(""    require is_crypto_buffer_exceeded | is_frame_encoding_error;
"")
ivy_return_code(1)
